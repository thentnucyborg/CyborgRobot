/*
Adept MobileRobots Robotics Interface for Applications (ARIA)
Copyright (C) 2004-2005 ActivMedia Robotics LLC
Copyright (C) 2006-2010 MobileRobots Inc.
Copyright (C) 2011-2015 Adept Technology, Inc.
Copyright (C) 2016-2018 Omron Adept Technologies, Inc.

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

If you wish to redistribute ARIA under different terms, contact 
Adept MobileRobots for information about a commercial version of ARIA at 
robots@mobilerobots.com or 
Adept MobileRobots, 10 Columbia Drive, Amherst, NH 03031; +1-603-881-7960
*/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGPYTHON
#define SWIGPYTHON
#endif

#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02050000
#define PyInt_FromSize_t(x) PyInt_FromLong((long)x)
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *val = NULL, *type = NULL, *tb = NULL;
      PyErr_Fetch(&val, &type, &tb);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        res = SWIG_Python_CallFunctor(destroy, tmp);
        Py_DECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(val, type, tb);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,				    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,				    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version_tag */
#endif
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
#if PY_VERSION_HEX >= 0x02050000
      0,                                    /* tp_prev */
#endif
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version_tag */
#endif
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
#if PY_VERSION_HEX >= 0x02050000
      0,                                    /* tp_prev */
#endif
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
    if (!SWIG_IsOK(res) && obj == Py_None) {
      if (ptr)
        *ptr = 0;
      if (PyErr_Occurred())
        PyErr_Clear();
      res = SWIG_OK;
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = ((PyTypeObject*) data->newargs)->tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    if (inst) {
      PyObject_SetAttr(inst, SWIG_This(), swig_this);
      Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst = 0;
  PyObject *dict = PyDict_New();
  if (dict) {
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError, "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError, "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 


/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Python proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swig.
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/*
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR

namespace Swig {
  class Director;
  SWIGINTERN std::map<void *, Director *>& get_rtdir_map() {
    static std::map<void *, Director *> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void *, Director *>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void *>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void *>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {

  /* memory handler */
  struct GCItem {
    virtual ~GCItem() {}

    virtual int get_own() const {
      return 0;
    }
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem * operator->() const {
      return _item;
    }

  private:
    GCItem *_item;
  };

  struct GCItem_Object : GCItem {
    GCItem_Object(int own) : _own(own) {
    }

    virtual ~GCItem_Object() {
    }

    int get_own() const {
      return _own;
    }

  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem {
    GCArray_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCArray_T() {
      delete[] _ptr;
    }

  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char *hdr ="", const char *msg ="") : swig_msg(hdr) {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (msg[0]) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, what());
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
    }

    virtual ~DirectorException() throw() {
    }

    /* Deprecated, use what() instead */
    const char *getMessage() const {
      return what();
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* unknown exception handler  */
  class UnknownExceptionHandler {
#ifdef SWIG_DIRECTOR_UEH
    static void handler() {
      try {
        throw;
      } catch (DirectorException& e) {
        std::cerr << "SWIG Director exception caught:" << std::endl
                  << e.what() << std::endl;
      } catch (std::exception& e) {
        std::cerr << "std::exception caught: "<< e.what() << std::endl;
      } catch (...) {
        std::cerr << "Unknown exception caught." << std::endl;
      }

      std::cerr << std::endl
                << "Python interpreter traceback:" << std::endl;
      PyErr_Print();
      std::cerr << std::endl;

      std::cerr << "This exception was caught by the SWIG unexpected exception handler." << std::endl
                << "Try using %feature(\"director:except\") to avoid reaching this point." << std::endl
                << std::endl
                << "Exception is being re-thrown, program will likely abort/terminate." << std::endl;
      throw;
    }

  public:

    std::unexpected_handler old;
    UnknownExceptionHandler(std::unexpected_handler nh = handler) {
      old = std::set_unexpected(nh);
    }

    ~UnknownExceptionHandler() {
      std::set_unexpected(old);
    }
#endif
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char *msg="")
      : DirectorException(error, "SWIG director type mismatch", msg) {
    }

    DirectorTypeMismatchException(const char *msg="")
      : DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg) {
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg) {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public DirectorException {
  public:
    DirectorMethodException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

#ifdef __THREAD__
# include "pythread.h"
  class Guard {
    PyThread_type_lock &mutex_;

  public:
    Guard(PyThread_type_lock & mutex) : mutex_(mutex) {
      PyThread_acquire_lock(mutex_, WAIT_LOCK);
    }

    ~Guard() {
      PyThread_release_lock(mutex_);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex)
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject *swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const {
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_DECREF(swig_self);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }

  public:
    /* wrap a python object. */
    Director(PyObject *self) : swig_self(self), swig_disown_flag(false) {
    }

    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref();
    }

    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const {
      return swig_self;
    }

    /* acquire ownership of the wrapped python object (the sense of "disown" is from python) */
    void swig_disown() const {
      if (!swig_disown_flag) {
        swig_disown_flag=true;
        swig_incref();
      }
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const {
      if (swig_disown_flag) {
        Py_INCREF(swig_self);
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char * /* swig_protected_method_name */) const {
      return true;
    }

    virtual void swig_set_inner(const char * /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void *, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
#ifdef __THREAD__
    static PyThread_type_lock swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }

    template <typename Type>
    void swig_acquire_ownership(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }

    int swig_release_ownership(void *vptr) const {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject *swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args)) {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }
  };

#ifdef __THREAD__
  PyThread_type_lock Director::swig_mutex_own = PyThread_allocate_lock();
#endif
}

#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_ActionMap swig_types[0]
#define SWIGTYPE_p_ArAMPTU swig_types[1]
#define SWIGTYPE_p_ArAMPTUPacket swig_types[2]
#define SWIGTYPE_p_ArASyncTask swig_types[3]
#define SWIGTYPE_p_ArAction swig_types[4]
#define SWIGTYPE_p_ArActionAvoidFront swig_types[5]
#define SWIGTYPE_p_ArActionAvoidSide swig_types[6]
#define SWIGTYPE_p_ArActionBumpers swig_types[7]
#define SWIGTYPE_p_ArActionColorFollow swig_types[8]
#define SWIGTYPE_p_ArActionConstantVelocity swig_types[9]
#define SWIGTYPE_p_ArActionDeceleratingLimiter swig_types[10]
#define SWIGTYPE_p_ArActionDriveDistance swig_types[11]
#define SWIGTYPE_p_ArActionGoto swig_types[12]
#define SWIGTYPE_p_ArActionGotoStraight swig_types[13]
#define SWIGTYPE_p_ArActionGroup swig_types[14]
#define SWIGTYPE_p_ArActionGroupColorFollow swig_types[15]
#define SWIGTYPE_p_ArActionGroupInput swig_types[16]
#define SWIGTYPE_p_ArActionGroupRatioDrive swig_types[17]
#define SWIGTYPE_p_ArActionGroupRatioDriveUnsafe swig_types[18]
#define SWIGTYPE_p_ArActionGroupStop swig_types[19]
#define SWIGTYPE_p_ArActionGroupTeleop swig_types[20]
#define SWIGTYPE_p_ArActionGroupUnguardedTeleop swig_types[21]
#define SWIGTYPE_p_ArActionGroupWander swig_types[22]
#define SWIGTYPE_p_ArActionIRs swig_types[23]
#define SWIGTYPE_p_ArActionInput swig_types[24]
#define SWIGTYPE_p_ArActionJoydrive swig_types[25]
#define SWIGTYPE_p_ArActionKeydrive swig_types[26]
#define SWIGTYPE_p_ArActionLimiterBackwards swig_types[27]
#define SWIGTYPE_p_ArActionLimiterForwards swig_types[28]
#define SWIGTYPE_p_ArActionLimiterTableSensor swig_types[29]
#define SWIGTYPE_p_ArActionMovementParameters swig_types[30]
#define SWIGTYPE_p_ArActionRatioInput swig_types[31]
#define SWIGTYPE_p_ArActionRobotJoydrive swig_types[32]
#define SWIGTYPE_p_ArActionStallRecover swig_types[33]
#define SWIGTYPE_p_ArActionStop swig_types[34]
#define SWIGTYPE_p_ArActionTriangleDriveTo swig_types[35]
#define SWIGTYPE_p_ArActionTurn swig_types[36]
#define SWIGTYPE_p_ArAnalogGyro swig_types[37]
#define SWIGTYPE_p_ArArgumentBuilder swig_types[38]
#define SWIGTYPE_p_ArArgumentParser swig_types[39]
#define SWIGTYPE_p_ArBasePacket swig_types[40]
#define SWIGTYPE_p_ArBumpers swig_types[41]
#define SWIGTYPE_p_ArCameraCollection swig_types[42]
#define SWIGTYPE_p_ArCameraCollectionItem swig_types[43]
#define SWIGTYPE_p_ArCameraParameterSource swig_types[44]
#define SWIGTYPE_p_ArClientArg swig_types[45]
#define SWIGTYPE_p_ArClientBase swig_types[46]
#define SWIGTYPE_p_ArClientCommands swig_types[47]
#define SWIGTYPE_p_ArClientDeleteFileOnServer swig_types[48]
#define SWIGTYPE_p_ArClientFileFromClient swig_types[49]
#define SWIGTYPE_p_ArClientFileLister swig_types[50]
#define SWIGTYPE_p_ArClientFileListerItem swig_types[51]
#define SWIGTYPE_p_ArClientFileToClient swig_types[52]
#define SWIGTYPE_p_ArClientHandlerConfig swig_types[53]
#define SWIGTYPE_p_ArClientHandlerRobotUpdate swig_types[54]
#define SWIGTYPE_p_ArClientSimpleConnector swig_types[55]
#define SWIGTYPE_p_ArConfig swig_types[56]
#define SWIGTYPE_p_ArConfigArg swig_types[57]
#define SWIGTYPE_p_ArConfigArg_Bool swig_types[58]
#define SWIGTYPE_p_ArConfigArg_Double swig_types[59]
#define SWIGTYPE_p_ArConfigArg_Int swig_types[60]
#define SWIGTYPE_p_ArConfigArg_String swig_types[61]
#define SWIGTYPE_p_ArDPPTU swig_types[62]
#define SWIGTYPE_p_ArDPPTUPacket swig_types[63]
#define SWIGTYPE_p_ArDrawingData swig_types[64]
#define SWIGTYPE_p_ArForbiddenRangeDevice swig_types[65]
#define SWIGTYPE_p_ArFunctor swig_types[66]
#define SWIGTYPE_p_ArFunctor1T_ArArgumentBuilder_p_t swig_types[67]
#define SWIGTYPE_p_ArFunctor1T_ArNetPacket_p_t swig_types[68]
#define SWIGTYPE_p_ArFunctor1T_ArRobotPacket_p_t swig_types[69]
#define SWIGTYPE_p_ArFunctor1T_ArServerClient_p_t swig_types[70]
#define SWIGTYPE_p_ArFunctor1T_char_const_p_t swig_types[71]
#define SWIGTYPE_p_ArFunctor1T_int_t swig_types[72]
#define SWIGTYPE_p_ArFunctor2T_ArNetPacket_p_sockaddr_in_p_t swig_types[73]
#define SWIGTYPE_p_ArFunctor2T_ArServerClient_p_ArNetPacket_p_t swig_types[74]
#define SWIGTYPE_p_ArFunctor2T_char_const_p_char_const_p_t swig_types[75]
#define SWIGTYPE_p_ArFunctor2T_char_p_unsigned_short_t swig_types[76]
#define SWIGTYPE_p_ArFunctor2T_long_unsigned_int_t swig_types[77]
#define SWIGTYPE_p_ArFunctor3T_char_const_p_unsigned_short_ArFunctor2T_char_p_unsigned_short_t_p_t swig_types[78]
#define SWIGTYPE_p_ArFunctorASyncTask swig_types[79]
#define SWIGTYPE_p_ArHybridForwarderVideo swig_types[80]
#define SWIGTYPE_p_ArIRs swig_types[81]
#define SWIGTYPE_p_ArIrrfDevice swig_types[82]
#define SWIGTYPE_p_ArLaser swig_types[83]
#define SWIGTYPE_p_ArLaserFilter swig_types[84]
#define SWIGTYPE_p_ArLaserLogger swig_types[85]
#define SWIGTYPE_p_ArLaserReflectorDevice swig_types[86]
#define SWIGTYPE_p_ArMap swig_types[87]
#define SWIGTYPE_p_ArMapInterface swig_types[88]
#define SWIGTYPE_p_ArNetPacket swig_types[89]
#define SWIGTYPE_p_ArNetPacketReceiverTcp swig_types[90]
#define SWIGTYPE_p_ArNetPacketReceiverUdp swig_types[91]
#define SWIGTYPE_p_ArNetPacketSenderTcp swig_types[92]
#define SWIGTYPE_p_ArNetServer swig_types[93]
#define SWIGTYPE_p_ArPTZ swig_types[94]
#define SWIGTYPE_p_ArPos2D swig_types[95]
#define SWIGTYPE_p_ArPose swig_types[96]
#define SWIGTYPE_p_ArPoseWithTime swig_types[97]
#define SWIGTYPE_p_ArPyFunctor swig_types[98]
#define SWIGTYPE_p_ArPyFunctor1_String swig_types[99]
#define SWIGTYPE_p_ArPyRetFunctor_Bool swig_types[100]
#define SWIGTYPE_p_ArRVisionPTZ swig_types[101]
#define SWIGTYPE_p_ArRVisionPacket swig_types[102]
#define SWIGTYPE_p_ArRangeDevice swig_types[103]
#define SWIGTYPE_p_ArRangeDeviceThreaded swig_types[104]
#define SWIGTYPE_p_ArRecurrentTask swig_types[105]
#define SWIGTYPE_p_ArRetFunctor1T_bool_ArArgumentBuilder_p_t swig_types[106]
#define SWIGTYPE_p_ArRetFunctor1T_bool_ArArgumentBuilder_t swig_types[107]
#define SWIGTYPE_p_ArRetFunctor1T_bool_ArRobotPacket_p_t swig_types[108]
#define SWIGTYPE_p_ArRetFunctor1T_double_ArPoseWithTime_t swig_types[109]
#define SWIGTYPE_p_ArRetFunctor1T_void_p_void_p_t swig_types[110]
#define SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t swig_types[111]
#define SWIGTYPE_p_ArRetFunctor2T_bool_ArServerClient_p_ArNetPacket_p_t swig_types[112]
#define SWIGTYPE_p_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t swig_types[113]
#define SWIGTYPE_p_ArRetFunctorT_bool_t swig_types[114]
#define SWIGTYPE_p_ArRetFunctorT_double_t swig_types[115]
#define SWIGTYPE_p_ArRetFunctorT_int_t swig_types[116]
#define SWIGTYPE_p_ArRetFunctorT_unsigned_int_t swig_types[117]
#define SWIGTYPE_p_ArRetFunctorT_void_p_t swig_types[118]
#define SWIGTYPE_p_ArRobot swig_types[119]
#define SWIGTYPE_p_ArRobotPacket swig_types[120]
#define SWIGTYPE_p_ArRobotParams swig_types[121]
#define SWIGTYPE_p_ArServerBase swig_types[122]
#define SWIGTYPE_p_ArServerClient swig_types[123]
#define SWIGTYPE_p_ArServerClientData swig_types[124]
#define SWIGTYPE_p_ArServerClientIdentifier swig_types[125]
#define SWIGTYPE_p_ArServerCommands swig_types[126]
#define SWIGTYPE_p_ArServerData swig_types[127]
#define SWIGTYPE_p_ArServerDeleteFileOnServer swig_types[128]
#define SWIGTYPE_p_ArServerFileFromClient swig_types[129]
#define SWIGTYPE_p_ArServerFileLister swig_types[130]
#define SWIGTYPE_p_ArServerFileToClient swig_types[131]
#define SWIGTYPE_p_ArServerHandlerCamera swig_types[132]
#define SWIGTYPE_p_ArServerHandlerCameraCollection swig_types[133]
#define SWIGTYPE_p_ArServerHandlerCommMonitor swig_types[134]
#define SWIGTYPE_p_ArServerHandlerCommands swig_types[135]
#define SWIGTYPE_p_ArServerHandlerConfig swig_types[136]
#define SWIGTYPE_p_ArServerHandlerMap swig_types[137]
#define SWIGTYPE_p_ArServerHandlerMapping swig_types[138]
#define SWIGTYPE_p_ArServerHandlerPopup swig_types[139]
#define SWIGTYPE_p_ArServerInfoDrawings swig_types[140]
#define SWIGTYPE_p_ArServerInfoRobot swig_types[141]
#define SWIGTYPE_p_ArServerInfoSensor swig_types[142]
#define SWIGTYPE_p_ArServerInfoStrings swig_types[143]
#define SWIGTYPE_p_ArServerMode swig_types[144]
#define SWIGTYPE_p_ArServerModeDrive swig_types[145]
#define SWIGTYPE_p_ArServerModeIdle swig_types[146]
#define SWIGTYPE_p_ArServerModeRatioDrive swig_types[147]
#define SWIGTYPE_p_ArServerModeStop swig_types[148]
#define SWIGTYPE_p_ArServerModeWander swig_types[149]
#define SWIGTYPE_p_ArServerSimpleComGyro swig_types[150]
#define SWIGTYPE_p_ArServerSimpleComLogActions swig_types[151]
#define SWIGTYPE_p_ArServerSimpleComLogRobotConfig swig_types[152]
#define SWIGTYPE_p_ArServerSimpleComMovementLogging swig_types[153]
#define SWIGTYPE_p_ArServerSimpleComUC swig_types[154]
#define SWIGTYPE_p_ArServerSimpleConnectionTester swig_types[155]
#define SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets swig_types[156]
#define SWIGTYPE_p_ArServerSimpleOpener swig_types[157]
#define SWIGTYPE_p_ArServerSimplePopup swig_types[158]
#define SWIGTYPE_p_ArServerSimpleServerCommands swig_types[159]
#define SWIGTYPE_p_ArServerUserInfo swig_types[160]
#define SWIGTYPE_p_ArSignalHandler swig_types[161]
#define SWIGTYPE_p_ArSimulatedLaser swig_types[162]
#define SWIGTYPE_p_ArSocket swig_types[163]
#define SWIGTYPE_p_ArSonarDevice swig_types[164]
#define SWIGTYPE_p_ArSonyPTZ swig_types[165]
#define SWIGTYPE_p_ArSonyPacket swig_types[166]
#define SWIGTYPE_p_ArSoundsQueue swig_types[167]
#define SWIGTYPE_p_ArStringInfoGroup swig_types[168]
#define SWIGTYPE_p_ArStringInfoHolder swig_types[169]
#define SWIGTYPE_p_ArSyncLoop swig_types[170]
#define SWIGTYPE_p_ArThread swig_types[171]
#define SWIGTYPE_p_ArTime swig_types[172]
#define SWIGTYPE_p_ArUrg swig_types[173]
#define SWIGTYPE_p_ArVCC4 swig_types[174]
#define SWIGTYPE_p_ArVCC4Packet swig_types[175]
#define SWIGTYPE_p_ArZippable swig_types[176]
#define SWIGTYPE_p_Byte swig_types[177]
#define SWIGTYPE_p_Byte2 swig_types[178]
#define SWIGTYPE_p_Byte4 swig_types[179]
#define SWIGTYPE_p_Byte8 swig_types[180]
#define SWIGTYPE_p_CondType swig_types[181]
#define SWIGTYPE_p_FixType swig_types[182]
#define SWIGTYPE_p_GPSType swig_types[183]
#define SWIGTYPE_p_Handler swig_types[184]
#define SWIGTYPE_p_HandlerMap swig_types[185]
#define SWIGTYPE_p_InterruptItemFunctor swig_types[186]
#define SWIGTYPE_p_LogLevel swig_types[187]
#define SWIGTYPE_p_LogType swig_types[188]
#define SWIGTYPE_p_MapType swig_types[189]
#define SWIGTYPE_p_MessageVector swig_types[190]
#define SWIGTYPE_p_MutexType swig_types[191]
#define SWIGTYPE_p_PacketType swig_types[192]
#define SWIGTYPE_p_PlayItemFunctor swig_types[193]
#define SWIGTYPE_p_PlaybackConditionFunctor swig_types[194]
#define SWIGTYPE_p_Pos swig_types[195]
#define SWIGTYPE_p_SigHandleMethod swig_types[196]
#define SWIGTYPE_p_Signal swig_types[197]
#define SWIGTYPE_p_State swig_types[198]
#define SWIGTYPE_p_Status swig_types[199]
#define SWIGTYPE_p_StatusType swig_types[200]
#define SWIGTYPE_p_ThreadType swig_types[201]
#define SWIGTYPE_p_Type swig_types[202]
#define SWIGTYPE_p_UByte swig_types[203]
#define SWIGTYPE_p_UByte2 swig_types[204]
#define SWIGTYPE_p_UByte4 swig_types[205]
#define SWIGTYPE_p_UByte8 swig_types[206]
#define SWIGTYPE_p_WaitState swig_types[207]
#define SWIGTYPE_p_allocator_type swig_types[208]
#define SWIGTYPE_p_char swig_types[209]
#define SWIGTYPE_p_const_reference swig_types[210]
#define SWIGTYPE_p_difference_type swig_types[211]
#define SWIGTYPE_p_in_addr swig_types[212]
#define SWIGTYPE_p_key_type swig_types[213]
#define SWIGTYPE_p_mapped_type swig_types[214]
#define SWIGTYPE_p_md5_state_s swig_types[215]
#define SWIGTYPE_p_reference swig_types[216]
#define SWIGTYPE_p_size_type swig_types[217]
#define SWIGTYPE_p_sockaddr_in swig_types[218]
#define SWIGTYPE_p_std__listT_ArClientFileListerItem_std__allocatorT_ArClientFileListerItem_t_t swig_types[219]
#define SWIGTYPE_p_std__listT_ArConfigArg_p_std__allocatorT_ArConfigArg_p_t_t swig_types[220]
#define SWIGTYPE_p_std__listT_ArLaser_p_std__allocatorT_ArLaser_p_t_t swig_types[221]
#define SWIGTYPE_p_std__mapT_int_std__string_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__string_t_t_t swig_types[222]
#define SWIGTYPE_p_std__mapT_std__string_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_ArStrCaseCmpOp_std__allocatorT_std__pairT_std__string_const_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_t_t_t swig_types[223]
#define SWIGTYPE_p_std__mapT_unsigned_int_ArClientData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArClientData_p_t_t_t swig_types[224]
#define SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t swig_types[225]
#define SWIGTYPE_p_std__setT_std__string_ArStrCaseCmpOp_std__allocatorT_std__string_t_t swig_types[226]
#define SWIGTYPE_p_std__string swig_types[227]
#define SWIGTYPE_p_time_t swig_types[228]
#define SWIGTYPE_p_unsigned_char swig_types[229]
#define SWIGTYPE_p_unsigned_int swig_types[230]
#define SWIGTYPE_p_value_type swig_types[231]
#define SWIGTYPE_p_void swig_types[232]
static swig_type_info *swig_types[234];
static swig_module_info swig_module = {swig_types, 233, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _ArNetworkingPy.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__ArNetworkingPy

#else
#  define SWIG_init    init_ArNetworkingPy

#endif
#define SWIG_name    "_ArNetworkingPy"

#define SWIGVERSION 0x030008 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


/* SWIG wrapper.i for ArNetworking */


#include <cstddef>
#include "Aria.h"
#include "ArNetworking.h"
#include "ArClientHandlerRobotUpdate.h"
#include "ArClientRatioDrive.h"
#include "ArServerModeJogPosition.h"
#include "../include/wrapper_ExtraClasses.h"


#include <string>


#include <stddef.h>


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


namespace swig {
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type>
  struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category>
  struct traits_as { };

  template <class Type, class Category>
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      Type *p;
      int res = SWIG_ConvertPtr(obj, (void**)&p, type_info<Type>(), 0);
      if (SWIG_IsOK(res)) {
	if (val) *val = p;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	// Uninitialized return value, no Type() constructor required.
	static Type *v_def = (Type*) malloc(sizeof(Type));
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	memset(v_def,0,sizeof(Type));
	return *v_def;
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	return 0;
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj, bool te = false) {
    return traits_as<Type, typename traits<Type>::category>::as(obj, te);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>: public binary_function<PyObject *, PyObject *, bool>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>: public binary_function<swig::SwigPtr_PyObject, swig::SwigPtr_PyObject, bool>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>: public binary_function<swig::SwigVar_PyObject, swig::SwigVar_PyObject, bool>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  template <class Difference>
  inline size_t
  check_index(Difference i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    throw std::out_of_range("index out of range");
  }

  template <class Difference>
  void
  slice_adjust(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &ii, Difference &jj, bool insert = false) {
    if (step == 0) {
      throw std::invalid_argument("slice step cannot be zero");
    } else if (step > 0) {
      // Required range: 0 <= i < size, 0 <= j < size
      if (i < 0) {
        ii = 0;
      } else if (i < (Difference)size) {
        ii = i;
      } else if (insert && (i >= (Difference)size)) {
        ii = (Difference)size;
      }
      if ( j < 0 ) {
        jj = 0;
      } else {
        jj = (j < (Difference)size) ? j : (Difference)size;
      }
    } else {
      // Required range: -1 <= i < size-1, -1 <= j < size-1
      if (i < -1) {
        ii = -1;
      } else if (i < (Difference) size) {
        ii = i;
      } else if (i >= (Difference)(size-1)) {
        ii = (Difference)(size-1);
      }
      if (j < -1) {
        jj = -1;
      } else {
        jj = (j < (Difference)size ) ? j : (Difference)(size-1);
      }
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence>
  inline void
  erase(Sequence* seq, const typename Sequence::iterator& position) {
    seq->erase(position);
  }

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj);

    if (step > 0) {
      typename Sequence::const_iterator sb = self->begin();
      typename Sequence::const_iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      if (step == 1) {
        return new Sequence(sb, se);
      } else {
        Sequence *sequence = new Sequence();
        typename Sequence::const_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<step && it!=se; ++c)
            it++;
        }
        return sequence;
      } 
    } else {
      Sequence *sequence = new Sequence();
      if (ii > jj) {
        typename Sequence::const_reverse_iterator sb = self->rbegin();
        typename Sequence::const_reverse_iterator se = self->rbegin();
        std::advance(sb,size-ii-1);
        std::advance(se,size-jj-1);
        typename Sequence::const_reverse_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<-step && it!=se; ++c)
            it++;
        }
      }
      return sequence;
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, Py_ssize_t step, const InputSeq& is = InputSeq()) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (jj < ii)
        jj = ii;
      if (step == 1) {
        size_t ssize = jj - ii;
        if (ssize <= is.size()) {
          // expanding/staying the same size
          typename Sequence::iterator sb = self->begin();
          typename InputSeq::const_iterator isit = is.begin();
          std::advance(sb,ii);
          std::advance(isit, jj - ii);
          self->insert(std::copy(is.begin(), isit, sb), isit, is.end());
        } else {
          // shrinking
          typename Sequence::iterator sb = self->begin();
          typename Sequence::iterator se = self->begin();
          std::advance(sb,ii);
          std::advance(se,jj);
          self->erase(sb,se);
          sb = self->begin();
          std::advance(sb,ii);
          self->insert(sb, is.begin(), is.end());
        }
      } else {
        size_t replacecount = (jj - ii + step - 1) / step;
        if (is.size() != replacecount) {
          char msg[1024];
          sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
          throw std::invalid_argument(msg);
        }
        typename Sequence::const_iterator isit = is.begin();
        typename Sequence::iterator it = self->begin();
        std::advance(it,ii);
        for (size_t rc=0; rc<replacecount; ++rc) {
          *it++ = *isit++;
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
        }
      }
    } else {
      if (jj > ii)
        jj = ii;
      size_t replacecount = (ii - jj - step - 1) / -step;
      if (is.size() != replacecount) {
        char msg[1024];
        sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
        throw std::invalid_argument(msg);
      }
      typename Sequence::const_iterator isit = is.begin();
      typename Sequence::reverse_iterator it = self->rbegin();
      std::advance(it,size-ii-1);
      for (size_t rc=0; rc<replacecount; ++rc) {
        *it++ = *isit++;
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
      }
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (jj > ii) {
        typename Sequence::iterator sb = self->begin();
        std::advance(sb,ii);
        if (step == 1) {
          typename Sequence::iterator se = self->begin();
          std::advance(se,jj);
          self->erase(sb,se);
        } else {
          typename Sequence::iterator it = sb;
          size_t delcount = (jj - ii + step - 1) / step;
          while (delcount) {
            it = self->erase(it);
            for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
              it++;
            delcount--;
          }
        }
      }
    } else {
      if (ii > jj) {
        typename Sequence::reverse_iterator sb = self->rbegin();
        std::advance(sb,size-ii-1);
        typename Sequence::reverse_iterator it = sb;
        size_t delcount = (ii - jj - step - 1) / -step;
        while (delcount) {
          it = typename Sequence::reverse_iterator(self->erase((++it).base()));
          for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
            it++;
          delcount--;
        }
      }
    }
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }

  private:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item, true);
      } catch (std::exception& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", (int)_index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    Py_ssize_t _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  // STL container wrapper around a Python sequence
  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;
    typedef size_t size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check(bool set_err = true) const
    {
      Py_ssize_t s = size();
      for (Py_ssize_t i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item)) {
	  if (set_err) {
	    char msg[1024];
	    sprintf(msg, "in sequence element %d", (int)i);
	    SWIG_Error(SWIG_RuntimeError, msg);
	  }
	  return false;
	}
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


#include <algorithm>


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


#include "../include/wrapper_Functors.h"


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (PyObject * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}


  #define SWIG_From_long   PyLong_FromLong 


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_short  (unsigned short value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERNINLINE PyObject *
SWIG_From_short  (short value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	{
	  *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	  *alloc = SWIG_NEWOBJ;
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
	#if PY_VERSION_HEX>=0x03000000
	assert(0); /* Should never reach here in Python 3 */
	#endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
#if defined(SWIG_PYTHON_2_UNICODE)
#if PY_VERSION_HEX<0x03000000
    if (PyUnicode_Check(obj)) {
      char *cstr; Py_ssize_t len;
      if (!alloc && cptr) {
        return SWIG_RuntimeError;
      }
      obj = PyUnicode_AsUTF8String(obj);
      if (PyString_AsStringAndSize(obj, &cstr, &len) != -1) {
        if (cptr) {
          if (alloc) *alloc = SWIG_NEWOBJ;
          *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
        }
        if (psize) *psize = len + 1;

        Py_XDECREF(obj);
        return SWIG_OK;
      } else {
        Py_XDECREF(obj);
      }
    }
#endif
#endif

    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if PY_VERSION_HEX >= 0x03010000
      return PyUnicode_DecodeUTF8(carray, static_cast< Py_ssize_t >(size), "surrogateescape");
#else
      return PyUnicode_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERN int
SWIG_AsVal_short (PyObject * obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


/* End SWIG wraper.i for ArNetworking */



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "ArNetworkingPy_wrap.h"

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *SWIG_IMPORTED_ARIA_swigconstant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *module;
  PyObject *d;
  if (!PyArg_ParseTuple(args,(char*)"O:swigconstant", &module)) return NULL;
  d = PyModule_GetDict(module);
  if (!d) return NULL;
  SWIG_Python_SetConstant(d, "SWIG_IMPORTED_ARIA",SWIG_From_int(static_cast< int >(1)));
  return SWIG_Py_Void();
}


SWIGINTERN PyObject *_wrap_new_ArNetPacket__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArTypes::UByte2 arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  ArNetPacket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArNetPacket",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArNetPacket" "', argument " "1"" of type '" "ArTypes::UByte2""'");
  } 
  arg1 = static_cast< ArTypes::UByte2 >(val1);
  result = (ArNetPacket *)new ArNetPacket(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArNetPacket, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArNetPacket__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArNetPacket")) SWIG_fail;
  result = (ArNetPacket *)new ArNetPacket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArNetPacket, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArNetPacket__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArNetPacket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArNetPacket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_ArNetPacket,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArNetPacket" "', argument " "1"" of type '" "ArNetPacket const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ArNetPacket" "', argument " "1"" of type '" "ArNetPacket const &""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  result = (ArNetPacket *)new ArNetPacket((ArNetPacket const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArNetPacket, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArNetPacket(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ArNetPacket__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_ArNetPacket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ArNetPacket__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_short(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_ArNetPacket__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArNetPacket'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArNetPacket::ArNetPacket(ArTypes::UByte2)\n"
    "    ArNetPacket::ArNetPacket()\n"
    "    ArNetPacket::ArNetPacket(ArNetPacket const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArNetPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArNetPacket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArNetPacket" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_setCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  ArTypes::UByte2 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacket_setCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_setCommand" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArNetPacket_setCommand" "', argument " "2"" of type '" "ArTypes::UByte2""'");
  } 
  arg2 = static_cast< ArTypes::UByte2 >(val2);
  (arg1)->setCommand(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_getCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTypes::UByte2 result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacket_getCommand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_getCommand" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  result = (ArTypes::UByte2)(arg1)->getCommand();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_doubleToBuf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacket_doubleToBuf",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_doubleToBuf" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArNetPacket_doubleToBuf" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->doubleToBuf(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_bufToDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacket_bufToDouble",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_bufToDouble" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  result = (double)(arg1)->bufToDouble();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacket_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_empty" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  (arg1)->empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_finalizePacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacket_finalizePacket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_finalizePacket" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  (arg1)->finalizePacket();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_resetRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacket_resetRead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_resetRead" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  (arg1)->resetRead();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_duplicatePacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacket_duplicatePacket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_duplicatePacket" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArNetPacket_duplicatePacket" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  (arg1)->duplicatePacket(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_verifyCheckSum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacket_verifyCheckSum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_verifyCheckSum" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  result = (bool)(arg1)->verifyCheckSum();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_calcCheckSum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTypes::Byte2 result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacket_calcCheckSum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_calcCheckSum" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  result = (ArTypes::Byte2)(arg1)->calcCheckSum();
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_getAddedFooter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacket_getAddedFooter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_getAddedFooter" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  result = (bool)(arg1)->getAddedFooter();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_setAddedFooter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacket_setAddedFooter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_setAddedFooter" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArNetPacket_setAddedFooter" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setAddedFooter(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_getPacketSource(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArNetPacket::PacketSource result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacket_getPacketSource",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_getPacketSource" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  result = (ArNetPacket::PacketSource)(arg1)->getPacketSource();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_setPacketSource(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  ArNetPacket::PacketSource arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacket_setPacketSource",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_setPacketSource" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArNetPacket_setPacketSource" "', argument " "2"" of type '" "ArNetPacket::PacketSource""'");
  } 
  arg2 = static_cast< ArNetPacket::PacketSource >(val2);
  (arg1)->setPacketSource(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_setArbitraryString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacket_setArbitraryString",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_setArbitraryString" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArNetPacket_setArbitraryString" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setArbitraryString((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacket_getArbitraryString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacket *arg1 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacket_getArbitraryString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacket_getArbitraryString" "', argument " "1"" of type '" "ArNetPacket *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacket * >(argp1);
  result = (char *)(arg1)->getArbitraryString();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArNetPacket_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArNetPacket, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  bool arg7 ;
  bool arg8 ;
  bool arg9 ;
  bool arg10 ;
  int arg11 ;
  int arg12 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  int val11 ;
  int ecode11 = 0 ;
  int val12 ;
  int ecode12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOO:new_ArServerBase",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerBase" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerBase" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerBase" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_ArServerBase" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_ArServerBase" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_ArServerBase" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerBase" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  ecode11 = SWIG_AsVal_int(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_ArServerBase" "', argument " "11"" of type '" "int""'");
  } 
  arg11 = static_cast< int >(val11);
  ecode12 = SWIG_AsVal_int(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_ArServerBase" "', argument " "12"" of type '" "int""'");
  } 
  arg12 = static_cast< int >(val12);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  bool arg7 ;
  bool arg8 ;
  bool arg9 ;
  bool arg10 ;
  int arg11 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  int val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:new_ArServerBase",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerBase" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerBase" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerBase" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_ArServerBase" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_ArServerBase" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_ArServerBase" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerBase" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  ecode11 = SWIG_AsVal_int(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_ArServerBase" "', argument " "11"" of type '" "int""'");
  } 
  arg11 = static_cast< int >(val11);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  bool arg7 ;
  bool arg8 ;
  bool arg9 ;
  bool arg10 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:new_ArServerBase",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerBase" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerBase" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerBase" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_ArServerBase" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_ArServerBase" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_ArServerBase" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerBase" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8,arg9,arg10);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  bool arg7 ;
  bool arg8 ;
  bool arg9 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_ArServerBase",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerBase" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerBase" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerBase" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_ArServerBase" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_ArServerBase" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_ArServerBase" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  bool arg7 ;
  bool arg8 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_ArServerBase",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerBase" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerBase" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerBase" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_ArServerBase" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_ArServerBase" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  bool arg7 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_ArServerBase",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerBase" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerBase" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerBase" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_ArServerBase" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_ArServerBase",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerBase" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerBase" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerBase" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2,arg3,(char const *)arg4,(char const *)arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_ArServerBase",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerBase" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerBase" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2,arg3,(char const *)arg4,(char const *)arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_ArServerBase",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerBase" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2,arg3,(char const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerBase",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  char *arg2 = (char *) 0 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerBase",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerBase" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (ArServerBase *)new ArServerBase(arg1,(char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArServerBase",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArServerBase" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (ArServerBase *)new ArServerBase(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase__SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArServerBase")) SWIG_fail;
  result = (ArServerBase *)new ArServerBase();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerBase, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerBase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[13] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 12) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ArServerBase__SWIG_12(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_ArServerBase__SWIG_11(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerBase__SWIG_10(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ArServerBase__SWIG_9(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_ArServerBase__SWIG_8(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_ArServerBase__SWIG_7(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_ArServerBase__SWIG_6(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_ArServerBase__SWIG_5(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_bool(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_ArServerBase__SWIG_4(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_bool(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_new_ArServerBase__SWIG_3(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_bool(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_new_ArServerBase__SWIG_2(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_bool(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_int(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_new_ArServerBase__SWIG_1(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_bool(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_int(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_int(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            return _wrap_new_ArServerBase__SWIG_0(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerBase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::ArServerBase(bool,char const *,bool,char const *,char const *,bool,bool,bool,bool,bool,int,int)\n"
    "    ArServerBase::ArServerBase(bool,char const *,bool,char const *,char const *,bool,bool,bool,bool,bool,int)\n"
    "    ArServerBase::ArServerBase(bool,char const *,bool,char const *,char const *,bool,bool,bool,bool,bool)\n"
    "    ArServerBase::ArServerBase(bool,char const *,bool,char const *,char const *,bool,bool,bool,bool)\n"
    "    ArServerBase::ArServerBase(bool,char const *,bool,char const *,char const *,bool,bool,bool)\n"
    "    ArServerBase::ArServerBase(bool,char const *,bool,char const *,char const *,bool,bool)\n"
    "    ArServerBase::ArServerBase(bool,char const *,bool,char const *,char const *,bool)\n"
    "    ArServerBase::ArServerBase(bool,char const *,bool,char const *,char const *)\n"
    "    ArServerBase::ArServerBase(bool,char const *,bool,char const *)\n"
    "    ArServerBase::ArServerBase(bool,char const *,bool)\n"
    "    ArServerBase::ArServerBase(bool,char const *)\n"
    "    ArServerBase::ArServerBase(bool)\n"
    "    ArServerBase::ArServerBase()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerBase",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerBase" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_open__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  unsigned int arg2 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerBase_open",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_open" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_open" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_open" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerBase_open" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->open(arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_open__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  unsigned int arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_open",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_open" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_open" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_open" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->open(arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_open__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_open",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_open" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_open" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)(arg1)->open(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_open(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerBase_open__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArServerBase_open__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArServerBase_open__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_open'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::open(unsigned int,char const *,bool)\n"
    "    ArServerBase::open(unsigned int,char const *)\n"
    "    ArServerBase::open(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_close",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_close" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->close();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_loopOnce(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_loopOnce",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_loopOnce" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->loopOnce();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addData__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:ArServerBase_addData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addData" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_addData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_addData" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerBase_addData" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_addData" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArServerBase_addData" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "ArServerBase_addData" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  result = (bool)(arg1)->addData((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addData__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ArServerBase_addData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addData" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_addData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_addData" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerBase_addData" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_addData" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArServerBase_addData" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  result = (bool)(arg1)->addData((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addData__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArServerBase_addData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addData" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_addData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_addData" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerBase_addData" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_addData" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  result = (bool)(arg1)->addData((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addData(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[9] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_ArServerBase_addData__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_ArServerBase_addData__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_ArServerBase_addData__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_addData'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::addData(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *,char const *,char const *)\n"
    "    ArServerBase::addData(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *,char const *)\n"
    "    ArServerBase::addData(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_loadUserInfo__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_loadUserInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_loadUserInfo" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_loadUserInfo" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_loadUserInfo" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->loadUserInfo((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_loadUserInfo__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_loadUserInfo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_loadUserInfo" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_loadUserInfo" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->loadUserInfo((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_loadUserInfo(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerBase_loadUserInfo__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArServerBase_loadUserInfo__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_loadUserInfo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::loadUserInfo(char const *,char const *)\n"
    "    ArServerBase::loadUserInfo(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logUserInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_logUserInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_logUserInfo" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->logUserInfo();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logCommandGroups(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_logCommandGroups",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_logCommandGroups" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->logCommandGroups();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logCommandGroupsToFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_logCommandGroupsToFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_logCommandGroupsToFile" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_logCommandGroupsToFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->logCommandGroupsToFile((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_setGroupDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_setGroupDescription",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_setGroupDescription" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_setGroupDescription" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_setGroupDescription" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->setGroupDescription((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logGroupDescriptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_logGroupDescriptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_logGroupDescriptions" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->logGroupDescriptions();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logGroupDescriptionsToFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_logGroupDescriptionsToFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_logGroupDescriptionsToFile" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_logGroupDescriptionsToFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->logGroupDescriptionsToFile((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_setServerKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_setServerKey",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_setServerKey" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_setServerKey" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setServerKey((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_rejectSinceUsingCentralServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_rejectSinceUsingCentralServer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_rejectSinceUsingCentralServer" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_rejectSinceUsingCentralServer" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->rejectSinceUsingCentralServer((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_enforceProtocolVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_enforceProtocolVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_enforceProtocolVersion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_enforceProtocolVersion" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->enforceProtocolVersion((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_enforceType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArServerCommands::Type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_enforceType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_enforceType" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_enforceType" "', argument " "2"" of type '" "ArServerCommands::Type""'");
  } 
  arg2 = static_cast< ArServerCommands::Type >(val2);
  (arg1)->enforceType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_setBackupTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_setBackupTimeout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_setBackupTimeout" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_setBackupTimeout" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->setBackupTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_run(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_run",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_run" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->run();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_runAsync(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_runAsync",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_runAsync" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->runAsync();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logConnections__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_logConnections",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_logConnections" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_logConnections" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->logConnections((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logConnections__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_logConnections",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_logConnections" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->logConnections();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logConnections(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArServerBase_logConnections__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerBase_logConnections__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_logConnections'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::logConnections(char const *)\n"
    "    ArServerBase::logConnections()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_getNumClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_getNumClients",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_getNumClients" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (int)(arg1)->getNumClients();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_findCommandFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_findCommandFromName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_findCommandFromName" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_findCommandFromName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (unsigned int)(arg1)->findCommandFromName((char const *)arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_broadcastPacketTcp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcp" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcp" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketTcp" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->broadcastPacketTcp(arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpToMatching__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClientIdentifier arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerBase_broadcastPacketTcpToMatching",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "4"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "4"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->broadcastPacketTcpToMatching(arg2,(char const *)arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpToMatching__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClientIdentifier arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerBase_broadcastPacketTcpToMatching",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "4"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketTcpToMatching" "', argument " "4"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  result = (bool)(arg1)->broadcastPacketTcpToMatching(arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpToMatching(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ArServerClientIdentifier, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArServerBase_broadcastPacketTcpToMatching__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ArServerClientIdentifier, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ArServerBase_broadcastPacketTcpToMatching__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_broadcastPacketTcpToMatching'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::broadcastPacketTcpToMatching(ArNetPacket *,char const *,ArServerClientIdentifier,bool)\n"
    "    ArServerBase::broadcastPacketTcpToMatching(ArNetPacket *,char const *,ArServerClientIdentifier)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpWithExclusion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  ArServerClientIdentifier arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ArServerBase_broadcastPacketTcpWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = (bool)(arg1)->broadcastPacketTcpWithExclusion(arg2,(char const *)arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpWithExclusion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  ArServerClientIdentifier arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArServerBase_broadcastPacketTcpWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  result = (bool)(arg1)->broadcastPacketTcpWithExclusion(arg2,(char const *)arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpWithExclusion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerBase_broadcastPacketTcpWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->broadcastPacketTcpWithExclusion(arg2,(char const *)arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpWithExclusion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerBase_broadcastPacketTcpWithExclusion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketTcpWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  result = (bool)(arg1)->broadcastPacketTcpWithExclusion(arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpWithExclusion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[8] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArServerBase_broadcastPacketTcpWithExclusion__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ArServerBase_broadcastPacketTcpWithExclusion__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ArServerClientIdentifier, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_ArServerBase_broadcastPacketTcpWithExclusion__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ArServerClientIdentifier, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_ArServerBase_broadcastPacketTcpWithExclusion__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_broadcastPacketTcpWithExclusion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::broadcastPacketTcpWithExclusion(ArNetPacket *,char const *,ArServerClient *,bool,ArServerClientIdentifier,bool)\n"
    "    ArServerBase::broadcastPacketTcpWithExclusion(ArNetPacket *,char const *,ArServerClient *,bool,ArServerClientIdentifier)\n"
    "    ArServerBase::broadcastPacketTcpWithExclusion(ArNetPacket *,char const *,ArServerClient *,bool)\n"
    "    ArServerBase::broadcastPacketTcpWithExclusion(ArNetPacket *,char const *,ArServerClient *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_broadcastPacketUdp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdp" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdp" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketUdp" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->broadcastPacketUdp(arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpWithExclusion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  ArServerClientIdentifier arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ArServerBase_broadcastPacketUdpWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = (bool)(arg1)->broadcastPacketUdpWithExclusion(arg2,(char const *)arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpWithExclusion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  ArServerClientIdentifier arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArServerBase_broadcastPacketUdpWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  result = (bool)(arg1)->broadcastPacketUdpWithExclusion(arg2,(char const *)arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpWithExclusion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerBase_broadcastPacketUdpWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->broadcastPacketUdpWithExclusion(arg2,(char const *)arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpWithExclusion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerBase_broadcastPacketUdpWithExclusion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketUdpWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  result = (bool)(arg1)->broadcastPacketUdpWithExclusion(arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpWithExclusion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[8] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArServerBase_broadcastPacketUdpWithExclusion__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ArServerBase_broadcastPacketUdpWithExclusion__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ArServerClientIdentifier, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_ArServerBase_broadcastPacketUdpWithExclusion__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ArServerClientIdentifier, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_ArServerBase_broadcastPacketUdpWithExclusion__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_broadcastPacketUdpWithExclusion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::broadcastPacketUdpWithExclusion(ArNetPacket *,char const *,ArServerClient *,bool,ArServerClientIdentifier,bool)\n"
    "    ArServerBase::broadcastPacketUdpWithExclusion(ArNetPacket *,char const *,ArServerClient *,bool,ArServerClientIdentifier)\n"
    "    ArServerBase::broadcastPacketUdpWithExclusion(ArNetPacket *,char const *,ArServerClient *,bool)\n"
    "    ArServerBase::broadcastPacketUdpWithExclusion(ArNetPacket *,char const *,ArServerClient *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpToMatching(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  ArServerClientIdentifier arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerBase_broadcastPacketUdpToMatching",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdpToMatching" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdpToMatching" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_broadcastPacketUdpToMatching" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketUdpToMatching" "', argument " "4"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketUdpToMatching" "', argument " "4"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketUdpToMatching" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->broadcastPacketUdpToMatching(arg2,(char const *)arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_sleepAfterSend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_sleepAfterSend",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_sleepAfterSend" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_sleepAfterSend" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->sleepAfterSend(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_idleProcessingPending(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_idleProcessingPending",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_idleProcessingPending" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (bool)(arg1)->idleProcessingPending();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_processPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  sockaddr_in *arg3 = (sockaddr_in *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_processPacket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_processPacket" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_processPacket" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_sockaddr_in, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_processPacket" "', argument " "3"" of type '" "sockaddr_in *""'"); 
  }
  arg3 = reinterpret_cast< sockaddr_in * >(argp3);
  (arg1)->processPacket(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_sendUdp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  sockaddr_in *arg3 = (sockaddr_in *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_sendUdp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_sendUdp" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_sendUdp" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_sockaddr_in, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_sendUdp" "', argument " "3"" of type '" "sockaddr_in *""'"); 
  }
  arg3 = reinterpret_cast< sockaddr_in * >(argp3);
  result = (bool)(arg1)->sendUdp(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logTracking__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_logTracking",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_logTracking" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_logTracking" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->logTracking(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logTracking__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_logTracking",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_logTracking" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->logTracking();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_logTracking(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArServerBase_logTracking__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerBase_logTracking__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_logTracking'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::logTracking(bool)\n"
    "    ArServerBase::logTracking()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_resetTracking(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_resetTracking",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_resetTracking" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->resetTracking();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_runThread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  void *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_runThread",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_runThread" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_runThread" "', argument " "2"" of type '" "void *""'"); 
  }
  result = (void *)(arg1)->runThread(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_getTcpPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_getTcpPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_getTcpPort" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (unsigned int)(arg1)->getTcpPort();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_getUdpPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_getUdpPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_getUdpPort" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (unsigned int)(arg1)->getUdpPort();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_getOpenOnIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_getOpenOnIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_getOpenOnIP" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (char *)(arg1)->getOpenOnIP();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addCycleCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_addCycleCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addCycleCallback" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addCycleCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_remCycleCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_remCycleCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_remCycleCallback" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remCycleCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addClientRemovedCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArFunctor1< ArServerClient * > *arg2 = (ArFunctor1< ArServerClient * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_addClientRemovedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addClientRemovedCallback" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_ArServerClient_p_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_addClientRemovedCallback" "', argument " "2"" of type '" "ArFunctor1< ArServerClient * > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< ArServerClient * > * >(argp2);
  (arg1)->addClientRemovedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_remClientRemovedCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArFunctor1< ArServerClient * > *arg2 = (ArFunctor1< ArServerClient * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_remClientRemovedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_remClientRemovedCallback" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_ArServerClient_p_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_remClientRemovedCallback" "', argument " "2"" of type '" "ArFunctor1< ArServerClient * > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< ArServerClient * > * >(argp2);
  (arg1)->remClientRemovedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_makeNewServerClientFromSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArSocket *arg2 = (ArSocket *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_makeNewServerClientFromSocket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_makeNewServerClientFromSocket" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_makeNewServerClientFromSocket" "', argument " "2"" of type '" "ArSocket *""'"); 
  }
  arg2 = reinterpret_cast< ArSocket * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_makeNewServerClientFromSocket" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (ArServerClient *)(arg1)->makeNewServerClientFromSocket(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_getUserInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerUserInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_getUserInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_getUserInfo" "', argument " "1"" of type '" "ArServerBase const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (ArServerUserInfo *)((ArServerBase const *)arg1)->getUserInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_setUserInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArServerUserInfo *arg2 = (ArServerUserInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_setUserInfo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_setUserInfo" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_setUserInfo" "', argument " "2"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg2 = reinterpret_cast< ArServerUserInfo * >(argp2);
  (arg1)->setUserInfo((ArServerUserInfo const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addDataAdvanced__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  unsigned int arg9 ;
  ArFunctor2< long,unsigned int > *arg10 = (ArFunctor2< long,unsigned int > *) 0 ;
  ArRetFunctor2< bool,ArServerClient *,ArNetPacket * > *arg11 = (ArRetFunctor2< bool,ArServerClient *,ArNetPacket * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  unsigned int val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  void *argp11 = 0 ;
  int res11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:ArServerBase_addDataAdvanced",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addDataAdvanced" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_addDataAdvanced" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_addDataAdvanced" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerBase_addDataAdvanced" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_addDataAdvanced" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArServerBase_addDataAdvanced" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "ArServerBase_addDataAdvanced" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  ecode9 = SWIG_AsVal_unsigned_SS_int(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "ArServerBase_addDataAdvanced" "', argument " "9"" of type '" "unsigned int""'");
  } 
  arg9 = static_cast< unsigned int >(val9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_ArFunctor2T_long_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "ArServerBase_addDataAdvanced" "', argument " "10"" of type '" "ArFunctor2< long,unsigned int > *""'"); 
  }
  arg10 = reinterpret_cast< ArFunctor2< long,unsigned int > * >(argp10);
  res11 = SWIG_ConvertPtr(obj10, &argp11,SWIGTYPE_p_ArRetFunctor2T_bool_ArServerClient_p_ArNetPacket_p_t, 0 |  0 );
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "ArServerBase_addDataAdvanced" "', argument " "11"" of type '" "ArRetFunctor2< bool,ArServerClient *,ArNetPacket * > *""'"); 
  }
  arg11 = reinterpret_cast< ArRetFunctor2< bool,ArServerClient *,ArNetPacket * > * >(argp11);
  result = (bool)(arg1)->addDataAdvanced((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8,arg9,arg10,arg11);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addDataAdvanced__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  unsigned int arg9 ;
  ArFunctor2< long,unsigned int > *arg10 = (ArFunctor2< long,unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  unsigned int val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:ArServerBase_addDataAdvanced",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addDataAdvanced" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_addDataAdvanced" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_addDataAdvanced" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerBase_addDataAdvanced" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_addDataAdvanced" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArServerBase_addDataAdvanced" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "ArServerBase_addDataAdvanced" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  ecode9 = SWIG_AsVal_unsigned_SS_int(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "ArServerBase_addDataAdvanced" "', argument " "9"" of type '" "unsigned int""'");
  } 
  arg9 = static_cast< unsigned int >(val9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_ArFunctor2T_long_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "ArServerBase_addDataAdvanced" "', argument " "10"" of type '" "ArFunctor2< long,unsigned int > *""'"); 
  }
  arg10 = reinterpret_cast< ArFunctor2< long,unsigned int > * >(argp10);
  result = (bool)(arg1)->addDataAdvanced((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8,arg9,arg10);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addDataAdvanced__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  unsigned int arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  unsigned int val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:ArServerBase_addDataAdvanced",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addDataAdvanced" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_addDataAdvanced" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_addDataAdvanced" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerBase_addDataAdvanced" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_addDataAdvanced" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArServerBase_addDataAdvanced" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "ArServerBase_addDataAdvanced" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  ecode9 = SWIG_AsVal_unsigned_SS_int(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "ArServerBase_addDataAdvanced" "', argument " "9"" of type '" "unsigned int""'");
  } 
  arg9 = static_cast< unsigned int >(val9);
  result = (bool)(arg1)->addDataAdvanced((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8,arg9);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addDataAdvanced__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:ArServerBase_addDataAdvanced",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addDataAdvanced" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_addDataAdvanced" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_addDataAdvanced" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerBase_addDataAdvanced" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_addDataAdvanced" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArServerBase_addDataAdvanced" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "ArServerBase_addDataAdvanced" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  result = (bool)(arg1)->addDataAdvanced((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addDataAdvanced__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ArServerBase_addDataAdvanced",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addDataAdvanced" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_addDataAdvanced" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_addDataAdvanced" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerBase_addDataAdvanced" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_addDataAdvanced" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArServerBase_addDataAdvanced" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  result = (bool)(arg1)->addDataAdvanced((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addDataAdvanced__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArServerBase_addDataAdvanced",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addDataAdvanced" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_addDataAdvanced" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_addDataAdvanced" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerBase_addDataAdvanced" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_addDataAdvanced" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  result = (bool)(arg1)->addDataAdvanced((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addDataAdvanced(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[12] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 11) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_ArServerBase_addDataAdvanced__SWIG_5(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_ArServerBase_addDataAdvanced__SWIG_4(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_ArServerBase_addDataAdvanced__SWIG_3(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    {
                      int res = SWIG_AsVal_unsigned_SS_int(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_ArServerBase_addDataAdvanced__SWIG_2(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    {
                      int res = SWIG_AsVal_unsigned_SS_int(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      void *vptr = 0;
                      int res = SWIG_ConvertPtr(argv[9], &vptr, SWIGTYPE_p_ArFunctor2T_long_unsigned_int_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        return _wrap_ArServerBase_addDataAdvanced__SWIG_1(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    {
                      int res = SWIG_AsVal_unsigned_SS_int(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      void *vptr = 0;
                      int res = SWIG_ConvertPtr(argv[9], &vptr, SWIGTYPE_p_ArFunctor2T_long_unsigned_int_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        void *vptr = 0;
                        int res = SWIG_ConvertPtr(argv[10], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArServerClient_p_ArNetPacket_p_t, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          return _wrap_ArServerBase_addDataAdvanced__SWIG_0(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_addDataAdvanced'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::addDataAdvanced(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *,char const *,char const *,unsigned int,ArFunctor2< long,unsigned int > *,ArRetFunctor2< bool,ArServerClient *,ArNetPacket * > *)\n"
    "    ArServerBase::addDataAdvanced(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *,char const *,char const *,unsigned int,ArFunctor2< long,unsigned int > *)\n"
    "    ArServerBase::addDataAdvanced(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *,char const *,char const *,unsigned int)\n"
    "    ArServerBase::addDataAdvanced(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *,char const *,char const *)\n"
    "    ArServerBase::addDataAdvanced(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *,char const *)\n"
    "    ArServerBase::addDataAdvanced(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_setAdditionalDataFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_setAdditionalDataFlags",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_setAdditionalDataFlags" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_setAdditionalDataFlags" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setAdditionalDataFlags((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_getFrequency__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_getFrequency",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_getFrequency" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_getFrequency" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_getFrequency" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (long)(arg1)->getFrequency(arg2,arg3);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_getFrequency__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_getFrequency",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_getFrequency" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_getFrequency" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (long)(arg1)->getFrequency(arg2);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_getFrequency(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerBase_getFrequency__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerBase_getFrequency__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_getFrequency'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::getFrequency(unsigned int,bool)\n"
    "    ArServerBase::getFrequency(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpByCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_broadcastPacketTcpByCommand",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpByCommand" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpByCommand" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_broadcastPacketTcpByCommand" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (bool)(arg1)->broadcastPacketTcpByCommand(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpByCommandWithExclusion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  unsigned int arg3 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  ArServerClientIdentifier arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ArServerBase_broadcastPacketTcpByCommandWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = (bool)(arg1)->broadcastPacketTcpByCommandWithExclusion(arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpByCommandWithExclusion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  unsigned int arg3 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  ArServerClientIdentifier arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArServerBase_broadcastPacketTcpByCommandWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  result = (bool)(arg1)->broadcastPacketTcpByCommandWithExclusion(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpByCommandWithExclusion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  unsigned int arg3 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerBase_broadcastPacketTcpByCommandWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->broadcastPacketTcpByCommandWithExclusion(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpByCommandWithExclusion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  unsigned int arg3 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerBase_broadcastPacketTcpByCommandWithExclusion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketTcpByCommandWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  result = (bool)(arg1)->broadcastPacketTcpByCommandWithExclusion(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketTcpByCommandWithExclusion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[8] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArServerBase_broadcastPacketTcpByCommandWithExclusion__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ArServerBase_broadcastPacketTcpByCommandWithExclusion__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ArServerClientIdentifier, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_ArServerBase_broadcastPacketTcpByCommandWithExclusion__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ArServerClientIdentifier, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_ArServerBase_broadcastPacketTcpByCommandWithExclusion__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_broadcastPacketTcpByCommandWithExclusion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::broadcastPacketTcpByCommandWithExclusion(ArNetPacket *,unsigned int,ArServerClient *,bool,ArServerClientIdentifier,bool)\n"
    "    ArServerBase::broadcastPacketTcpByCommandWithExclusion(ArNetPacket *,unsigned int,ArServerClient *,bool,ArServerClientIdentifier)\n"
    "    ArServerBase::broadcastPacketTcpByCommandWithExclusion(ArNetPacket *,unsigned int,ArServerClient *,bool)\n"
    "    ArServerBase::broadcastPacketTcpByCommandWithExclusion(ArNetPacket *,unsigned int,ArServerClient *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpByCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_broadcastPacketUdpByCommand",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdpByCommand" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdpByCommand" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_broadcastPacketUdpByCommand" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (bool)(arg1)->broadcastPacketUdpByCommand(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpByCommandWithExclusion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  unsigned int arg3 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  ArServerClientIdentifier arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ArServerBase_broadcastPacketUdpByCommandWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = (bool)(arg1)->broadcastPacketUdpByCommandWithExclusion(arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpByCommandWithExclusion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  unsigned int arg3 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  ArServerClientIdentifier arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArServerBase_broadcastPacketUdpByCommandWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "6"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  result = (bool)(arg1)->broadcastPacketUdpByCommandWithExclusion(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpByCommandWithExclusion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  unsigned int arg3 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerBase_broadcastPacketUdpByCommandWithExclusion",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->broadcastPacketUdpByCommandWithExclusion(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpByCommandWithExclusion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  unsigned int arg3 ;
  ArServerClient *arg4 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerBase_broadcastPacketUdpByCommandWithExclusion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerBase_broadcastPacketUdpByCommandWithExclusion" "', argument " "4"" of type '" "ArServerClient *""'"); 
  }
  arg4 = reinterpret_cast< ArServerClient * >(argp4);
  result = (bool)(arg1)->broadcastPacketUdpByCommandWithExclusion(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_broadcastPacketUdpByCommandWithExclusion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[8] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArServerBase_broadcastPacketUdpByCommandWithExclusion__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ArServerBase_broadcastPacketUdpByCommandWithExclusion__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ArServerClientIdentifier, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_ArServerBase_broadcastPacketUdpByCommandWithExclusion__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArServerClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ArServerClientIdentifier, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_ArServerBase_broadcastPacketUdpByCommandWithExclusion__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_broadcastPacketUdpByCommandWithExclusion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::broadcastPacketUdpByCommandWithExclusion(ArNetPacket *,unsigned int,ArServerClient *,bool,ArServerClientIdentifier,bool)\n"
    "    ArServerBase::broadcastPacketUdpByCommandWithExclusion(ArNetPacket *,unsigned int,ArServerClient *,bool,ArServerClientIdentifier)\n"
    "    ArServerBase::broadcastPacketUdpByCommandWithExclusion(ArNetPacket *,unsigned int,ArServerClient *,bool)\n"
    "    ArServerBase::broadcastPacketUdpByCommandWithExclusion(ArNetPacket *,unsigned int,ArServerClient *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_closeConnectionID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArTypes::UByte4 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_closeConnectionID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_closeConnectionID" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_closeConnectionID" "', argument " "2"" of type '" "ArTypes::UByte4""'");
  } 
  arg2 = static_cast< ArTypes::UByte4 >(val2);
  (arg1)->closeConnectionID(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_dataHasFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_dataHasFlag",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_dataHasFlag" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_dataHasFlag" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_dataHasFlag" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->dataHasFlag((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_dataHasFlagByCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  unsigned int arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_dataHasFlagByCommand",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_dataHasFlagByCommand" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_dataHasFlagByCommand" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerBase_dataHasFlagByCommand" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->dataHasFlagByCommand(arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_setDebugLogging__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_setDebugLogging",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_setDebugLogging" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_setDebugLogging" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setDebugLogging(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_setDebugLogging__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_setDebugLogging",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_setDebugLogging" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->setDebugLogging();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_setDebugLogging(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArServerBase_setDebugLogging__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerBase_setDebugLogging__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_setDebugLogging'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::setDebugLogging(bool)\n"
    "    ArServerBase::setDebugLogging()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_getDebugLogging(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_getDebugLogging",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_getDebugLogging" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (bool)(arg1)->getDebugLogging();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_getMostClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_getMostClients",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_getMostClients" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (int)(arg1)->getMostClients();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_allowingIdlePackets(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_allowingIdlePackets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_allowingIdlePackets" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (bool)(arg1)->allowingIdlePackets();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addIdleSingleShotCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_addIdleSingleShotCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addIdleSingleShotCallback" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  result = (bool)(arg1)->addIdleSingleShotCallback(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_hasSlowPackets(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_hasSlowPackets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_hasSlowPackets" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (bool)(arg1)->hasSlowPackets();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_hasIdlePackets(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_hasIdlePackets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_hasIdlePackets" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (bool)(arg1)->hasIdlePackets();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_hasIdleCallbacks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_hasIdleCallbacks",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_hasIdleCallbacks" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (bool)(arg1)->hasIdleCallbacks();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_internalSetNumClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_internalSetNumClients",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_internalSetNumClients" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerBase_internalSetNumClients" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->internalSetNumClients(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addTooManyClientsCB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArFunctor1< char const * > *arg2 = (ArFunctor1< char const * > *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_addTooManyClientsCB",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addTooManyClientsCB" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  {
    arg2 = new ArPyFunctor1_String(obj1);
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_addTooManyClientsCB" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addTooManyClientsCB(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addTooManyClientsCB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArFunctor1< char const * > *arg2 = (ArFunctor1< char const * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_addTooManyClientsCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_addTooManyClientsCB" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  {
    arg2 = new ArPyFunctor1_String(obj1);
  }
  (arg1)->addTooManyClientsCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_addTooManyClientsCB(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerBase_addTooManyClientsCB__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerBase_addTooManyClientsCB__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerBase_addTooManyClientsCB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerBase::addTooManyClientsCB(ArFunctor1< char const * > *,int)\n"
    "    ArServerBase::addTooManyClientsCB(ArFunctor1< char const * > *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerBase_remTooManyClientsCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArFunctor1< char const * > *arg2 = (ArFunctor1< char const * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_remTooManyClientsCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_remTooManyClientsCB" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  {
    arg2 = new ArPyFunctor1_String(obj1);
  }
  (arg1)->remTooManyClientsCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_internalSetDefaultFrequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerBase_internalSetDefaultFrequency",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_internalSetDefaultFrequency" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_internalSetDefaultFrequency" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerBase_internalSetDefaultFrequency" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)(arg1)->internalSetDefaultFrequency((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_internalLockup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerBase_internalLockup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_internalLockup" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  (arg1)->internalLockup();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerBase_remData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerBase_remData",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerBase_remData" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerBase_remData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->remData((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *ArServerBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_ArServerMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerMode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerMode" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getActionGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArActionGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_getActionGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_getActionGroup" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  result = (ArActionGroup *)(arg1)->getActionGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArActionGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_activate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_activate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_activate" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->activate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_deactivate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_deactivate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_deactivate" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->deactivate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_activationDenied(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_activationDenied",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_activationDenied" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->activationDenied();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_userTask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_userTask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_userTask" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->userTask();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_requestUnlock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_requestUnlock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_requestUnlock" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->requestUnlock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_forceUnlock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_forceUnlock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_forceUnlock" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->forceUnlock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_lockMode__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_lockMode",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_lockMode" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerMode_lockMode" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->lockMode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_lockMode__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_lockMode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_lockMode" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->lockMode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_lockMode(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArServerMode_lockMode__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerMode_lockMode__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerMode_lockMode'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerMode::lockMode(bool)\n"
    "    ArServerMode::lockMode()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerMode_unlockMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_unlockMode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_unlockMode" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->unlockMode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_getMode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_getMode" "', argument " "1"" of type '" "ArServerMode const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  result = (char *)((ArServerMode const *)arg1)->getMode();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_getStatus" "', argument " "1"" of type '" "ArServerMode const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  result = (char *)((ArServerMode const *)arg1)->getStatus();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getExtendedStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_getExtendedStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_getExtendedStatus" "', argument " "1"" of type '" "ArServerMode const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  result = (char *)((ArServerMode const *)arg1)->getExtendedStatus();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getActiveModeModeString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":ArServerMode_getActiveModeModeString")) SWIG_fail;
  result = (char *)ArServerMode::getActiveModeModeString();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getActiveModeStatusString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":ArServerMode_getActiveModeStatusString")) SWIG_fail;
  result = (char *)ArServerMode::getActiveModeStatusString();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getActiveModeExtendedStatusString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":ArServerMode_getActiveModeExtendedStatusString")) SWIG_fail;
  result = (char *)ArServerMode::getActiveModeExtendedStatusString();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_getName" "', argument " "1"" of type '" "ArServerMode const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  result = (char *)((ArServerMode const *)arg1)->getName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_isActive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_isActive",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_isActive" "', argument " "1"" of type '" "ArServerMode const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  result = (bool)((ArServerMode const *)arg1)->isActive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_isLocked(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)":ArServerMode_isLocked")) SWIG_fail;
  result = (bool)ArServerMode::isLocked();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_willUnlockIfRequested(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)":ArServerMode_willUnlockIfRequested")) SWIG_fail;
  result = (bool)ArServerMode::willUnlockIfRequested();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getActiveMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":ArServerMode_getActiveMode")) SWIG_fail;
  result = (ArServerMode *)ArServerMode::getActiveMode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerMode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_hasSetActivityTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_hasSetActivityTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_hasSetActivityTime" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  result = (bool)(arg1)->hasSetActivityTime();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getActivityTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_getActivityTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_getActivityTime" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  result = (arg1)->getActivityTime();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_setActivityTimeToNow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_setActivityTimeToNow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_setActivityTimeToNow" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->setActivityTimeToNow();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getActiveModeActivityTimeSecSince(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":ArServerMode_getActiveModeActivityTimeSecSince")) SWIG_fail;
  result = (int)ArServerMode::getActiveModeActivityTimeSecSince();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getActiveModeSetActivityThisCycle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)":ArServerMode_getActiveModeSetActivityThisCycle")) SWIG_fail;
  result = (bool)ArServerMode::getActiveModeSetActivityThisCycle();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addAsDefaultMode__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArListPos::Pos arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_addAsDefaultMode",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addAsDefaultMode" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerMode_addAsDefaultMode" "', argument " "2"" of type '" "ArListPos::Pos""'");
  } 
  arg2 = static_cast< ArListPos::Pos >(val2);
  (arg1)->addAsDefaultMode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addAsDefaultMode__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_addAsDefaultMode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addAsDefaultMode" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->addAsDefaultMode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addAsDefaultMode(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArServerMode_addAsDefaultMode__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerMode_addAsDefaultMode__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerMode_addAsDefaultMode'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerMode::addAsDefaultMode(ArListPos::Pos)\n"
    "    ArServerMode::addAsDefaultMode()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerMode_checkDefault(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_checkDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_checkDefault" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  (arg1)->checkDefault();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_setMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_setMode",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_setMode" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerMode_setMode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setMode((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_setStatus",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_setStatus" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerMode_setStatus" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setStatus((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_isAutoResumeAfterInterrupt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerMode_isAutoResumeAfterInterrupt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_isAutoResumeAfterInterrupt" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  result = (bool)(arg1)->isAutoResumeAfterInterrupt();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addModeData__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:ArServerMode_addModeData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addModeData" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerMode_addModeData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerMode_addModeData" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerMode_addModeData" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerMode_addModeData" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArServerMode_addModeData" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "ArServerMode_addModeData" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  result = (bool)(arg1)->addModeData((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addModeData__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ArServerMode_addModeData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addModeData" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerMode_addModeData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerMode_addModeData" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerMode_addModeData" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerMode_addModeData" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArServerMode_addModeData" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  result = (bool)(arg1)->addModeData((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addModeData__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArServerMode_addModeData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addModeData" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerMode_addModeData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerMode_addModeData" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerMode_addModeData" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArServerMode_addModeData" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  result = (bool)(arg1)->addModeData((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addModeData(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[9] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_ArServerMode_addModeData__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_ArServerMode_addModeData__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_ArServerMode_addModeData__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerMode_addModeData'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerMode::addModeData(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *,char const *,char const *)\n"
    "    ArServerMode::addModeData(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *,char const *)\n"
    "    ArServerMode::addModeData(char const *,char const *,ArFunctor2< ArServerClient *,ArNetPacket * > *,char const *,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getModeDataList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_getModeDataList",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_getModeDataList" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerMode_getModeDataList" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ArServerMode::getModeDataList(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getModeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_getModeInfo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_getModeInfo" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerMode_getModeInfo" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ArServerMode::getModeInfo(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getModeBusy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_getModeBusy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_getModeBusy" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerMode_getModeBusy" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ArServerMode::getModeBusy(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addActivateCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerMode_addActivateCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addActivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerMode_addActivateCallback" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addActivateCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addActivateCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_addActivateCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addActivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addActivateCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addActivateCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerMode_addActivateCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerMode_addActivateCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerMode_addActivateCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerMode::addActivateCallback(ArFunctor *,int)\n"
    "    ArServerMode::addActivateCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerMode_remActivateCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_remActivateCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_remActivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remActivateCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addDeactivateCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerMode_addDeactivateCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addDeactivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerMode_addDeactivateCallback" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addDeactivateCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addDeactivateCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_addDeactivateCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addDeactivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addDeactivateCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addDeactivateCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerMode_addDeactivateCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerMode_addDeactivateCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerMode_addDeactivateCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerMode::addDeactivateCallback(ArFunctor *,int)\n"
    "    ArServerMode::addDeactivateCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerMode_remDeactivateCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_remDeactivateCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_remDeactivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remDeactivateCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addSingleShotDeactivateCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerMode_addSingleShotDeactivateCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addSingleShotDeactivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerMode_addSingleShotDeactivateCallback" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addSingleShotDeactivateCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addSingleShotDeactivateCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_addSingleShotDeactivateCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addSingleShotDeactivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addSingleShotDeactivateCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addSingleShotDeactivateCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerMode_addSingleShotDeactivateCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerMode_addSingleShotDeactivateCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerMode_addSingleShotDeactivateCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerMode::addSingleShotDeactivateCallback(ArFunctor *,int)\n"
    "    ArServerMode::addSingleShotDeactivateCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerMode_remSingleShotDeactivateCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_remSingleShotDeactivateCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_remSingleShotDeactivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remSingleShotDeactivateCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addSingleShotPostDeactivateCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerMode_addSingleShotPostDeactivateCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addSingleShotPostDeactivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerMode_addSingleShotPostDeactivateCallback" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addSingleShotPostDeactivateCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addSingleShotPostDeactivateCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_addSingleShotPostDeactivateCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_addSingleShotPostDeactivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addSingleShotPostDeactivateCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_addSingleShotPostDeactivateCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerMode_addSingleShotPostDeactivateCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerMode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerMode_addSingleShotPostDeactivateCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerMode_addSingleShotPostDeactivateCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerMode::addSingleShotPostDeactivateCallback(ArFunctor *,int)\n"
    "    ArServerMode::addSingleShotPostDeactivateCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerMode_remSingleShotPostDeactivateCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerMode *arg1 = (ArServerMode *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerMode_remSingleShotPostDeactivateCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerMode_remSingleShotPostDeactivateCallback" "', argument " "1"" of type '" "ArServerMode *""'"); 
  }
  arg1 = reinterpret_cast< ArServerMode * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remSingleShotPostDeactivateCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerMode_getIdleMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":ArServerMode_getIdleMode")) SWIG_fail;
  result = (ArServerModeIdle *)ArServerMode::getIdleMode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerMode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerMode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientArg__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  ArPriority::Priority arg2 ;
  int arg3 ;
  bool arg4 ;
  bool val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ArClientArg *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_ArClientArg",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArClientArg" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArClientArg" "', argument " "2"" of type '" "ArPriority::Priority""'");
  } 
  arg2 = static_cast< ArPriority::Priority >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArClientArg" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArClientArg" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (ArClientArg *)new ArClientArg(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientArg, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientArg__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  ArPriority::Priority arg2 ;
  int arg3 ;
  bool val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArClientArg *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArClientArg",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArClientArg" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArClientArg" "', argument " "2"" of type '" "ArPriority::Priority""'");
  } 
  arg2 = static_cast< ArPriority::Priority >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArClientArg" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (ArClientArg *)new ArClientArg(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientArg, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientArg__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  ArPriority::Priority arg2 ;
  bool val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArClientArg *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArClientArg",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArClientArg" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArClientArg" "', argument " "2"" of type '" "ArPriority::Priority""'");
  } 
  arg2 = static_cast< ArPriority::Priority >(val2);
  result = (ArClientArg *)new ArClientArg(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientArg, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientArg__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientArg *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientArg",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArClientArg" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (ArClientArg *)new ArClientArg(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientArg, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientArg__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArClientArg")) SWIG_fail;
  result = (ArClientArg *)new ArClientArg();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientArg, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientArg(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ArClientArg__SWIG_4(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_ArClientArg__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_ArClientArg__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ArClientArg__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_ArClientArg__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArClientArg'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientArg::ArClientArg(bool,ArPriority::Priority,int,bool)\n"
    "    ArClientArg::ArClientArg(bool,ArPriority::Priority,int)\n"
    "    ArClientArg::ArClientArg(bool,ArPriority::Priority)\n"
    "    ArClientArg::ArClientArg(bool)\n"
    "    ArClientArg::ArClientArg()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArClientArg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientArg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientArg" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_isSendableParamType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArConfigArg *arg1 = 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientArg_isSendableParamType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_ArConfigArg,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_isSendableParamType" "', argument " "1"" of type '" "ArConfigArg const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_isSendableParamType" "', argument " "1"" of type '" "ArConfigArg const &""'"); 
  }
  arg1 = reinterpret_cast< ArConfigArg * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientArg_isSendableParamType" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)ArClientArg::isSendableParamType((ArConfigArg const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_isSendableParamType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArConfigArg *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientArg_isSendableParamType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_ArConfigArg,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_isSendableParamType" "', argument " "1"" of type '" "ArConfigArg const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_isSendableParamType" "', argument " "1"" of type '" "ArConfigArg const &""'"); 
  }
  arg1 = reinterpret_cast< ArConfigArg * >(argp1);
  result = (bool)ArClientArg::isSendableParamType((ArConfigArg const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_isSendableParamType(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_ArConfigArg, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArClientArg_isSendableParamType__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_ArConfigArg, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArClientArg_isSendableParamType__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientArg_isSendableParamType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientArg::isSendableParamType(ArConfigArg const &,bool)\n"
    "    ArClientArg::isSendableParamType(ArConfigArg const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientArg_createArg__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  ArConfigArg *arg3 = 0 ;
  std::string *arg4 = (std::string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientArg_createArg",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_createArg" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_createArg" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ArConfigArg,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_createArg" "', argument " "3"" of type '" "ArConfigArg &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_createArg" "', argument " "3"" of type '" "ArConfigArg &""'"); 
  }
  arg3 = reinterpret_cast< ArConfigArg * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArClientArg_createArg" "', argument " "4"" of type '" "std::string *""'"); 
  }
  arg4 = reinterpret_cast< std::string * >(argp4);
  result = (bool)(arg1)->createArg(arg2,*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_createArg__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  ArConfigArg *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientArg_createArg",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_createArg" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_createArg" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ArConfigArg,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_createArg" "', argument " "3"" of type '" "ArConfigArg &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_createArg" "', argument " "3"" of type '" "ArConfigArg &""'"); 
  }
  arg3 = reinterpret_cast< ArConfigArg * >(argp3);
  result = (bool)(arg1)->createArg(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_createArg(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientArg, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArConfigArg, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArClientArg_createArg__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientArg, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArConfigArg, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArClientArg_createArg__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientArg_createArg'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientArg::createArg(ArNetPacket *,ArConfigArg &,std::string *)\n"
    "    ArClientArg::createArg(ArNetPacket *,ArConfigArg &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientArg_createPacket__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  ArConfigArg *arg2 = 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientArg_createPacket",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_createPacket" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArConfigArg,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_createPacket" "', argument " "2"" of type '" "ArConfigArg const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_createPacket" "', argument " "2"" of type '" "ArConfigArg const &""'"); 
  }
  arg2 = reinterpret_cast< ArConfigArg * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_createPacket" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArClientArg_createPacket" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (bool)(arg1)->createPacket((ArConfigArg const &)*arg2,arg3,(char const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_createPacket__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  ArConfigArg *arg2 = 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientArg_createPacket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_createPacket" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArConfigArg,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_createPacket" "', argument " "2"" of type '" "ArConfigArg const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_createPacket" "', argument " "2"" of type '" "ArConfigArg const &""'"); 
  }
  arg2 = reinterpret_cast< ArConfigArg * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_createPacket" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->createPacket((ArConfigArg const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_createPacket(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientArg, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ArConfigArg, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArNetPacket, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArClientArg_createPacket__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientArg, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ArConfigArg, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArNetPacket, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArClientArg_createPacket__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientArg_createPacket'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientArg::createPacket(ArConfigArg const &,ArNetPacket *,char const *)\n"
    "    ArClientArg::createPacket(ArConfigArg const &,ArNetPacket *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientArg_bufToArgValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  ArConfigArg *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientArg_bufToArgValue",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_bufToArgValue" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_bufToArgValue" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ArConfigArg,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_bufToArgValue" "', argument " "3"" of type '" "ArConfigArg &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_bufToArgValue" "', argument " "3"" of type '" "ArConfigArg &""'"); 
  }
  arg3 = reinterpret_cast< ArConfigArg * >(argp3);
  result = (bool)(arg1)->bufToArgValue(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_argValueToBuf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  ArConfigArg *arg2 = 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientArg_argValueToBuf",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_argValueToBuf" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArConfigArg,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_argValueToBuf" "', argument " "2"" of type '" "ArConfigArg const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_argValueToBuf" "', argument " "2"" of type '" "ArConfigArg const &""'"); 
  }
  arg2 = reinterpret_cast< ArConfigArg * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_argValueToBuf" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->argValueToBuf((ArConfigArg const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_argTextToBuf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  ArConfigArg *arg2 = 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientArg_argTextToBuf",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_argTextToBuf" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArConfigArg,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_argTextToBuf" "', argument " "2"" of type '" "ArConfigArg const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_argTextToBuf" "', argument " "2"" of type '" "ArConfigArg const &""'"); 
  }
  arg2 = reinterpret_cast< ArConfigArg * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_argTextToBuf" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->argTextToBuf((ArConfigArg const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_addArgTextToPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  ArConfigArg *arg2 = 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientArg_addArgTextToPacket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_addArgTextToPacket" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArConfigArg,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_addArgTextToPacket" "', argument " "2"" of type '" "ArConfigArg const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_addArgTextToPacket" "', argument " "2"" of type '" "ArConfigArg const &""'"); 
  }
  arg2 = reinterpret_cast< ArConfigArg * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_addArgTextToPacket" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->addArgTextToPacket((ArConfigArg const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_addAncestorListToPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  std::list< ArConfigArg *,std::allocator< ArConfigArg * > > *arg2 = 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientArg_addAncestorListToPacket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_addAncestorListToPacket" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__listT_ArConfigArg_p_std__allocatorT_ArConfigArg_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_addAncestorListToPacket" "', argument " "2"" of type '" "std::list< ArConfigArg *,std::allocator< ArConfigArg * > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArClientArg_addAncestorListToPacket" "', argument " "2"" of type '" "std::list< ArConfigArg *,std::allocator< ArConfigArg * > > const &""'"); 
  }
  arg2 = reinterpret_cast< std::list< ArConfigArg *,std::allocator< ArConfigArg * > > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_addAncestorListToPacket" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->addAncestorListToPacket((std::list< ArConfigArg *,std::allocator< ArConfigArg * > > const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_addListBeginToPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  ArConfigArg *arg2 = (ArConfigArg *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientArg_addListBeginToPacket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_addListBeginToPacket" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfigArg, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_addListBeginToPacket" "', argument " "2"" of type '" "ArConfigArg *""'"); 
  }
  arg2 = reinterpret_cast< ArConfigArg * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_addListBeginToPacket" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->addListBeginToPacket(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientArg_addListEndToPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientArg *arg1 = (ArClientArg *) 0 ;
  ArConfigArg *arg2 = (ArConfigArg *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientArg_addListEndToPacket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientArg, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientArg_addListEndToPacket" "', argument " "1"" of type '" "ArClientArg *""'"); 
  }
  arg1 = reinterpret_cast< ArClientArg * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfigArg, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientArg_addListEndToPacket" "', argument " "2"" of type '" "ArConfigArg *""'"); 
  }
  arg2 = reinterpret_cast< ArConfigArg * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientArg_addListEndToPacket" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->addListEndToPacket(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArClientArg_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientArg, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArClientBase")) SWIG_fail;
  result = (ArClientBase *)new ArClientBase();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientBase, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArClientBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientBase",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientBase" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setRobotName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientBase_setRobotName",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_setRobotName" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_setRobotName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_setRobotName" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_setRobotName" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  (arg1)->setRobotName((char const *)arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setRobotName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_setRobotName",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_setRobotName" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_setRobotName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_setRobotName" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->setRobotName((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setRobotName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_setRobotName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_setRobotName" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_setRobotName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setRobotName((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setRobotName(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientBase_setRobotName__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_setRobotName__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArClientBase_setRobotName__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_setRobotName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::setRobotName(char const *,bool,int)\n"
    "    ArClientBase::setRobotName(char const *,bool)\n"
    "    ArClientBase::setRobotName(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getRobotName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getRobotName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getRobotName" "', argument " "1"" of type '" "ArClientBase const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (char *)((ArClientBase const *)arg1)->getRobotName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getLogPrefix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getLogPrefix",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getLogPrefix" "', argument " "1"" of type '" "ArClientBase const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (char *)((ArClientBase const *)arg1)->getLogPrefix();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getDebugLogging(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getDebugLogging",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getDebugLogging" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->getDebugLogging();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_blockingConnect__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ArClientBase_blockingConnect",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_blockingConnect" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_blockingConnect" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_blockingConnect" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_blockingConnect" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArClientBase_blockingConnect" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArClientBase_blockingConnect" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArClientBase_blockingConnect" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  result = (bool)(arg1)->blockingConnect((char const *)arg2,arg3,arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_blockingConnect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArClientBase_blockingConnect",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_blockingConnect" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_blockingConnect" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_blockingConnect" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_blockingConnect" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArClientBase_blockingConnect" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArClientBase_blockingConnect" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  result = (bool)(arg1)->blockingConnect((char const *)arg2,arg3,arg4,(char const *)arg5,(char const *)arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_blockingConnect__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArClientBase_blockingConnect",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_blockingConnect" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_blockingConnect" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_blockingConnect" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_blockingConnect" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArClientBase_blockingConnect" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (bool)(arg1)->blockingConnect((char const *)arg2,arg3,arg4,(char const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_blockingConnect__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientBase_blockingConnect",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_blockingConnect" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_blockingConnect" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_blockingConnect" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_blockingConnect" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->blockingConnect((char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_blockingConnect__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_blockingConnect",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_blockingConnect" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_blockingConnect" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_blockingConnect" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)(arg1)->blockingConnect((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_blockingConnect(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[8] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_blockingConnect__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArClientBase_blockingConnect__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_ArClientBase_blockingConnect__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_ArClientBase_blockingConnect__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_ArClientBase_blockingConnect__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_blockingConnect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::blockingConnect(char const *,int,bool,char const *,char const *,char const *)\n"
    "    ArClientBase::blockingConnect(char const *,int,bool,char const *,char const *)\n"
    "    ArClientBase::blockingConnect(char const *,int,bool,char const *)\n"
    "    ArClientBase::blockingConnect(char const *,int,bool)\n"
    "    ArClientBase::blockingConnect(char const *,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_disconnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_disconnect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_disconnect" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->disconnect();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_disconnectSoon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_disconnectSoon",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_disconnectSoon" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  (arg1)->disconnectSoon();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_isConnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_isConnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_isConnected" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->isConnected();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_wasRejected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_wasRejected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_wasRejected" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->wasRejected();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientBase::ClientState result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getState" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (ArClientBase::ClientState)(arg1)->getState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_addHandler__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  ArFunctor1< ArNetPacket * > *arg3 = (ArFunctor1< ArNetPacket * > *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientBase_addHandler",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_addHandler" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_addHandler" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    arg3 = new ArPyFunctor1<ArNetPacket *>(obj2);
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_addHandler" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->addHandler((char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_addHandler__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  ArFunctor1< ArNetPacket * > *arg3 = (ArFunctor1< ArNetPacket * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_addHandler",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_addHandler" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_addHandler" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    arg3 = new ArPyFunctor1<ArNetPacket *>(obj2);
  }
  result = (bool)(arg1)->addHandler((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_addHandler(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          _v = PyCallable_Check(argv[2]);
        }
        if (_v) {
          return _wrap_ArClientBase_addHandler__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          _v = PyCallable_Check(argv[2]);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArClientBase_addHandler__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_addHandler'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::addHandler(char const *,ArFunctor1< ArNetPacket * > *,bool)\n"
    "    ArClientBase::addHandler(char const *,ArFunctor1< ArNetPacket * > *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_remHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  ArFunctor1< ArNetPacket * > *arg3 = (ArFunctor1< ArNetPacket * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_remHandler",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_remHandler" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_remHandler" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    arg3 = new ArPyFunctor1<ArNetPacket *>(obj2);
  }
  result = (bool)(arg1)->remHandler((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_request__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  ArNetPacket *arg4 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientBase_request",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_request" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_request" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_request" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArClientBase_request" "', argument " "4"" of type '" "ArNetPacket *""'"); 
  }
  arg4 = reinterpret_cast< ArNetPacket * >(argp4);
  result = (bool)(arg1)->request((char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_request__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_request",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_request" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_request" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_request" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (bool)(arg1)->request((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_request(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_request__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArNetPacket, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArClientBase_request__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_request'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::request(char const *,long,ArNetPacket *)\n"
    "    ArClientBase::request(char const *,long)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestStop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_requestStop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestStop" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestStop" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->requestStop((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientBase_requestOnce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnce" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestOnce" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientBase_requestOnce" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_requestOnce" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->requestOnce((char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_requestOnce",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnce" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestOnce" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientBase_requestOnce" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->requestOnce((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnce__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_requestOnce",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnce" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestOnce" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->requestOnce((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnce(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientBase_requestOnce__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArNetPacket, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArClientBase_requestOnce__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArNetPacket, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArClientBase_requestOnce__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_requestOnce'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::requestOnce(char const *,ArNetPacket *,bool)\n"
    "    ArClientBase::requestOnce(char const *,ArNetPacket *)\n"
    "    ArClientBase::requestOnce(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceUdp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientBase_requestOnceUdp",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceUdp" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestOnceUdp" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientBase_requestOnceUdp" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_requestOnceUdp" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->requestOnceUdp((char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceUdp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_requestOnceUdp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceUdp" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestOnceUdp" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientBase_requestOnceUdp" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->requestOnceUdp((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceUdp__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_requestOnceUdp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceUdp" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestOnceUdp" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->requestOnceUdp((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceUdp(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientBase_requestOnceUdp__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArNetPacket, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArClientBase_requestOnceUdp__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArNetPacket, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArClientBase_requestOnceUdp__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_requestOnceUdp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::requestOnceUdp(char const *,ArNetPacket *,bool)\n"
    "    ArClientBase::requestOnceUdp(char const *,ArNetPacket *)\n"
    "    ArClientBase::requestOnceUdp(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceWithString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_requestOnceWithString",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceWithString" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestOnceWithString" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientBase_requestOnceWithString" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->requestOnceWithString((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceWithInt16(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  ArTypes::Byte2 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_requestOnceWithInt16",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceWithInt16" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestOnceWithInt16" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_requestOnceWithInt16" "', argument " "3"" of type '" "ArTypes::Byte2""'");
  } 
  arg3 = static_cast< ArTypes::Byte2 >(val3);
  result = (bool)(arg1)->requestOnceWithInt16((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceWithInt32(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  ArTypes::Byte4 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_requestOnceWithInt32",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceWithInt32" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestOnceWithInt32" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_requestOnceWithInt32" "', argument " "3"" of type '" "ArTypes::Byte4""'");
  } 
  arg3 = static_cast< ArTypes::Byte4 >(val3);
  result = (bool)(arg1)->requestOnceWithInt32((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceWithDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_requestOnceWithDouble",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceWithDouble" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_requestOnceWithDouble" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_requestOnceWithDouble" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  result = (bool)(arg1)->requestOnceWithDouble((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_dataExists(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_dataExists",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_dataExists" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_dataExists" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->dataExists((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getHost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getHost" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (char *)(arg1)->getHost();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getPort" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (int)(arg1)->getPort();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setServerKey__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_setServerKey",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_setServerKey" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_setServerKey" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_setServerKey" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->setServerKey((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setServerKey__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_setServerKey",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_setServerKey" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_setServerKey" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setServerKey((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setServerKey(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientBase_setServerKey__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_setServerKey__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_setServerKey'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::setServerKey(char const *,bool)\n"
    "    ArClientBase::setServerKey(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_enforceProtocolVersion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_enforceProtocolVersion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_enforceProtocolVersion" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_enforceProtocolVersion" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_enforceProtocolVersion" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->enforceProtocolVersion((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_enforceProtocolVersion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_enforceProtocolVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_enforceProtocolVersion" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_enforceProtocolVersion" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->enforceProtocolVersion((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_enforceProtocolVersion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientBase_enforceProtocolVersion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_enforceProtocolVersion__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_enforceProtocolVersion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::enforceProtocolVersion(char const *,bool)\n"
    "    ArClientBase::enforceProtocolVersion(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_enforceType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArServerCommands::Type arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_enforceType",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_enforceType" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_enforceType" "', argument " "2"" of type '" "ArServerCommands::Type""'");
  } 
  arg2 = static_cast< ArServerCommands::Type >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_enforceType" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->enforceType(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_enforceType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArServerCommands::Type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_enforceType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_enforceType" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_enforceType" "', argument " "2"" of type '" "ArServerCommands::Type""'");
  } 
  arg2 = static_cast< ArServerCommands::Type >(val2);
  (arg1)->enforceType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_enforceType(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArClientBase_enforceType__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_enforceType__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_enforceType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::enforceType(ArServerCommands::Type,bool)\n"
    "    ArClientBase::enforceType(ArServerCommands::Type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getLastPacketReceived(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getLastPacketReceived",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getLastPacketReceived" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (arg1)->getLastPacketReceived();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setBackupTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_setBackupTimeout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_setBackupTimeout" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_setBackupTimeout" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->setBackupTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_run(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_run",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_run" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  (arg1)->run();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_runAsync(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_runAsync",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_runAsync" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  (arg1)->runAsync();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_stopRunning(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_stopRunning",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_stopRunning" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  (arg1)->stopRunning();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_isStopped(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_isStopped",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_isStopped" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->isStopped();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_logDataList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_logDataList",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_logDataList" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  (arg1)->logDataList();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_addCycleCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_addCycleCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_addCycleCallback" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addCycleCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_remCycleCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_remCycleCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_remCycleCallback" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remCycleCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_sendPacketTcp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_sendPacketTcp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_sendPacketTcp" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_sendPacketTcp" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  result = (bool)(arg1)->sendPacketTcp(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_sendPacketUdp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_sendPacketUdp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_sendPacketUdp" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_sendPacketUdp" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  result = (bool)(arg1)->sendPacketUdp(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setConnectTimeoutTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_setConnectTimeoutTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_setConnectTimeoutTime" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_setConnectTimeoutTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setConnectTimeoutTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getConnectTimeoutTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getConnectTimeoutTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getConnectTimeoutTime" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (int)(arg1)->getConnectTimeoutTime();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_logTracking(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_logTracking",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_logTracking" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_logTracking" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->logTracking(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_resetTracking(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_resetTracking",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_resetTracking" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  (arg1)->resetTracking();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_addServerShutdownCB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_addServerShutdownCB",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_addServerShutdownCB" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_addServerShutdownCB" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addServerShutdownCB(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_addServerShutdownCB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_addServerShutdownCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_addServerShutdownCB" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addServerShutdownCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_addServerShutdownCB(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArClientBase_addServerShutdownCB__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_addServerShutdownCB__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_addServerShutdownCB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::addServerShutdownCB(ArFunctor *,ArListPos::Pos)\n"
    "    ArClientBase::addServerShutdownCB(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_remServerShutdownCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_remServerShutdownCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_remServerShutdownCB" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remServerShutdownCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_addDisconnectOnErrorCB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_addDisconnectOnErrorCB",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_addDisconnectOnErrorCB" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_addDisconnectOnErrorCB" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addDisconnectOnErrorCB(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_addDisconnectOnErrorCB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_addDisconnectOnErrorCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_addDisconnectOnErrorCB" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addDisconnectOnErrorCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_addDisconnectOnErrorCB(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArClientBase_addDisconnectOnErrorCB__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_addDisconnectOnErrorCB__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_addDisconnectOnErrorCB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::addDisconnectOnErrorCB(ArFunctor *,ArListPos::Pos)\n"
    "    ArClientBase::addDisconnectOnErrorCB(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_remDisconnectOnErrorCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_remDisconnectOnErrorCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_remDisconnectOnErrorCB" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remDisconnectOnErrorCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_loopOnce(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_loopOnce",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_loopOnce" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  (arg1)->loopOnce();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_processPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_processPacket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_processPacket" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_processPacket" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_processPacket" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->processPacket(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_processPacketUdp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  sockaddr_in *arg3 = (sockaddr_in *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_processPacketUdp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_processPacketUdp" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_processPacketUdp" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_sockaddr_in, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientBase_processPacketUdp" "', argument " "3"" of type '" "sockaddr_in *""'"); 
  }
  arg3 = reinterpret_cast< sockaddr_in * >(argp3);
  (arg1)->processPacketUdp(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setTcpOnlyFromServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_setTcpOnlyFromServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_setTcpOnlyFromServer" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  (arg1)->setTcpOnlyFromServer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_setTcpOnlyToServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_setTcpOnlyToServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_setTcpOnlyToServer" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  (arg1)->setTcpOnlyToServer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_isTcpOnlyFromServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_isTcpOnlyFromServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_isTcpOnlyFromServer" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->isTcpOnlyFromServer();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_isTcpOnlyToServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_isTcpOnlyToServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_isTcpOnlyToServer" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->isTcpOnlyToServer();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getClientKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  unsigned char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_getClientKey",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getClientKey" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_getClientKey" "', argument " "2"" of type '" "unsigned char [ArClientBase::CLIENT_KEY_LENGTH]""'"); 
  } 
  arg2 = reinterpret_cast< unsigned char * >(argp2);
  (arg1)->getClientKey(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_startNonBlockingDisconnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_startNonBlockingDisconnect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_startNonBlockingDisconnect" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->startNonBlockingDisconnect();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_finishNonBlockingDisconnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_finishNonBlockingDisconnect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_finishNonBlockingDisconnect" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  (arg1)->finishNonBlockingDisconnect();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_getName",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getName" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_getName" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_getName" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (char *)(arg1)->getName(arg2,arg3);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_getName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getName" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_getName" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  result = (char *)(arg1)->getName(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_getName",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getName" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_getName" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_getName" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (char *)(arg1)->getName(arg2,arg3);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_getName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getName" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_getName" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (char *)(arg1)->getName(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getName(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientBase_getName__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArClientBase_getName__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_getName__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_getName__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_getName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::getName(ArNetPacket *,bool)\n"
    "    ArClientBase::getName(ArNetPacket *)\n"
    "    ArClientBase::getName(unsigned int,bool)\n"
    "    ArClientBase::getName(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_runThread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  void *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_runThread",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_runThread" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_runThread" "', argument " "2"" of type '" "void *""'"); 
  }
  result = (void *)(arg1)->runThread(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getTcpAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  in_addr *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getTcpAddr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getTcpAddr" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (in_addr *)(arg1)->getTcpAddr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_in_addr, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_internalBlockingConnect__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  ArSocket *arg7 = (ArSocket *) 0 ;
  char *arg8 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:ArClientBase_internalBlockingConnect",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "7"" of type '" "ArSocket *""'"); 
  }
  arg7 = reinterpret_cast< ArSocket * >(argp7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  result = (bool)(arg1)->internalBlockingConnect((char const *)arg2,arg3,arg4,(char const *)arg5,(char const *)arg6,arg7,(char const *)arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_internalBlockingConnect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  ArSocket *arg7 = (ArSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ArClientBase_internalBlockingConnect",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArClientBase_internalBlockingConnect" "', argument " "7"" of type '" "ArSocket *""'"); 
  }
  arg7 = reinterpret_cast< ArSocket * >(argp7);
  result = (bool)(arg1)->internalBlockingConnect((char const *)arg2,arg3,arg4,(char const *)arg5,(char const *)arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_internalBlockingConnect(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[9] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_ArSocket, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_ArClientBase_internalBlockingConnect__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_ArSocket, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_ArClientBase_internalBlockingConnect__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_internalBlockingConnect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::internalBlockingConnect(char const *,int,bool,char const *,char const *,ArSocket *,char const *)\n"
    "    ArClientBase::internalBlockingConnect(char const *,int,bool,char const *,char const *,ArSocket *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_internalNonBlockingConnectStart__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  ArSocket *arg7 = (ArSocket *) 0 ;
  char *arg8 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  ArClientBase::NonBlockingConnectReturn result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:ArClientBase_internalNonBlockingConnectStart",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "7"" of type '" "ArSocket *""'"); 
  }
  arg7 = reinterpret_cast< ArSocket * >(argp7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  result = (ArClientBase::NonBlockingConnectReturn)(arg1)->internalNonBlockingConnectStart((char const *)arg2,arg3,arg4,(char const *)arg5,(char const *)arg6,arg7,(char const *)arg8);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_internalNonBlockingConnectStart__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  ArSocket *arg7 = (ArSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  ArClientBase::NonBlockingConnectReturn result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ArClientBase_internalNonBlockingConnectStart",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ArClientBase_internalNonBlockingConnectStart" "', argument " "7"" of type '" "ArSocket *""'"); 
  }
  arg7 = reinterpret_cast< ArSocket * >(argp7);
  result = (ArClientBase::NonBlockingConnectReturn)(arg1)->internalNonBlockingConnectStart((char const *)arg2,arg3,arg4,(char const *)arg5,(char const *)arg6,arg7);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_internalNonBlockingConnectStart(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[9] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_ArSocket, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_ArClientBase_internalNonBlockingConnectStart__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_ArSocket, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_ArClientBase_internalNonBlockingConnectStart__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_internalNonBlockingConnectStart'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::internalNonBlockingConnectStart(char const *,int,bool,char const *,char const *,ArSocket *,char const *)\n"
    "    ArClientBase::internalNonBlockingConnectStart(char const *,int,bool,char const *,char const *,ArSocket *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_internalNonBlockingConnectContinue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientBase::NonBlockingConnectReturn result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_internalNonBlockingConnectContinue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_internalNonBlockingConnectContinue" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (ArClientBase::NonBlockingConnectReturn)(arg1)->internalNonBlockingConnectContinue();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getTcpSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArSocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getTcpSocket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getTcpSocket" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (ArSocket *)(arg1)->getTcpSocket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArSocket, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getUdpSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArSocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getUdpSocket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getUdpSocket" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (ArSocket *)(arg1)->getUdpSocket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArSocket, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getDataMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::map< unsigned int,ArClientData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArClientData * > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getDataMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getDataMap" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (std::map< unsigned int,ArClientData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArClientData * > > > *)(arg1)->getDataMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_unsigned_int_ArClientData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArClientData_p_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_findCommandFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_findCommandFromName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_findCommandFromName" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientBase_findCommandFromName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (unsigned int)(arg1)->findCommandFromName((char const *)arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestByCommand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  ArNetPacket *arg4 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientBase_requestByCommand",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestByCommand" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_requestByCommand" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_requestByCommand" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArClientBase_requestByCommand" "', argument " "4"" of type '" "ArNetPacket *""'"); 
  }
  arg4 = reinterpret_cast< ArNetPacket * >(argp4);
  result = (bool)(arg1)->requestByCommand(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestByCommand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_requestByCommand",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestByCommand" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_requestByCommand" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientBase_requestByCommand" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (bool)(arg1)->requestByCommand(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestByCommand(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientBase_requestByCommand__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArNetPacket, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArClientBase_requestByCommand__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_requestByCommand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::requestByCommand(unsigned int,long,ArNetPacket *)\n"
    "    ArClientBase::requestByCommand(unsigned int,long)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestStopByCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_requestStopByCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestStopByCommand" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_requestStopByCommand" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)(arg1)->requestStopByCommand(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceByCommand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  unsigned int arg2 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_requestOnceByCommand",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceByCommand" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_requestOnceByCommand" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientBase_requestOnceByCommand" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->requestOnceByCommand(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceByCommand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_requestOnceByCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceByCommand" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_requestOnceByCommand" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)(arg1)->requestOnceByCommand(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceByCommand(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArClientBase_requestOnceByCommand__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArNetPacket, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArClientBase_requestOnceByCommand__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_requestOnceByCommand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::requestOnceByCommand(unsigned int,ArNetPacket *)\n"
    "    ArClientBase::requestOnceByCommand(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceByCommandUdp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  unsigned int arg2 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientBase_requestOnceByCommandUdp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceByCommandUdp" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_requestOnceByCommandUdp" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientBase_requestOnceByCommandUdp" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (bool)(arg1)->requestOnceByCommandUdp(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceByCommandUdp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientBase_requestOnceByCommandUdp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_requestOnceByCommandUdp" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientBase_requestOnceByCommandUdp" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)(arg1)->requestOnceByCommandUdp(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_requestOnceByCommandUdp(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArClientBase_requestOnceByCommandUdp__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArNetPacket, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArClientBase_requestOnceByCommandUdp__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientBase_requestOnceByCommandUdp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientBase::requestOnceByCommandUdp(unsigned int,ArNetPacket *)\n"
    "    ArClientBase::requestOnceByCommandUdp(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getReceivedDataList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getReceivedDataList",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getReceivedDataList" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->getReceivedDataList();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getReceivedArgRetList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getReceivedArgRetList",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getReceivedArgRetList" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->getReceivedArgRetList();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getReceivedGroupAndFlagsList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getReceivedGroupAndFlagsList",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getReceivedGroupAndFlagsList" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (bool)(arg1)->getReceivedGroupAndFlagsList();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getRejected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getRejected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getRejected" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (int)(arg1)->getRejected();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientBase_getRejectedString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientBase_getRejectedString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientBase_getRejectedString" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (char *)(arg1)->getRejectedString();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArClientBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientCommands *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArClientCommands")) SWIG_fail;
  result = (ArClientCommands *)new ArClientCommands();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientCommands, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArClientCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientCommands *arg1 = (ArClientCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientCommands",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientCommands, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientCommands" "', argument " "1"" of type '" "ArClientCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArClientCommands * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArClientCommands_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientCommands, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientFileListerItem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  time_t arg2 ;
  time_t arg3 ;
  ArTypes::UByte4 arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ArClientFileListerItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_ArClientFileListerItem",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientFileListerItem" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArClientFileListerItem" "', argument " "2"" of type '" "time_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ArClientFileListerItem" "', argument " "2"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArClientFileListerItem" "', argument " "3"" of type '" "time_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ArClientFileListerItem" "', argument " "3"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArClientFileListerItem" "', argument " "4"" of type '" "ArTypes::UByte4""'");
  } 
  arg4 = static_cast< ArTypes::UByte4 >(val4);
  result = (ArClientFileListerItem *)new ArClientFileListerItem((char const *)arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientFileListerItem, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientFileListerItem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileListerItem *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientFileListerItem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientFileListerItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_ArClientFileListerItem,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientFileListerItem" "', argument " "1"" of type '" "ArClientFileListerItem const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ArClientFileListerItem" "', argument " "1"" of type '" "ArClientFileListerItem const &""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileListerItem * >(argp1);
  result = (ArClientFileListerItem *)new ArClientFileListerItem((ArClientFileListerItem const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientFileListerItem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientFileListerItem(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_ArClientFileListerItem, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ArClientFileListerItem__SWIG_1(self, args);
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_time_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_ArClientFileListerItem__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArClientFileListerItem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientFileListerItem::ArClientFileListerItem(char const *,time_t,time_t,ArTypes::UByte4)\n"
    "    ArClientFileListerItem::ArClientFileListerItem(ArClientFileListerItem const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArClientFileListerItem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileListerItem *arg1 = (ArClientFileListerItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientFileListerItem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileListerItem, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientFileListerItem" "', argument " "1"" of type '" "ArClientFileListerItem *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileListerItem * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileListerItem_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileListerItem *arg1 = (ArClientFileListerItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileListerItem_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileListerItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileListerItem_getName" "', argument " "1"" of type '" "ArClientFileListerItem const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileListerItem * >(argp1);
  result = (char *)((ArClientFileListerItem const *)arg1)->getName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileListerItem_getLastAccessedTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileListerItem *arg1 = (ArClientFileListerItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileListerItem_getLastAccessedTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileListerItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileListerItem_getLastAccessedTime" "', argument " "1"" of type '" "ArClientFileListerItem const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileListerItem * >(argp1);
  result = ((ArClientFileListerItem const *)arg1)->getLastAccessedTime();
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileListerItem_getLastModifiedTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileListerItem *arg1 = (ArClientFileListerItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileListerItem_getLastModifiedTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileListerItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileListerItem_getLastModifiedTime" "', argument " "1"" of type '" "ArClientFileListerItem const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileListerItem * >(argp1);
  result = ((ArClientFileListerItem const *)arg1)->getLastModifiedTime();
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileListerItem_getSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileListerItem *arg1 = (ArClientFileListerItem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTypes::UByte4 result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileListerItem_getSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileListerItem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileListerItem_getSize" "', argument " "1"" of type '" "ArClientFileListerItem const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileListerItem * >(argp1);
  result = (ArTypes::UByte4)((ArClientFileListerItem const *)arg1)->getSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArClientFileListerItem_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientFileListerItem, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientFileLister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientFileLister *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientFileLister",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientFileLister" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (ArClientFileLister *)new ArClientFileLister(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientFileLister, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArClientFileLister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientFileLister",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientFileLister" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_isAvailable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileLister_isAvailable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_isAvailable" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  result = (bool)(arg1)->isAvailable();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_changeToTopDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileLister_changeToTopDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_changeToTopDir" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  (arg1)->changeToTopDir();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_changeToDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientFileLister_changeToDir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_changeToDir" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileLister_changeToDir" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->changeToDir((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_upOneDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileLister_upOneDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_upOneDir" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  (arg1)->upOneDir();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_changeToAbsDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientFileLister_changeToAbsDir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_changeToAbsDir" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileLister_changeToAbsDir" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->changeToAbsDir((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_getCurrentDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileLister_getCurrentDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_getCurrentDir" "', argument " "1"" of type '" "ArClientFileLister const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  result = (char *)((ArClientFileLister const *)arg1)->getCurrentDir();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_getWaitingForDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileLister_getWaitingForDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_getWaitingForDir" "', argument " "1"" of type '" "ArClientFileLister const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  result = (char *)((ArClientFileLister const *)arg1)->getWaitingForDir();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_getDirectories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::list< ArClientFileListerItem,std::allocator< ArClientFileListerItem > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileLister_getDirectories",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_getDirectories" "', argument " "1"" of type '" "ArClientFileLister const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  result = ((ArClientFileLister const *)arg1)->getDirectories();
  resultobj = SWIG_NewPointerObj((new std::list< ArClientFileListerItem,std::allocator< ArClientFileListerItem > >(static_cast< const std::list< ArClientFileListerItem,std::allocator< ArClientFileListerItem > >& >(result))), SWIGTYPE_p_std__listT_ArClientFileListerItem_std__allocatorT_ArClientFileListerItem_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_getFiles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::list< ArClientFileListerItem,std::allocator< ArClientFileListerItem > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileLister_getFiles",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_getFiles" "', argument " "1"" of type '" "ArClientFileLister const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  result = ((ArClientFileLister const *)arg1)->getFiles();
  resultobj = SWIG_NewPointerObj((new std::list< ArClientFileListerItem,std::allocator< ArClientFileListerItem > >(static_cast< const std::list< ArClientFileListerItem,std::allocator< ArClientFileListerItem > >& >(result))), SWIGTYPE_p_std__listT_ArClientFileListerItem_std__allocatorT_ArClientFileListerItem_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_addUpdatedCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientFileLister_addUpdatedCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_addUpdatedCallback" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileLister_addUpdatedCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientFileLister_addUpdatedCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addUpdatedCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_addUpdatedCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientFileLister_addUpdatedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_addUpdatedCallback" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileLister_addUpdatedCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  (arg1)->addUpdatedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_addUpdatedCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileLister, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArFunctor1T_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientFileLister_addUpdatedCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileLister, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArFunctor1T_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientFileLister_addUpdatedCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientFileLister_addUpdatedCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientFileLister::addUpdatedCallback(ArFunctor1< int > *,ArListPos::Pos)\n"
    "    ArClientFileLister::addUpdatedCallback(ArFunctor1< int > *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_remUpdatedCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientFileLister_remUpdatedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_remUpdatedCallback" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileLister_remUpdatedCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  (arg1)->remUpdatedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_getLastUpdated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileLister_getLastUpdated",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_getLastUpdated" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  result = (arg1)->getLastUpdated();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_getLastRequested(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileLister_getLastRequested",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_getLastRequested" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  result = (arg1)->getLastRequested();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileLister_log(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileLister *arg1 = (ArClientFileLister *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientFileLister_log",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileLister_log" "', argument " "1"" of type '" "ArClientFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileLister * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientFileLister_log" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->log(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArClientFileLister_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientFileLister, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientFileToClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientFileToClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientFileToClient",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientFileToClient" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (ArClientFileToClient *)new ArClientFileToClient(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientFileToClient, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArClientFileToClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientFileToClient",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientFileToClient" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_isAvailable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileToClient_isAvailable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_isAvailable" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  result = (bool)(arg1)->isAvailable();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_isAvailableSetTimestamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileToClient_isAvailableSetTimestamp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_isAvailableSetTimestamp" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  result = (bool)(arg1)->isAvailableSetTimestamp();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_getFileFromDirectory__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArClientFileToClient_getFileFromDirectory",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_getFileFromDirectory" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileToClient_getFileFromDirectory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientFileToClient_getFileFromDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArClientFileToClient_getFileFromDirectory" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArClientFileToClient_getFileFromDirectory" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->getFileFromDirectory((char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_getFileFromDirectory__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientFileToClient_getFileFromDirectory",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_getFileFromDirectory" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileToClient_getFileFromDirectory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientFileToClient_getFileFromDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArClientFileToClient_getFileFromDirectory" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (bool)(arg1)->getFileFromDirectory((char const *)arg2,(char const *)arg3,(char const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_getFileFromDirectory(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileToClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArClientFileToClient_getFileFromDirectory__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileToClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ArClientFileToClient_getFileFromDirectory__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientFileToClient_getFileFromDirectory'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientFileToClient::getFileFromDirectory(char const *,char const *,char const *,bool)\n"
    "    ArClientFileToClient::getFileFromDirectory(char const *,char const *,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_cancelGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileToClient_cancelGet",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_cancelGet" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  (arg1)->cancelGet();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_isWaitingForFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileToClient_isWaitingForFile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_isWaitingForFile" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  result = (bool)(arg1)->isWaitingForFile();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_getDirectory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileToClient_getDirectory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_getDirectory" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  result = (char *)(arg1)->getDirectory();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_getFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileToClient_getFileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_getFileName" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  result = (char *)(arg1)->getFileName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_getClientFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileToClient_getClientFileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_getClientFileName" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  result = (char *)(arg1)->getClientFileName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_addFileReceivedCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientFileToClient_addFileReceivedCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_addFileReceivedCallback" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileToClient_addFileReceivedCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientFileToClient_addFileReceivedCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addFileReceivedCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_addFileReceivedCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientFileToClient_addFileReceivedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_addFileReceivedCallback" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileToClient_addFileReceivedCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  (arg1)->addFileReceivedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_addFileReceivedCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileToClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArFunctor1T_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientFileToClient_addFileReceivedCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileToClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArFunctor1T_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientFileToClient_addFileReceivedCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientFileToClient_addFileReceivedCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientFileToClient::addFileReceivedCallback(ArFunctor1< int > *,ArListPos::Pos)\n"
    "    ArClientFileToClient::addFileReceivedCallback(ArFunctor1< int > *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_remFileReceivedCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientFileToClient_remFileReceivedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_remFileReceivedCallback" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileToClient_remFileReceivedCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  (arg1)->remFileReceivedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_getLastReceived(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileToClient_getLastReceived",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_getLastReceived" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  result = (arg1)->getLastReceived();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileToClient_getLastRequested(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileToClient *arg1 = (ArClientFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileToClient_getLastRequested",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileToClient_getLastRequested" "', argument " "1"" of type '" "ArClientFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileToClient * >(argp1);
  result = (arg1)->getLastRequested();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArClientFileToClient_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientFileToClient, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientFileFromClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientFileFromClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientFileFromClient",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientFileFromClient" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (ArClientFileFromClient *)new ArClientFileFromClient(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientFileFromClient, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArClientFileFromClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientFileFromClient",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientFileFromClient" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_isAvailable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_isAvailable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_isAvailable" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  result = (bool)(arg1)->isAvailable();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_isAvailableSlow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_isAvailableSlow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_isAvailableSlow" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  result = (bool)(arg1)->isAvailableSlow();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_isAvailableFast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_isAvailableFast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_isAvailableFast" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  result = (bool)(arg1)->isAvailableFast();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_isAvailableSetTimestamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_isAvailableSetTimestamp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_isAvailableSetTimestamp" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  result = (bool)(arg1)->isAvailableSetTimestamp();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_putFileToDirectory__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  ArClientFileFromClient::SendSpeed arg5 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArClientFileFromClient_putFileToDirectory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "5"" of type '" "ArClientFileFromClient::SendSpeed""'");
  } 
  arg5 = static_cast< ArClientFileFromClient::SendSpeed >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (bool)(arg1)->putFileToDirectory((char const *)arg2,(char const *)arg3,(char const *)arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_putFileToDirectory__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  ArClientFileFromClient::SendSpeed arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArClientFileFromClient_putFileToDirectory",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "5"" of type '" "ArClientFileFromClient::SendSpeed""'");
  } 
  arg5 = static_cast< ArClientFileFromClient::SendSpeed >(val5);
  result = (bool)(arg1)->putFileToDirectory((char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_putFileToDirectory__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArClientFileFromClient_putFileToDirectory",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArClientFileFromClient_putFileToDirectory" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (bool)(arg1)->putFileToDirectory((char const *)arg2,(char const *)arg3,(char const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_putFileToDirectory(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileFromClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArClientFileFromClient_putFileToDirectory__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileFromClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ArClientFileFromClient_putFileToDirectory__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileFromClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_ArClientFileFromClient_putFileToDirectory__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientFileFromClient_putFileToDirectory'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientFileFromClient::putFileToDirectory(char const *,char const *,char const *,ArClientFileFromClient::SendSpeed,bool)\n"
    "    ArClientFileFromClient::putFileToDirectory(char const *,char const *,char const *,ArClientFileFromClient::SendSpeed)\n"
    "    ArClientFileFromClient::putFileToDirectory(char const *,char const *,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_cancelPut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_cancelPut",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_cancelPut" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  (arg1)->cancelPut();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_isWaitingForReturn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_isWaitingForReturn",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_isWaitingForReturn" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  result = (bool)(arg1)->isWaitingForReturn();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_getDirectory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_getDirectory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_getDirectory" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  result = (char *)(arg1)->getDirectory();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_getFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_getFileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_getFileName" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  result = (char *)(arg1)->getFileName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_getClientFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_getClientFileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_getClientFileName" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  result = (char *)(arg1)->getClientFileName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_addFileSentCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientFileFromClient_addFileSentCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_addFileSentCallback" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileFromClient_addFileSentCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientFileFromClient_addFileSentCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addFileSentCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_addFileSentCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientFileFromClient_addFileSentCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_addFileSentCallback" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileFromClient_addFileSentCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  (arg1)->addFileSentCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_addFileSentCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileFromClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArFunctor1T_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientFileFromClient_addFileSentCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientFileFromClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArFunctor1T_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientFileFromClient_addFileSentCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientFileFromClient_addFileSentCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientFileFromClient::addFileSentCallback(ArFunctor1< int > *,ArListPos::Pos)\n"
    "    ArClientFileFromClient::addFileSentCallback(ArFunctor1< int > *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_remFileSentCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientFileFromClient_remFileSentCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_remFileSentCallback" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientFileFromClient_remFileSentCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  (arg1)->remFileSentCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_getLastCompletedSend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_getLastCompletedSend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_getLastCompletedSend" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  result = (arg1)->getLastCompletedSend();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientFileFromClient_getLastStartedSend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientFileFromClient *arg1 = (ArClientFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientFileFromClient_getLastStartedSend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientFileFromClient_getLastStartedSend" "', argument " "1"" of type '" "ArClientFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArClientFileFromClient * >(argp1);
  result = (arg1)->getLastStartedSend();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArClientFileFromClient_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientFileFromClient, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientDeleteFileOnServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientDeleteFileOnServer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientDeleteFileOnServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientDeleteFileOnServer" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (ArClientDeleteFileOnServer *)new ArClientDeleteFileOnServer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientDeleteFileOnServer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArClientDeleteFileOnServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientDeleteFileOnServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientDeleteFileOnServer" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_isAvailable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientDeleteFileOnServer_isAvailable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientDeleteFileOnServer_isAvailable" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  result = (bool)(arg1)->isAvailable();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_deleteFileFromDirectory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientDeleteFileOnServer_deleteFileFromDirectory",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientDeleteFileOnServer_deleteFileFromDirectory" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientDeleteFileOnServer_deleteFileFromDirectory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientDeleteFileOnServer_deleteFileFromDirectory" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->deleteFileFromDirectory((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_isWaitingForReturn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientDeleteFileOnServer_isWaitingForReturn",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientDeleteFileOnServer_isWaitingForReturn" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  result = (bool)(arg1)->isWaitingForReturn();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_getDirectory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientDeleteFileOnServer_getDirectory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientDeleteFileOnServer_getDirectory" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  result = (char *)(arg1)->getDirectory();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_getFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientDeleteFileOnServer_getFileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientDeleteFileOnServer_getFileName" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  result = (char *)(arg1)->getFileName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_addFileDeletedCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientDeleteFileOnServer_addFileDeletedCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientDeleteFileOnServer_addFileDeletedCallback" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientDeleteFileOnServer_addFileDeletedCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientDeleteFileOnServer_addFileDeletedCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addFileDeletedCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_addFileDeletedCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientDeleteFileOnServer_addFileDeletedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientDeleteFileOnServer_addFileDeletedCallback" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientDeleteFileOnServer_addFileDeletedCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  (arg1)->addFileDeletedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_addFileDeletedCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientDeleteFileOnServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArFunctor1T_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientDeleteFileOnServer_addFileDeletedCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientDeleteFileOnServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArFunctor1T_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientDeleteFileOnServer_addFileDeletedCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientDeleteFileOnServer_addFileDeletedCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientDeleteFileOnServer::addFileDeletedCallback(ArFunctor1< int > *,ArListPos::Pos)\n"
    "    ArClientDeleteFileOnServer::addFileDeletedCallback(ArFunctor1< int > *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_remFileDeletedCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  ArFunctor1< int > *arg2 = (ArFunctor1< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientDeleteFileOnServer_remFileDeletedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientDeleteFileOnServer_remFileDeletedCallback" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor1T_int_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientDeleteFileOnServer_remFileDeletedCallback" "', argument " "2"" of type '" "ArFunctor1< int > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor1< int > * >(argp2);
  (arg1)->remFileDeletedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_getLastCompletedSend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientDeleteFileOnServer_getLastCompletedSend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientDeleteFileOnServer_getLastCompletedSend" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  result = (arg1)->getLastCompletedSend();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientDeleteFileOnServer_getLastStartedSend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientDeleteFileOnServer *arg1 = (ArClientDeleteFileOnServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientDeleteFileOnServer_getLastStartedSend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientDeleteFileOnServer_getLastStartedSend" "', argument " "1"" of type '" "ArClientDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArClientDeleteFileOnServer * >(argp1);
  result = (arg1)->getLastStartedSend();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArClientDeleteFileOnServer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientDeleteFileOnServer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientHandlerConfig__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  bool arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ArClientHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_ArClientHandlerConfig",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientHandlerConfig" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArClientHandlerConfig" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArClientHandlerConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArClientHandlerConfig" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (ArClientHandlerConfig *)new ArClientHandlerConfig(arg1,arg2,(char const *)arg3,(char const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientHandlerConfig, SWIG_POINTER_NEW |  0 );
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientHandlerConfig__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  bool arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArClientHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArClientHandlerConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientHandlerConfig" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArClientHandlerConfig" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArClientHandlerConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (ArClientHandlerConfig *)new ArClientHandlerConfig(arg1,arg2,(char const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientHandlerConfig, SWIG_POINTER_NEW |  0 );
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientHandlerConfig__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArClientHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArClientHandlerConfig",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientHandlerConfig" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArClientHandlerConfig" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (ArClientHandlerConfig *)new ArClientHandlerConfig(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientHandlerConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientHandlerConfig__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientHandlerConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientHandlerConfig" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (ArClientHandlerConfig *)new ArClientHandlerConfig(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientHandlerConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientHandlerConfig(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ArClientHandlerConfig__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_ArClientHandlerConfig__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_ArClientHandlerConfig__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_ArClientHandlerConfig__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArClientHandlerConfig'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientHandlerConfig::ArClientHandlerConfig(ArClientBase *,bool,char const *,char const *)\n"
    "    ArClientHandlerConfig::ArClientHandlerConfig(ArClientBase *,bool,char const *)\n"
    "    ArClientHandlerConfig::ArClientHandlerConfig(ArClientBase *,bool)\n"
    "    ArClientHandlerConfig::ArClientHandlerConfig(ArClientBase *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArClientHandlerConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientHandlerConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientHandlerConfig" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_requestConfigFromServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_requestConfigFromServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_requestConfigFromServer" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  (arg1)->requestConfigFromServer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_reloadConfigOnServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_reloadConfigOnServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_reloadConfigOnServer" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  (arg1)->reloadConfigOnServer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_getConfigCopy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArConfig result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_getConfigCopy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_getConfigCopy" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (arg1)->getConfigCopy();
  resultobj = SWIG_NewPointerObj((new ArConfig(static_cast< const ArConfig& >(result))), SWIGTYPE_p_ArConfig, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addGotConfigCB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientHandlerConfig_addGotConfigCB",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_addGotConfigCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientHandlerConfig_addGotConfigCB" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addGotConfigCB(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addGotConfigCB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_addGotConfigCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_addGotConfigCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addGotConfigCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addGotConfigCB(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArClientHandlerConfig_addGotConfigCB__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientHandlerConfig_addGotConfigCB__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientHandlerConfig_addGotConfigCB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientHandlerConfig::addGotConfigCB(ArFunctor *,ArListPos::Pos)\n"
    "    ArClientHandlerConfig::addGotConfigCB(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_remGotConfigCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_remGotConfigCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_remGotConfigCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remGotConfigCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addSaveConfigSucceededCB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientHandlerConfig_addSaveConfigSucceededCB",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_addSaveConfigSucceededCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientHandlerConfig_addSaveConfigSucceededCB" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addSaveConfigSucceededCB(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addSaveConfigSucceededCB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_addSaveConfigSucceededCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_addSaveConfigSucceededCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addSaveConfigSucceededCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addSaveConfigSucceededCB(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArClientHandlerConfig_addSaveConfigSucceededCB__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientHandlerConfig_addSaveConfigSucceededCB__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientHandlerConfig_addSaveConfigSucceededCB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientHandlerConfig::addSaveConfigSucceededCB(ArFunctor *,ArListPos::Pos)\n"
    "    ArClientHandlerConfig::addSaveConfigSucceededCB(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_remSaveConfigSucceededCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_remSaveConfigSucceededCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_remSaveConfigSucceededCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remSaveConfigSucceededCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addSaveConfigFailedCB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor1< char const * > *arg2 = (ArFunctor1< char const * > *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientHandlerConfig_addSaveConfigFailedCB",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_addSaveConfigFailedCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor1_String(obj1);
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientHandlerConfig_addSaveConfigFailedCB" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addSaveConfigFailedCB(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addSaveConfigFailedCB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor1< char const * > *arg2 = (ArFunctor1< char const * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_addSaveConfigFailedCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_addSaveConfigFailedCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor1_String(obj1);
  }
  (arg1)->addSaveConfigFailedCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addSaveConfigFailedCB(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArClientHandlerConfig_addSaveConfigFailedCB__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientHandlerConfig_addSaveConfigFailedCB__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientHandlerConfig_addSaveConfigFailedCB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientHandlerConfig::addSaveConfigFailedCB(ArFunctor1< char const * > *,ArListPos::Pos)\n"
    "    ArClientHandlerConfig::addSaveConfigFailedCB(ArFunctor1< char const * > *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_remSaveConfigFailedCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor1< char const * > *arg2 = (ArFunctor1< char const * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_remSaveConfigFailedCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_remSaveConfigFailedCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor1_String(obj1);
  }
  (arg1)->remSaveConfigFailedCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_haveGottenConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_haveGottenConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_haveGottenConfig" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (bool)(arg1)->haveGottenConfig();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_saveConfigToServer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_saveConfigToServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_saveConfigToServer" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  (arg1)->saveConfigToServer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_saveConfigToServer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > > *arg3 = (std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientHandlerConfig_saveConfigToServer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_saveConfigToServer" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientHandlerConfig_saveConfigToServer" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_std__setT_std__string_ArStrCaseCmpOp_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArClientHandlerConfig_saveConfigToServer" "', argument " "3"" of type '" "std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > > const *""'"); 
  }
  arg3 = reinterpret_cast< std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > > * >(argp3);
  (arg1)->saveConfigToServer(arg2,(std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > > const *)arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_saveConfigToServer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_saveConfigToServer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_saveConfigToServer" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientHandlerConfig_saveConfigToServer" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  (arg1)->saveConfigToServer(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_saveConfigToServer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArClientHandlerConfig_saveConfigToServer__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientHandlerConfig_saveConfigToServer__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_std__setT_std__string_ArStrCaseCmpOp_std__allocatorT_std__string_t_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArClientHandlerConfig_saveConfigToServer__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientHandlerConfig_saveConfigToServer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientHandlerConfig::saveConfigToServer()\n"
    "    ArClientHandlerConfig::saveConfigToServer(ArConfig *,std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > > const *)\n"
    "    ArClientHandlerConfig::saveConfigToServer(ArConfig *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_haveRequestedDefaults(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_haveRequestedDefaults",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_haveRequestedDefaults" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (bool)(arg1)->haveRequestedDefaults();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_haveGottenDefaults(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_haveGottenDefaults",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_haveGottenDefaults" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (bool)(arg1)->haveGottenDefaults();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_canRequestDefaults(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_canRequestDefaults",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_canRequestDefaults" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (bool)(arg1)->canRequestDefaults();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_requestDefaultConfigFromServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_requestDefaultConfigFromServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_requestDefaultConfigFromServer" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (bool)(arg1)->requestDefaultConfigFromServer();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_getDefaultConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_getDefaultConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_getDefaultConfig" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (ArConfig *)(arg1)->getDefaultConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_requestConfigDefaults(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_requestConfigDefaults",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_requestConfigDefaults" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (bool)(arg1)->requestConfigDefaults();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_requestSectionDefaults(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_requestSectionDefaults",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_requestSectionDefaults" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientHandlerConfig_requestSectionDefaults" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->requestSectionDefaults((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addGotConfigDefaultsCB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientHandlerConfig_addGotConfigDefaultsCB",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_addGotConfigDefaultsCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientHandlerConfig_addGotConfigDefaultsCB" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addGotConfigDefaultsCB(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addGotConfigDefaultsCB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_addGotConfigDefaultsCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_addGotConfigDefaultsCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addGotConfigDefaultsCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addGotConfigDefaultsCB(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArClientHandlerConfig_addGotConfigDefaultsCB__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientHandlerConfig_addGotConfigDefaultsCB__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientHandlerConfig_addGotConfigDefaultsCB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientHandlerConfig::addGotConfigDefaultsCB(ArFunctor *,ArListPos::Pos)\n"
    "    ArClientHandlerConfig::addGotConfigDefaultsCB(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_remGotConfigDefaultsCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_remGotConfigDefaultsCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_remGotConfigDefaultsCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remGotConfigDefaultsCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_isLastEditablePriorityAvailable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_isLastEditablePriorityAvailable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_isLastEditablePriorityAvailable" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (bool)(arg1)->isLastEditablePriorityAvailable();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_requestLastEditablePriorityFromServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_requestLastEditablePriorityFromServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_requestLastEditablePriorityFromServer" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (bool)(arg1)->requestLastEditablePriorityFromServer();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_haveGottenLastEditablePriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_haveGottenLastEditablePriority",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_haveGottenLastEditablePriority" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (bool)(arg1)->haveGottenLastEditablePriority();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_getLastEditablePriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArPriority::Priority result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_getLastEditablePriority",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_getLastEditablePriority" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (ArPriority::Priority)(arg1)->getLastEditablePriority();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addGotLastEditablePriorityCB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientHandlerConfig_addGotLastEditablePriorityCB",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_addGotLastEditablePriorityCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientHandlerConfig_addGotLastEditablePriorityCB" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addGotLastEditablePriorityCB(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addGotLastEditablePriorityCB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_addGotLastEditablePriorityCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_addGotLastEditablePriorityCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addGotLastEditablePriorityCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_addGotLastEditablePriorityCB(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArClientHandlerConfig_addGotLastEditablePriorityCB__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientHandlerConfig_addGotLastEditablePriorityCB__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientHandlerConfig_addGotLastEditablePriorityCB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientHandlerConfig::addGotLastEditablePriorityCB(ArFunctor *,int)\n"
    "    ArClientHandlerConfig::addGotLastEditablePriorityCB(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_remGotLastEditablePriorityCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_remGotLastEditablePriorityCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_remGotLastEditablePriorityCB" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remGotLastEditablePriorityCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_getConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_getConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_getConfig" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (ArConfig *)(arg1)->getConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_lock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_lock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_lock" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (int)(arg1)->lock();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_tryLock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_tryLock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_tryLock" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (int)(arg1)->tryLock();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_unlock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerConfig_unlock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_unlock" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  result = (int)(arg1)->unlock();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerConfig_setQuiet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerConfig *arg1 = (ArClientHandlerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerConfig_setQuiet",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerConfig_setQuiet" "', argument " "1"" of type '" "ArClientHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientHandlerConfig_setQuiet" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setQuiet(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArClientHandlerConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientHandlerConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientSimpleConnector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArArgumentParser *arg1 = (ArArgumentParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientSimpleConnector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientSimpleConnector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArArgumentParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientSimpleConnector" "', argument " "1"" of type '" "ArArgumentParser *""'"); 
  }
  arg1 = reinterpret_cast< ArArgumentParser * >(argp1);
  result = (ArClientSimpleConnector *)new ArClientSimpleConnector(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientSimpleConnector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientSimpleConnector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  char **arg2 = (char **) 0 ;
  PyObject * obj0 = 0 ;
  ArClientSimpleConnector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientSimpleConnector",&obj0)) SWIG_fail;
  {
    int i;
    if (!PyList_Check(obj0)) {
      PyErr_SetString(PyExc_ValueError, "Expecting a list");
      return NULL;
    }
    int tmpArgc = PyList_Size(obj0);
    tmpArgc = PyList_Size(obj0);
    arg2 = (char **) malloc((tmpArgc+1)*sizeof(char *));
    for (i = 0; i < tmpArgc; i++) {
      PyObject *s = PyList_GetItem(obj0,i);
      if (!PyString_Check(s)) {
        free(arg2);
        PyErr_SetString(PyExc_ValueError, "Arguments must be strings");
        return NULL;
      }
      arg2[i] = PyString_AsString(s);
    }
    arg2[i] = 0;
    /* Allocate a new int to hold the size, since some classes retain the pointer
           and try to use it after this wrapped function returns.
           Note this is not deallocated, in general classes using this typemap are
           defacto singletons that live for the life of the program, so it's not a problem,
           but if this typemap ever gets used for other kinds of classes is may come up. */
    int *newArgc = (int*) malloc(sizeof(int));
    *newArgc = tmpArgc;
    arg1 = newArgc;
    
  }
  result = (ArClientSimpleConnector *)new ArClientSimpleConnector(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientSimpleConnector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientSimpleConnector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArArgumentBuilder *arg1 = (ArArgumentBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientSimpleConnector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientSimpleConnector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArArgumentBuilder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientSimpleConnector" "', argument " "1"" of type '" "ArArgumentBuilder *""'"); 
  }
  arg1 = reinterpret_cast< ArArgumentBuilder * >(argp1);
  result = (ArClientSimpleConnector *)new ArClientSimpleConnector(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientSimpleConnector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArClientSimpleConnector(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArArgumentParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ArClientSimpleConnector__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      _v = PyList_Check(argv[0]);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_ArClientSimpleConnector__SWIG_1(self, args);
      }
      return _wrap_new_ArClientSimpleConnector__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArArgumentBuilder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ArClientSimpleConnector__SWIG_2(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArClientSimpleConnector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientSimpleConnector::ArClientSimpleConnector(ArArgumentParser *)\n"
    "    ArClientSimpleConnector::ArClientSimpleConnector(int *,char **)\n"
    "    ArClientSimpleConnector::ArClientSimpleConnector(ArArgumentBuilder *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArClientSimpleConnector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientSimpleConnector *arg1 = (ArClientSimpleConnector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientSimpleConnector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientSimpleConnector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientSimpleConnector" "', argument " "1"" of type '" "ArClientSimpleConnector *""'"); 
  }
  arg1 = reinterpret_cast< ArClientSimpleConnector * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientSimpleConnector_connectClient__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientSimpleConnector *arg1 = (ArClientSimpleConnector *) 0 ;
  ArClientBase *arg2 = (ArClientBase *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientSimpleConnector_connectClient",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientSimpleConnector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientSimpleConnector_connectClient" "', argument " "1"" of type '" "ArClientSimpleConnector *""'"); 
  }
  arg1 = reinterpret_cast< ArClientSimpleConnector * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientSimpleConnector_connectClient" "', argument " "2"" of type '" "ArClientBase *""'"); 
  }
  arg2 = reinterpret_cast< ArClientBase * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientSimpleConnector_connectClient" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->connectClient(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientSimpleConnector_connectClient__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientSimpleConnector *arg1 = (ArClientSimpleConnector *) 0 ;
  ArClientBase *arg2 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientSimpleConnector_connectClient",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientSimpleConnector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientSimpleConnector_connectClient" "', argument " "1"" of type '" "ArClientSimpleConnector *""'"); 
  }
  arg1 = reinterpret_cast< ArClientSimpleConnector * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientSimpleConnector_connectClient" "', argument " "2"" of type '" "ArClientBase *""'"); 
  }
  arg2 = reinterpret_cast< ArClientBase * >(argp2);
  result = (bool)(arg1)->connectClient(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientSimpleConnector_connectClient(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientSimpleConnector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArClientBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientSimpleConnector_connectClient__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientSimpleConnector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArClientBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArClientSimpleConnector_connectClient__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientSimpleConnector_connectClient'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientSimpleConnector::connectClient(ArClientBase *,bool)\n"
    "    ArClientSimpleConnector::connectClient(ArClientBase *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientSimpleConnector_parseArgs__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientSimpleConnector *arg1 = (ArClientSimpleConnector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientSimpleConnector_parseArgs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientSimpleConnector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientSimpleConnector_parseArgs" "', argument " "1"" of type '" "ArClientSimpleConnector *""'"); 
  }
  arg1 = reinterpret_cast< ArClientSimpleConnector * >(argp1);
  result = (bool)(arg1)->parseArgs();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientSimpleConnector_parseArgs__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientSimpleConnector *arg1 = (ArClientSimpleConnector *) 0 ;
  ArArgumentParser *arg2 = (ArArgumentParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientSimpleConnector_parseArgs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientSimpleConnector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientSimpleConnector_parseArgs" "', argument " "1"" of type '" "ArClientSimpleConnector *""'"); 
  }
  arg1 = reinterpret_cast< ArClientSimpleConnector * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArArgumentParser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientSimpleConnector_parseArgs" "', argument " "2"" of type '" "ArArgumentParser *""'"); 
  }
  arg2 = reinterpret_cast< ArArgumentParser * >(argp2);
  result = (bool)(arg1)->parseArgs(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientSimpleConnector_parseArgs(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientSimpleConnector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArClientSimpleConnector_parseArgs__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientSimpleConnector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArArgumentParser, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArClientSimpleConnector_parseArgs__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientSimpleConnector_parseArgs'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientSimpleConnector::parseArgs()\n"
    "    ArClientSimpleConnector::parseArgs(ArArgumentParser *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientSimpleConnector_logOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientSimpleConnector *arg1 = (ArClientSimpleConnector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientSimpleConnector_logOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientSimpleConnector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientSimpleConnector_logOptions" "', argument " "1"" of type '" "ArClientSimpleConnector const *""'"); 
  }
  arg1 = reinterpret_cast< ArClientSimpleConnector * >(argp1);
  ((ArClientSimpleConnector const *)arg1)->logOptions();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArClientSimpleConnector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientSimpleConnector, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArHybridForwarderVideo__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArClientBase *arg2 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArHybridForwarderVideo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArHybridForwarderVideo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArHybridForwarderVideo" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArHybridForwarderVideo" "', argument " "2"" of type '" "ArClientBase *""'"); 
  }
  arg2 = reinterpret_cast< ArClientBase * >(argp2);
  result = (ArHybridForwarderVideo *)new ArHybridForwarderVideo(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArHybridForwarderVideo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArHybridForwarderVideo__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArHybridForwarderVideo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArHybridForwarderVideo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArHybridForwarderVideo" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArHybridForwarderVideo" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArHybridForwarderVideo" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (ArHybridForwarderVideo *)new ArHybridForwarderVideo(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArHybridForwarderVideo, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArHybridForwarderVideo__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArHybridForwarderVideo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArHybridForwarderVideo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArHybridForwarderVideo" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArHybridForwarderVideo" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (ArHybridForwarderVideo *)new ArHybridForwarderVideo(arg1,(char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArHybridForwarderVideo, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArHybridForwarderVideo__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArHybridForwarderVideo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArHybridForwarderVideo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArHybridForwarderVideo" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (ArHybridForwarderVideo *)new ArHybridForwarderVideo(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArHybridForwarderVideo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArHybridForwarderVideo(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ArHybridForwarderVideo__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArClientBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArHybridForwarderVideo__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArHybridForwarderVideo__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ArHybridForwarderVideo__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArHybridForwarderVideo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArHybridForwarderVideo::ArHybridForwarderVideo(ArServerBase *,ArClientBase *)\n"
    "    ArHybridForwarderVideo::ArHybridForwarderVideo(ArServerBase *,char const *,int)\n"
    "    ArHybridForwarderVideo::ArHybridForwarderVideo(ArServerBase *,char const *)\n"
    "    ArHybridForwarderVideo::ArHybridForwarderVideo(ArServerBase *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArHybridForwarderVideo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArHybridForwarderVideo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArHybridForwarderVideo" "', argument " "1"" of type '" "ArHybridForwarderVideo *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_isForwardingVideo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArHybridForwarderVideo_isForwardingVideo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_isForwardingVideo" "', argument " "1"" of type '" "ArHybridForwarderVideo const *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  result = (bool)((ArHybridForwarderVideo const *)arg1)->isForwardingVideo();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_getCameraName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArHybridForwarderVideo_getCameraName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_getCameraName" "', argument " "1"" of type '" "ArHybridForwarderVideo *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  result = (char *)(arg1)->getCameraName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_setCameraName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArHybridForwarderVideo_setCameraName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_setCameraName" "', argument " "1"" of type '" "ArHybridForwarderVideo *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArHybridForwarderVideo_setCameraName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setCameraName((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_addToCameraCollection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  ArCameraCollection *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArHybridForwarderVideo_addToCameraCollection",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_addToCameraCollection" "', argument " "1"" of type '" "ArHybridForwarderVideo *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArCameraCollection,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArHybridForwarderVideo_addToCameraCollection" "', argument " "2"" of type '" "ArCameraCollection &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArHybridForwarderVideo_addToCameraCollection" "', argument " "2"" of type '" "ArCameraCollection &""'"); 
  }
  arg2 = reinterpret_cast< ArCameraCollection * >(argp2);
  (arg1)->addToCameraCollection(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_sendVideoSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArHybridForwarderVideo_sendVideoSize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_sendVideoSize" "', argument " "1"" of type '" "ArHybridForwarderVideo *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArHybridForwarderVideo_sendVideoSize" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArHybridForwarderVideo_sendVideoSize" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->sendVideoSize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_sendVideo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArHybridForwarderVideo_sendVideo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_sendVideo" "', argument " "1"" of type '" "ArHybridForwarderVideo *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArHybridForwarderVideo_sendVideo" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArHybridForwarderVideo_sendVideo" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->sendVideo(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_receiveVideoSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArHybridForwarderVideo_receiveVideoSize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_receiveVideoSize" "', argument " "1"" of type '" "ArHybridForwarderVideo *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArHybridForwarderVideo_receiveVideoSize" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  (arg1)->receiveVideoSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_receiveVideo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArHybridForwarderVideo_receiveVideo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_receiveVideo" "', argument " "1"" of type '" "ArHybridForwarderVideo *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArHybridForwarderVideo_receiveVideo" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  (arg1)->receiveVideo(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_clientCycleCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArHybridForwarderVideo_clientCycleCallback",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_clientCycleCallback" "', argument " "1"" of type '" "ArHybridForwarderVideo *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  (arg1)->clientCycleCallback();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_setVideoRequestTime__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArHybridForwarderVideo_setVideoRequestTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_setVideoRequestTime" "', argument " "1"" of type '" "ArHybridForwarderVideo *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArHybridForwarderVideo_setVideoRequestTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setVideoRequestTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_setVideoRequestTime__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArHybridForwarderVideo *arg1 = (ArHybridForwarderVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArHybridForwarderVideo_setVideoRequestTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArHybridForwarderVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArHybridForwarderVideo_setVideoRequestTime" "', argument " "1"" of type '" "ArHybridForwarderVideo const *""'"); 
  }
  arg1 = reinterpret_cast< ArHybridForwarderVideo * >(argp1);
  result = (int)((ArHybridForwarderVideo const *)arg1)->setVideoRequestTime();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArHybridForwarderVideo_setVideoRequestTime(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArHybridForwarderVideo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArHybridForwarderVideo_setVideoRequestTime__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArHybridForwarderVideo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArHybridForwarderVideo_setVideoRequestTime__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArHybridForwarderVideo_setVideoRequestTime'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArHybridForwarderVideo::setVideoRequestTime(int)\n"
    "    ArHybridForwarderVideo::setVideoRequestTime() const\n");
  return 0;
}


SWIGINTERN PyObject *ArHybridForwarderVideo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArHybridForwarderVideo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArNetPacketReceiverTcp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverTcp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArNetPacketReceiverTcp")) SWIG_fail;
  result = (ArNetPacketReceiverTcp *)new ArNetPacketReceiverTcp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArNetPacketReceiverTcp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArNetPacketReceiverTcp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverTcp *arg1 = (ArNetPacketReceiverTcp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArNetPacketReceiverTcp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverTcp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArNetPacketReceiverTcp" "', argument " "1"" of type '" "ArNetPacketReceiverTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverTcp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverTcp_setSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverTcp *arg1 = (ArNetPacketReceiverTcp *) 0 ;
  ArSocket *arg2 = (ArSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketReceiverTcp_setSocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverTcp_setSocket" "', argument " "1"" of type '" "ArNetPacketReceiverTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverTcp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArNetPacketReceiverTcp_setSocket" "', argument " "2"" of type '" "ArSocket *""'"); 
  }
  arg2 = reinterpret_cast< ArSocket * >(argp2);
  (arg1)->setSocket(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverTcp_getSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverTcp *arg1 = (ArNetPacketReceiverTcp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArSocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacketReceiverTcp_getSocket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverTcp_getSocket" "', argument " "1"" of type '" "ArNetPacketReceiverTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverTcp * >(argp1);
  result = (ArSocket *)(arg1)->getSocket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArSocket, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverTcp_setProcessPacketCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverTcp *arg1 = (ArNetPacketReceiverTcp *) 0 ;
  ArFunctor1< ArNetPacket * > *arg2 = (ArFunctor1< ArNetPacket * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketReceiverTcp_setProcessPacketCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverTcp_setProcessPacketCB" "', argument " "1"" of type '" "ArNetPacketReceiverTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverTcp * >(argp1);
  {
    arg2 = new ArPyFunctor1<ArNetPacket *>(obj1);
  }
  (arg1)->setProcessPacketCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverTcp_getProcessPacketCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverTcp *arg1 = (ArNetPacketReceiverTcp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArFunctor1< ArNetPacket * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacketReceiverTcp_getProcessPacketCB",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverTcp_getProcessPacketCB" "', argument " "1"" of type '" "ArNetPacketReceiverTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverTcp * >(argp1);
  result = (ArFunctor1< ArNetPacket * > *)(arg1)->getProcessPacketCB();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArFunctor1T_ArNetPacket_p_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverTcp_setLoggingPrefix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverTcp *arg1 = (ArNetPacketReceiverTcp *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketReceiverTcp_setLoggingPrefix",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverTcp_setLoggingPrefix" "', argument " "1"" of type '" "ArNetPacketReceiverTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverTcp * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArNetPacketReceiverTcp_setLoggingPrefix" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setLoggingPrefix((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverTcp_readData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverTcp *arg1 = (ArNetPacketReceiverTcp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacketReceiverTcp_readData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverTcp_readData" "', argument " "1"" of type '" "ArNetPacketReceiverTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverTcp * >(argp1);
  result = (bool)(arg1)->readData();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverTcp_setQuiet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverTcp *arg1 = (ArNetPacketReceiverTcp *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketReceiverTcp_setQuiet",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverTcp_setQuiet" "', argument " "1"" of type '" "ArNetPacketReceiverTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverTcp * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArNetPacketReceiverTcp_setQuiet" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setQuiet(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverTcp_getQuiet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverTcp *arg1 = (ArNetPacketReceiverTcp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacketReceiverTcp_getQuiet",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverTcp_getQuiet" "', argument " "1"" of type '" "ArNetPacketReceiverTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverTcp * >(argp1);
  result = (bool)(arg1)->getQuiet();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArNetPacketReceiverTcp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArNetPacketReceiverTcp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArNetPacketReceiverUdp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverUdp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArNetPacketReceiverUdp")) SWIG_fail;
  result = (ArNetPacketReceiverUdp *)new ArNetPacketReceiverUdp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArNetPacketReceiverUdp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArNetPacketReceiverUdp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverUdp *arg1 = (ArNetPacketReceiverUdp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArNetPacketReceiverUdp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverUdp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArNetPacketReceiverUdp" "', argument " "1"" of type '" "ArNetPacketReceiverUdp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverUdp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverUdp_setSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverUdp *arg1 = (ArNetPacketReceiverUdp *) 0 ;
  ArSocket *arg2 = (ArSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketReceiverUdp_setSocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverUdp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverUdp_setSocket" "', argument " "1"" of type '" "ArNetPacketReceiverUdp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverUdp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArNetPacketReceiverUdp_setSocket" "', argument " "2"" of type '" "ArSocket *""'"); 
  }
  arg2 = reinterpret_cast< ArSocket * >(argp2);
  (arg1)->setSocket(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverUdp_getSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverUdp *arg1 = (ArNetPacketReceiverUdp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArSocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacketReceiverUdp_getSocket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverUdp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverUdp_getSocket" "', argument " "1"" of type '" "ArNetPacketReceiverUdp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverUdp * >(argp1);
  result = (ArSocket *)(arg1)->getSocket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArSocket, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverUdp_setProcessPacketCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverUdp *arg1 = (ArNetPacketReceiverUdp *) 0 ;
  ArFunctor2< ArNetPacket *,sockaddr_in * > *arg2 = (ArFunctor2< ArNetPacket *,sockaddr_in * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketReceiverUdp_setProcessPacketCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverUdp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverUdp_setProcessPacketCB" "', argument " "1"" of type '" "ArNetPacketReceiverUdp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverUdp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor2T_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArNetPacketReceiverUdp_setProcessPacketCB" "', argument " "2"" of type '" "ArFunctor2< ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor2< ArNetPacket *,sockaddr_in * > * >(argp2);
  (arg1)->setProcessPacketCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverUdp_getProcessPacketCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverUdp *arg1 = (ArNetPacketReceiverUdp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArFunctor2< ArNetPacket *,sockaddr_in * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacketReceiverUdp_getProcessPacketCB",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverUdp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverUdp_getProcessPacketCB" "', argument " "1"" of type '" "ArNetPacketReceiverUdp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverUdp * >(argp1);
  result = (ArFunctor2< ArNetPacket *,sockaddr_in * > *)(arg1)->getProcessPacketCB();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArFunctor2T_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketReceiverUdp_readData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketReceiverUdp *arg1 = (ArNetPacketReceiverUdp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacketReceiverUdp_readData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketReceiverUdp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketReceiverUdp_readData" "', argument " "1"" of type '" "ArNetPacketReceiverUdp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketReceiverUdp * >(argp1);
  result = (bool)(arg1)->readData();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArNetPacketReceiverUdp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArNetPacketReceiverUdp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArNetPacketSenderTcp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketSenderTcp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArNetPacketSenderTcp")) SWIG_fail;
  result = (ArNetPacketSenderTcp *)new ArNetPacketSenderTcp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArNetPacketSenderTcp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArNetPacketSenderTcp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketSenderTcp *arg1 = (ArNetPacketSenderTcp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArNetPacketSenderTcp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketSenderTcp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArNetPacketSenderTcp" "', argument " "1"" of type '" "ArNetPacketSenderTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketSenderTcp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketSenderTcp_setSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketSenderTcp *arg1 = (ArNetPacketSenderTcp *) 0 ;
  ArSocket *arg2 = (ArSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketSenderTcp_setSocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketSenderTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketSenderTcp_setSocket" "', argument " "1"" of type '" "ArNetPacketSenderTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketSenderTcp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArNetPacketSenderTcp_setSocket" "', argument " "2"" of type '" "ArSocket *""'"); 
  }
  arg2 = reinterpret_cast< ArSocket * >(argp2);
  (arg1)->setSocket(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketSenderTcp_getSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketSenderTcp *arg1 = (ArNetPacketSenderTcp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArSocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacketSenderTcp_getSocket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketSenderTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketSenderTcp_getSocket" "', argument " "1"" of type '" "ArNetPacketSenderTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketSenderTcp * >(argp1);
  result = (ArSocket *)(arg1)->getSocket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArSocket, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketSenderTcp_setBackupTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketSenderTcp *arg1 = (ArNetPacketSenderTcp *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketSenderTcp_setBackupTimeout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketSenderTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketSenderTcp_setBackupTimeout" "', argument " "1"" of type '" "ArNetPacketSenderTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketSenderTcp * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArNetPacketSenderTcp_setBackupTimeout" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->setBackupTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketSenderTcp_setDebugLogging(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketSenderTcp *arg1 = (ArNetPacketSenderTcp *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketSenderTcp_setDebugLogging",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketSenderTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketSenderTcp_setDebugLogging" "', argument " "1"" of type '" "ArNetPacketSenderTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketSenderTcp * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArNetPacketSenderTcp_setDebugLogging" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setDebugLogging(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketSenderTcp_setLoggingPrefix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketSenderTcp *arg1 = (ArNetPacketSenderTcp *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketSenderTcp_setLoggingPrefix",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketSenderTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketSenderTcp_setLoggingPrefix" "', argument " "1"" of type '" "ArNetPacketSenderTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketSenderTcp * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArNetPacketSenderTcp_setLoggingPrefix" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setLoggingPrefix((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketSenderTcp_sendPacket__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketSenderTcp *arg1 = (ArNetPacketSenderTcp *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArNetPacketSenderTcp_sendPacket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketSenderTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketSenderTcp_sendPacket" "', argument " "1"" of type '" "ArNetPacketSenderTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketSenderTcp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArNetPacketSenderTcp_sendPacket" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArNetPacketSenderTcp_sendPacket" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->sendPacket(arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketSenderTcp_sendPacket__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketSenderTcp *arg1 = (ArNetPacketSenderTcp *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArNetPacketSenderTcp_sendPacket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketSenderTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketSenderTcp_sendPacket" "', argument " "1"" of type '" "ArNetPacketSenderTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketSenderTcp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArNetPacketSenderTcp_sendPacket" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  (arg1)->sendPacket(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArNetPacketSenderTcp_sendPacket(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArNetPacketSenderTcp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArNetPacketSenderTcp_sendPacket__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArNetPacketSenderTcp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArNetPacketSenderTcp_sendPacket__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArNetPacketSenderTcp_sendPacket'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArNetPacketSenderTcp::sendPacket(ArNetPacket *,char const *)\n"
    "    ArNetPacketSenderTcp::sendPacket(ArNetPacket *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArNetPacketSenderTcp_sendData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArNetPacketSenderTcp *arg1 = (ArNetPacketSenderTcp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArNetPacketSenderTcp_sendData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArNetPacketSenderTcp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArNetPacketSenderTcp_sendData" "', argument " "1"" of type '" "ArNetPacketSenderTcp *""'"); 
  }
  arg1 = reinterpret_cast< ArNetPacketSenderTcp * >(argp1);
  result = (bool)(arg1)->sendData();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArNetPacketSenderTcp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArNetPacketSenderTcp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ArServerUserInfo *arg9 = (ArServerUserInfo *) 0 ;
  int arg10 ;
  char *arg11 = (char *) 0 ;
  bool arg12 ;
  char *arg13 = (char *) 0 ;
  bool arg14 ;
  bool arg15 ;
  bool arg16 ;
  char *arg17 = (char *) 0 ;
  ArServerCommands::Type arg18 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  int res11 ;
  char *buf11 = 0 ;
  int alloc11 = 0 ;
  bool val12 ;
  int ecode12 = 0 ;
  int res13 ;
  char *buf13 = 0 ;
  int alloc13 = 0 ;
  bool val14 ;
  int ecode14 = 0 ;
  bool val15 ;
  int ecode15 = 0 ;
  bool val16 ;
  int ecode16 = 0 ;
  int res17 ;
  char *buf17 = 0 ;
  int alloc17 = 0 ;
  int val18 ;
  int ecode18 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  PyObject * obj13 = 0 ;
  PyObject * obj14 = 0 ;
  PyObject * obj15 = 0 ;
  PyObject * obj16 = 0 ;
  PyObject * obj17 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13,&obj14,&obj15,&obj16,&obj17)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerClient" "', argument " "9"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg9 = reinterpret_cast< ArServerUserInfo * >(argp9);
  ecode10 = SWIG_AsVal_int(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerClient" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = static_cast< int >(val10);
  res11 = SWIG_AsCharPtrAndSize(obj10, &buf11, NULL, &alloc11);
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "new_ArServerClient" "', argument " "11"" of type '" "char const *""'");
  }
  arg11 = reinterpret_cast< char * >(buf11);
  ecode12 = SWIG_AsVal_bool(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_ArServerClient" "', argument " "12"" of type '" "bool""'");
  } 
  arg12 = static_cast< bool >(val12);
  res13 = SWIG_AsCharPtrAndSize(obj12, &buf13, NULL, &alloc13);
  if (!SWIG_IsOK(res13)) {
    SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "new_ArServerClient" "', argument " "13"" of type '" "char const *""'");
  }
  arg13 = reinterpret_cast< char * >(buf13);
  ecode14 = SWIG_AsVal_bool(obj13, &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "new_ArServerClient" "', argument " "14"" of type '" "bool""'");
  } 
  arg14 = static_cast< bool >(val14);
  ecode15 = SWIG_AsVal_bool(obj14, &val15);
  if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "new_ArServerClient" "', argument " "15"" of type '" "bool""'");
  } 
  arg15 = static_cast< bool >(val15);
  ecode16 = SWIG_AsVal_bool(obj15, &val16);
  if (!SWIG_IsOK(ecode16)) {
    SWIG_exception_fail(SWIG_ArgError(ecode16), "in method '" "new_ArServerClient" "', argument " "16"" of type '" "bool""'");
  } 
  arg16 = static_cast< bool >(val16);
  res17 = SWIG_AsCharPtrAndSize(obj16, &buf17, NULL, &alloc17);
  if (!SWIG_IsOK(res17)) {
    SWIG_exception_fail(SWIG_ArgError(res17), "in method '" "new_ArServerClient" "', argument " "17"" of type '" "char const *""'");
  }
  arg17 = reinterpret_cast< char * >(buf17);
  ecode18 = SWIG_AsVal_int(obj17, &val18);
  if (!SWIG_IsOK(ecode18)) {
    SWIG_exception_fail(SWIG_ArgError(ecode18), "in method '" "new_ArServerClient" "', argument " "18"" of type '" "ArServerCommands::Type""'");
  } 
  arg18 = static_cast< ArServerCommands::Type >(val18);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(ArServerUserInfo const *)arg9,arg10,(char const *)arg11,arg12,(char const *)arg13,arg14,arg15,arg16,(char const *)arg17,arg18);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  if (alloc17 == SWIG_NEWOBJ) delete[] buf17;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  if (alloc17 == SWIG_NEWOBJ) delete[] buf17;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ArServerUserInfo *arg9 = (ArServerUserInfo *) 0 ;
  int arg10 ;
  char *arg11 = (char *) 0 ;
  bool arg12 ;
  char *arg13 = (char *) 0 ;
  bool arg14 ;
  bool arg15 ;
  bool arg16 ;
  char *arg17 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  int res11 ;
  char *buf11 = 0 ;
  int alloc11 = 0 ;
  bool val12 ;
  int ecode12 = 0 ;
  int res13 ;
  char *buf13 = 0 ;
  int alloc13 = 0 ;
  bool val14 ;
  int ecode14 = 0 ;
  bool val15 ;
  int ecode15 = 0 ;
  bool val16 ;
  int ecode16 = 0 ;
  int res17 ;
  char *buf17 = 0 ;
  int alloc17 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  PyObject * obj13 = 0 ;
  PyObject * obj14 = 0 ;
  PyObject * obj15 = 0 ;
  PyObject * obj16 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13,&obj14,&obj15,&obj16)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerClient" "', argument " "9"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg9 = reinterpret_cast< ArServerUserInfo * >(argp9);
  ecode10 = SWIG_AsVal_int(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerClient" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = static_cast< int >(val10);
  res11 = SWIG_AsCharPtrAndSize(obj10, &buf11, NULL, &alloc11);
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "new_ArServerClient" "', argument " "11"" of type '" "char const *""'");
  }
  arg11 = reinterpret_cast< char * >(buf11);
  ecode12 = SWIG_AsVal_bool(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_ArServerClient" "', argument " "12"" of type '" "bool""'");
  } 
  arg12 = static_cast< bool >(val12);
  res13 = SWIG_AsCharPtrAndSize(obj12, &buf13, NULL, &alloc13);
  if (!SWIG_IsOK(res13)) {
    SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "new_ArServerClient" "', argument " "13"" of type '" "char const *""'");
  }
  arg13 = reinterpret_cast< char * >(buf13);
  ecode14 = SWIG_AsVal_bool(obj13, &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "new_ArServerClient" "', argument " "14"" of type '" "bool""'");
  } 
  arg14 = static_cast< bool >(val14);
  ecode15 = SWIG_AsVal_bool(obj14, &val15);
  if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "new_ArServerClient" "', argument " "15"" of type '" "bool""'");
  } 
  arg15 = static_cast< bool >(val15);
  ecode16 = SWIG_AsVal_bool(obj15, &val16);
  if (!SWIG_IsOK(ecode16)) {
    SWIG_exception_fail(SWIG_ArgError(ecode16), "in method '" "new_ArServerClient" "', argument " "16"" of type '" "bool""'");
  } 
  arg16 = static_cast< bool >(val16);
  res17 = SWIG_AsCharPtrAndSize(obj16, &buf17, NULL, &alloc17);
  if (!SWIG_IsOK(res17)) {
    SWIG_exception_fail(SWIG_ArgError(res17), "in method '" "new_ArServerClient" "', argument " "17"" of type '" "char const *""'");
  }
  arg17 = reinterpret_cast< char * >(buf17);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(ArServerUserInfo const *)arg9,arg10,(char const *)arg11,arg12,(char const *)arg13,arg14,arg15,arg16,(char const *)arg17);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  if (alloc17 == SWIG_NEWOBJ) delete[] buf17;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  if (alloc17 == SWIG_NEWOBJ) delete[] buf17;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ArServerUserInfo *arg9 = (ArServerUserInfo *) 0 ;
  int arg10 ;
  char *arg11 = (char *) 0 ;
  bool arg12 ;
  char *arg13 = (char *) 0 ;
  bool arg14 ;
  bool arg15 ;
  bool arg16 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  int res11 ;
  char *buf11 = 0 ;
  int alloc11 = 0 ;
  bool val12 ;
  int ecode12 = 0 ;
  int res13 ;
  char *buf13 = 0 ;
  int alloc13 = 0 ;
  bool val14 ;
  int ecode14 = 0 ;
  bool val15 ;
  int ecode15 = 0 ;
  bool val16 ;
  int ecode16 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  PyObject * obj13 = 0 ;
  PyObject * obj14 = 0 ;
  PyObject * obj15 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13,&obj14,&obj15)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerClient" "', argument " "9"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg9 = reinterpret_cast< ArServerUserInfo * >(argp9);
  ecode10 = SWIG_AsVal_int(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerClient" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = static_cast< int >(val10);
  res11 = SWIG_AsCharPtrAndSize(obj10, &buf11, NULL, &alloc11);
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "new_ArServerClient" "', argument " "11"" of type '" "char const *""'");
  }
  arg11 = reinterpret_cast< char * >(buf11);
  ecode12 = SWIG_AsVal_bool(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_ArServerClient" "', argument " "12"" of type '" "bool""'");
  } 
  arg12 = static_cast< bool >(val12);
  res13 = SWIG_AsCharPtrAndSize(obj12, &buf13, NULL, &alloc13);
  if (!SWIG_IsOK(res13)) {
    SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "new_ArServerClient" "', argument " "13"" of type '" "char const *""'");
  }
  arg13 = reinterpret_cast< char * >(buf13);
  ecode14 = SWIG_AsVal_bool(obj13, &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "new_ArServerClient" "', argument " "14"" of type '" "bool""'");
  } 
  arg14 = static_cast< bool >(val14);
  ecode15 = SWIG_AsVal_bool(obj14, &val15);
  if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "new_ArServerClient" "', argument " "15"" of type '" "bool""'");
  } 
  arg15 = static_cast< bool >(val15);
  ecode16 = SWIG_AsVal_bool(obj15, &val16);
  if (!SWIG_IsOK(ecode16)) {
    SWIG_exception_fail(SWIG_ArgError(ecode16), "in method '" "new_ArServerClient" "', argument " "16"" of type '" "bool""'");
  } 
  arg16 = static_cast< bool >(val16);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(ArServerUserInfo const *)arg9,arg10,(char const *)arg11,arg12,(char const *)arg13,arg14,arg15,arg16);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ArServerUserInfo *arg9 = (ArServerUserInfo *) 0 ;
  int arg10 ;
  char *arg11 = (char *) 0 ;
  bool arg12 ;
  char *arg13 = (char *) 0 ;
  bool arg14 ;
  bool arg15 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  int res11 ;
  char *buf11 = 0 ;
  int alloc11 = 0 ;
  bool val12 ;
  int ecode12 = 0 ;
  int res13 ;
  char *buf13 = 0 ;
  int alloc13 = 0 ;
  bool val14 ;
  int ecode14 = 0 ;
  bool val15 ;
  int ecode15 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  PyObject * obj13 = 0 ;
  PyObject * obj14 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13,&obj14)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerClient" "', argument " "9"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg9 = reinterpret_cast< ArServerUserInfo * >(argp9);
  ecode10 = SWIG_AsVal_int(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerClient" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = static_cast< int >(val10);
  res11 = SWIG_AsCharPtrAndSize(obj10, &buf11, NULL, &alloc11);
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "new_ArServerClient" "', argument " "11"" of type '" "char const *""'");
  }
  arg11 = reinterpret_cast< char * >(buf11);
  ecode12 = SWIG_AsVal_bool(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_ArServerClient" "', argument " "12"" of type '" "bool""'");
  } 
  arg12 = static_cast< bool >(val12);
  res13 = SWIG_AsCharPtrAndSize(obj12, &buf13, NULL, &alloc13);
  if (!SWIG_IsOK(res13)) {
    SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "new_ArServerClient" "', argument " "13"" of type '" "char const *""'");
  }
  arg13 = reinterpret_cast< char * >(buf13);
  ecode14 = SWIG_AsVal_bool(obj13, &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "new_ArServerClient" "', argument " "14"" of type '" "bool""'");
  } 
  arg14 = static_cast< bool >(val14);
  ecode15 = SWIG_AsVal_bool(obj14, &val15);
  if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "new_ArServerClient" "', argument " "15"" of type '" "bool""'");
  } 
  arg15 = static_cast< bool >(val15);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(ArServerUserInfo const *)arg9,arg10,(char const *)arg11,arg12,(char const *)arg13,arg14,arg15);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ArServerUserInfo *arg9 = (ArServerUserInfo *) 0 ;
  int arg10 ;
  char *arg11 = (char *) 0 ;
  bool arg12 ;
  char *arg13 = (char *) 0 ;
  bool arg14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  int res11 ;
  char *buf11 = 0 ;
  int alloc11 = 0 ;
  bool val12 ;
  int ecode12 = 0 ;
  int res13 ;
  char *buf13 = 0 ;
  int alloc13 = 0 ;
  bool val14 ;
  int ecode14 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  PyObject * obj13 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerClient" "', argument " "9"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg9 = reinterpret_cast< ArServerUserInfo * >(argp9);
  ecode10 = SWIG_AsVal_int(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerClient" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = static_cast< int >(val10);
  res11 = SWIG_AsCharPtrAndSize(obj10, &buf11, NULL, &alloc11);
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "new_ArServerClient" "', argument " "11"" of type '" "char const *""'");
  }
  arg11 = reinterpret_cast< char * >(buf11);
  ecode12 = SWIG_AsVal_bool(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_ArServerClient" "', argument " "12"" of type '" "bool""'");
  } 
  arg12 = static_cast< bool >(val12);
  res13 = SWIG_AsCharPtrAndSize(obj12, &buf13, NULL, &alloc13);
  if (!SWIG_IsOK(res13)) {
    SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "new_ArServerClient" "', argument " "13"" of type '" "char const *""'");
  }
  arg13 = reinterpret_cast< char * >(buf13);
  ecode14 = SWIG_AsVal_bool(obj13, &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "new_ArServerClient" "', argument " "14"" of type '" "bool""'");
  } 
  arg14 = static_cast< bool >(val14);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(ArServerUserInfo const *)arg9,arg10,(char const *)arg11,arg12,(char const *)arg13,arg14);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ArServerUserInfo *arg9 = (ArServerUserInfo *) 0 ;
  int arg10 ;
  char *arg11 = (char *) 0 ;
  bool arg12 ;
  char *arg13 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  int res11 ;
  char *buf11 = 0 ;
  int alloc11 = 0 ;
  bool val12 ;
  int ecode12 = 0 ;
  int res13 ;
  char *buf13 = 0 ;
  int alloc13 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerClient" "', argument " "9"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg9 = reinterpret_cast< ArServerUserInfo * >(argp9);
  ecode10 = SWIG_AsVal_int(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerClient" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = static_cast< int >(val10);
  res11 = SWIG_AsCharPtrAndSize(obj10, &buf11, NULL, &alloc11);
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "new_ArServerClient" "', argument " "11"" of type '" "char const *""'");
  }
  arg11 = reinterpret_cast< char * >(buf11);
  ecode12 = SWIG_AsVal_bool(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_ArServerClient" "', argument " "12"" of type '" "bool""'");
  } 
  arg12 = static_cast< bool >(val12);
  res13 = SWIG_AsCharPtrAndSize(obj12, &buf13, NULL, &alloc13);
  if (!SWIG_IsOK(res13)) {
    SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "new_ArServerClient" "', argument " "13"" of type '" "char const *""'");
  }
  arg13 = reinterpret_cast< char * >(buf13);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(ArServerUserInfo const *)arg9,arg10,(char const *)arg11,arg12,(char const *)arg13);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  if (alloc13 == SWIG_NEWOBJ) delete[] buf13;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ArServerUserInfo *arg9 = (ArServerUserInfo *) 0 ;
  int arg10 ;
  char *arg11 = (char *) 0 ;
  bool arg12 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  int res11 ;
  char *buf11 = 0 ;
  int alloc11 = 0 ;
  bool val12 ;
  int ecode12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerClient" "', argument " "9"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg9 = reinterpret_cast< ArServerUserInfo * >(argp9);
  ecode10 = SWIG_AsVal_int(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerClient" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = static_cast< int >(val10);
  res11 = SWIG_AsCharPtrAndSize(obj10, &buf11, NULL, &alloc11);
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "new_ArServerClient" "', argument " "11"" of type '" "char const *""'");
  }
  arg11 = reinterpret_cast< char * >(buf11);
  ecode12 = SWIG_AsVal_bool(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_ArServerClient" "', argument " "12"" of type '" "bool""'");
  } 
  arg12 = static_cast< bool >(val12);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(ArServerUserInfo const *)arg9,arg10,(char const *)arg11,arg12);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ArServerUserInfo *arg9 = (ArServerUserInfo *) 0 ;
  int arg10 ;
  char *arg11 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  int res11 ;
  char *buf11 = 0 ;
  int alloc11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerClient" "', argument " "9"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg9 = reinterpret_cast< ArServerUserInfo * >(argp9);
  ecode10 = SWIG_AsVal_int(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerClient" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = static_cast< int >(val10);
  res11 = SWIG_AsCharPtrAndSize(obj10, &buf11, NULL, &alloc11);
  if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "new_ArServerClient" "', argument " "11"" of type '" "char const *""'");
  }
  arg11 = reinterpret_cast< char * >(buf11);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(ArServerUserInfo const *)arg9,arg10,(char const *)arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc11 == SWIG_NEWOBJ) delete[] buf11;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ArServerUserInfo *arg9 = (ArServerUserInfo *) 0 ;
  int arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerClient" "', argument " "9"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg9 = reinterpret_cast< ArServerUserInfo * >(argp9);
  ecode10 = SWIG_AsVal_int(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_ArServerClient" "', argument " "10"" of type '" "int""'");
  } 
  arg10 = static_cast< int >(val10);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(ArServerUserInfo const *)arg9,arg10);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ArServerUserInfo *arg9 = (ArServerUserInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerClient" "', argument " "9"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg9 = reinterpret_cast< ArServerUserInfo * >(argp9);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,(ArServerUserInfo const *)arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArSocket *arg1 = (ArSocket *) 0 ;
  unsigned int arg2 ;
  long arg3 ;
  long arg4 ;
  ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *arg5 = (ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *) 0 ;
  std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *arg6 = (std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *) 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  long val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  ArServerClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_ArServerClient",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClient" "', argument " "1"" of type '" "ArSocket *""'"); 
  }
  arg1 = reinterpret_cast< ArSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClient" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerClient" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerClient" "', argument " "4"" of type '" "long""'");
  } 
  arg4 = static_cast< long >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerClient" "', argument " "5"" of type '" "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *""'"); 
  }
  arg5 = reinterpret_cast< ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerClient" "', argument " "6"" of type '" "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *""'"); 
  }
  arg6 = reinterpret_cast< std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerClient" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerClient" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  result = (ArServerClient *)new ArServerClient(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClient, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerClient(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[19] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 18) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_new_ArServerClient__SWIG_10(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_new_ArServerClient__SWIG_9(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_int(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_new_ArServerClient__SWIG_8(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_int(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        int res = SWIG_AsCharPtrAndSize(argv[10], 0, NULL, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          return _wrap_new_ArServerClient__SWIG_7(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_int(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        int res = SWIG_AsCharPtrAndSize(argv[10], 0, NULL, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          {
                            int res = SWIG_AsVal_bool(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            return _wrap_new_ArServerClient__SWIG_6(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_int(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        int res = SWIG_AsCharPtrAndSize(argv[10], 0, NULL, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          {
                            int res = SWIG_AsVal_bool(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            int res = SWIG_AsCharPtrAndSize(argv[12], 0, NULL, 0);
                            _v = SWIG_CheckState(res);
                            if (_v) {
                              return _wrap_new_ArServerClient__SWIG_5(self, args);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_int(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        int res = SWIG_AsCharPtrAndSize(argv[10], 0, NULL, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          {
                            int res = SWIG_AsVal_bool(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            int res = SWIG_AsCharPtrAndSize(argv[12], 0, NULL, 0);
                            _v = SWIG_CheckState(res);
                            if (_v) {
                              {
                                int res = SWIG_AsVal_bool(argv[13], NULL);
                                _v = SWIG_CheckState(res);
                              }
                              if (_v) {
                                return _wrap_new_ArServerClient__SWIG_4(self, args);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_int(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        int res = SWIG_AsCharPtrAndSize(argv[10], 0, NULL, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          {
                            int res = SWIG_AsVal_bool(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            int res = SWIG_AsCharPtrAndSize(argv[12], 0, NULL, 0);
                            _v = SWIG_CheckState(res);
                            if (_v) {
                              {
                                int res = SWIG_AsVal_bool(argv[13], NULL);
                                _v = SWIG_CheckState(res);
                              }
                              if (_v) {
                                {
                                  int res = SWIG_AsVal_bool(argv[14], NULL);
                                  _v = SWIG_CheckState(res);
                                }
                                if (_v) {
                                  return _wrap_new_ArServerClient__SWIG_3(self, args);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_int(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        int res = SWIG_AsCharPtrAndSize(argv[10], 0, NULL, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          {
                            int res = SWIG_AsVal_bool(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            int res = SWIG_AsCharPtrAndSize(argv[12], 0, NULL, 0);
                            _v = SWIG_CheckState(res);
                            if (_v) {
                              {
                                int res = SWIG_AsVal_bool(argv[13], NULL);
                                _v = SWIG_CheckState(res);
                              }
                              if (_v) {
                                {
                                  int res = SWIG_AsVal_bool(argv[14], NULL);
                                  _v = SWIG_CheckState(res);
                                }
                                if (_v) {
                                  {
                                    int res = SWIG_AsVal_bool(argv[15], NULL);
                                    _v = SWIG_CheckState(res);
                                  }
                                  if (_v) {
                                    return _wrap_new_ArServerClient__SWIG_2(self, args);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_int(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        int res = SWIG_AsCharPtrAndSize(argv[10], 0, NULL, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          {
                            int res = SWIG_AsVal_bool(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            int res = SWIG_AsCharPtrAndSize(argv[12], 0, NULL, 0);
                            _v = SWIG_CheckState(res);
                            if (_v) {
                              {
                                int res = SWIG_AsVal_bool(argv[13], NULL);
                                _v = SWIG_CheckState(res);
                              }
                              if (_v) {
                                {
                                  int res = SWIG_AsVal_bool(argv[14], NULL);
                                  _v = SWIG_CheckState(res);
                                }
                                if (_v) {
                                  {
                                    int res = SWIG_AsVal_bool(argv[15], NULL);
                                    _v = SWIG_CheckState(res);
                                  }
                                  if (_v) {
                                    int res = SWIG_AsCharPtrAndSize(argv[16], 0, NULL, 0);
                                    _v = SWIG_CheckState(res);
                                    if (_v) {
                                      return _wrap_new_ArServerClient__SWIG_1(self, args);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_int(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        int res = SWIG_AsCharPtrAndSize(argv[10], 0, NULL, 0);
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          {
                            int res = SWIG_AsVal_bool(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            int res = SWIG_AsCharPtrAndSize(argv[12], 0, NULL, 0);
                            _v = SWIG_CheckState(res);
                            if (_v) {
                              {
                                int res = SWIG_AsVal_bool(argv[13], NULL);
                                _v = SWIG_CheckState(res);
                              }
                              if (_v) {
                                {
                                  int res = SWIG_AsVal_bool(argv[14], NULL);
                                  _v = SWIG_CheckState(res);
                                }
                                if (_v) {
                                  {
                                    int res = SWIG_AsVal_bool(argv[15], NULL);
                                    _v = SWIG_CheckState(res);
                                  }
                                  if (_v) {
                                    int res = SWIG_AsCharPtrAndSize(argv[16], 0, NULL, 0);
                                    _v = SWIG_CheckState(res);
                                    if (_v) {
                                      {
                                        int res = SWIG_AsVal_int(argv[17], NULL);
                                        _v = SWIG_CheckState(res);
                                      }
                                      if (_v) {
                                        return _wrap_new_ArServerClient__SWIG_0(self, args);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerClient'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *,ArServerUserInfo const *,int,char const *,bool,char const *,bool,bool,bool,char const *,ArServerCommands::Type)\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *,ArServerUserInfo const *,int,char const *,bool,char const *,bool,bool,bool,char const *)\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *,ArServerUserInfo const *,int,char const *,bool,char const *,bool,bool,bool)\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *,ArServerUserInfo const *,int,char const *,bool,char const *,bool,bool)\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *,ArServerUserInfo const *,int,char const *,bool,char const *,bool)\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *,ArServerUserInfo const *,int,char const *,bool,char const *)\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *,ArServerUserInfo const *,int,char const *,bool)\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *,ArServerUserInfo const *,int,char const *)\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *,ArServerUserInfo const *,int)\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *,ArServerUserInfo const *)\n"
    "    ArServerClient::ArServerClient(ArSocket *,unsigned int,long,long,ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *,std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *,char const *,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerClient",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerClient" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_tcpCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_tcpCallback",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_tcpCallback" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (bool)(arg1)->tcpCallback();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_slowPacketCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_slowPacketCallback",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_slowPacketCallback" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (bool)(arg1)->slowPacketCallback();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_idlePacketCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_idlePacketCallback",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_idlePacketCallback" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (bool)(arg1)->idlePacketCallback();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_setBackupTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_setBackupTimeout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_setBackupTimeout" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerClient_setBackupTimeout" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->setBackupTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_processPacket__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerClient_processPacket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_processPacket" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_processPacket" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerClient_processPacket" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->processPacket(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_processPacket__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_processPacket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_processPacket" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_processPacket" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  (arg1)->processPacket(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_processPacket(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerClient_processPacket__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArNetPacket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerClient_processPacket__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerClient_processPacket'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerClient::processPacket(ArNetPacket *,bool)\n"
    "    ArServerClient::processPacket(ArNetPacket *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerClient_sendPacketTcp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_sendPacketTcp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_sendPacketTcp" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_sendPacketTcp" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  result = (bool)(arg1)->sendPacketTcp(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_sendPacketUdp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_sendPacketUdp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_sendPacketUdp" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_sendPacketUdp" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  result = (bool)(arg1)->sendPacketUdp(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_hasGroupAccess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_hasGroupAccess",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_hasGroupAccess" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_hasGroupAccess" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->hasGroupAccess((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_broadcastPacketTcp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_broadcastPacketTcp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_broadcastPacketTcp" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_broadcastPacketTcp" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  (arg1)->broadcastPacketTcp(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_broadcastPacketUdp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_broadcastPacketUdp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_broadcastPacketUdp" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_broadcastPacketUdp" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  (arg1)->broadcastPacketUdp(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_logTracking(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_logTracking",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_logTracking" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerClient_logTracking" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->logTracking(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_resetTracking(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_resetTracking",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_resetTracking" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  (arg1)->resetTracking();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_getIPString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_getIPString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_getIPString" "', argument " "1"" of type '" "ArServerClient const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (char *)((ArServerClient const *)arg1)->getIPString();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_getIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerClientIdentifier result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_getIdentifier",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_getIdentifier" "', argument " "1"" of type '" "ArServerClient const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = ((ArServerClient const *)arg1)->getIdentifier();
  resultobj = SWIG_NewPointerObj((new ArServerClientIdentifier(static_cast< const ArServerClientIdentifier& >(result))), SWIGTYPE_p_ArServerClientIdentifier, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_setIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArServerClientIdentifier arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_setIdentifier",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_setIdentifier" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_setIdentifier" "', argument " "2"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerClient_setIdentifier" "', argument " "2"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->setIdentifier(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_shutdown(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_shutdown",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_shutdown" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  (arg1)->shutdown();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_setUdpAddress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  sockaddr_in *arg2 = (sockaddr_in *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_setUdpAddress",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_setUdpAddress" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_sockaddr_in, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_setUdpAddress" "', argument " "2"" of type '" "sockaddr_in *""'"); 
  }
  arg2 = reinterpret_cast< sockaddr_in * >(argp2);
  (arg1)->setUdpAddress(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_getUdpAddress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  sockaddr_in *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_getUdpAddress",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_getUdpAddress" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (sockaddr_in *)(arg1)->getUdpAddress();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sockaddr_in, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_getAuthKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_getAuthKey",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_getAuthKey" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (long)(arg1)->getAuthKey();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_processAuthPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  sockaddr_in *arg3 = (sockaddr_in *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerClient_processAuthPacket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_processAuthPacket" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_processAuthPacket" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_sockaddr_in, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerClient_processAuthPacket" "', argument " "3"" of type '" "sockaddr_in *""'"); 
  }
  arg3 = reinterpret_cast< sockaddr_in * >(argp3);
  (arg1)->processAuthPacket(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_handleRequests(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_handleRequests",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_handleRequests" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  (arg1)->handleRequests();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_getTcpSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArSocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_getTcpSocket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_getTcpSocket" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (ArSocket *)(arg1)->getTcpSocket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArSocket, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_forceDisconnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_forceDisconnect",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_forceDisconnect" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerClient_forceDisconnect" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->forceDisconnect(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_getFrequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  ArTypes::UByte2 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_getFrequency",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_getFrequency" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerClient_getFrequency" "', argument " "2"" of type '" "ArTypes::UByte2""'");
  } 
  arg2 = static_cast< ArTypes::UByte2 >(val2);
  result = (long)(arg1)->getFrequency(arg2);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_useTcpOnly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_useTcpOnly",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_useTcpOnly" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  (arg1)->useTcpOnly();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_isTcpOnly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_isTcpOnly",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_isTcpOnly" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (bool)(arg1)->isTcpOnly();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_getState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerClient::ServerState result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_getState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_getState" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (ArServerClient::ServerState)(arg1)->getState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_hasSlowPackets(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_hasSlowPackets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_hasSlowPackets" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (bool)(arg1)->hasSlowPackets();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_hasIdlePackets(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_hasIdlePackets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_hasIdlePackets" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (bool)(arg1)->hasIdlePackets();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_startRequestTransaction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_startRequestTransaction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_startRequestTransaction" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  (arg1)->startRequestTransaction();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_endRequestTransaction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_endRequestTransaction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_endRequestTransaction" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (bool)(arg1)->endRequestTransaction();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_getRequestTransactionCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_getRequestTransactionCount",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_getRequestTransactionCount" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (int)(arg1)->getRequestTransactionCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_findCommandFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_findCommandFromName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_findCommandFromName" "', argument " "1"" of type '" "ArServerClient const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClient_findCommandFromName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (unsigned int)((ArServerClient const *)arg1)->findCommandFromName((char const *)arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_getCreationTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClient_getCreationTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_getCreationTime" "', argument " "1"" of type '" "ArServerClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  result = (arg1)->getCreationTime();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClient_findCommandName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClient *arg1 = (ArServerClient *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClient_findCommandName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClient_findCommandName" "', argument " "1"" of type '" "ArServerClient const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClient * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerClient_findCommandName" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (char *)((ArServerClient const *)arg1)->findCommandName(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerClient_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerClient, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerClientIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArServerClientIdentifier")) SWIG_fail;
  result = (ArServerClientIdentifier *)new ArServerClientIdentifier();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClientIdentifier, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerClientIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *arg1 = (ArServerClientIdentifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerClientIdentifier",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientIdentifier, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerClientIdentifier" "', argument " "1"" of type '" "ArServerClientIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientIdentifier * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientIdentifier_getIDString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *arg1 = (ArServerClientIdentifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClientIdentifier_getIDString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientIdentifier_getIDString" "', argument " "1"" of type '" "ArServerClientIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientIdentifier * >(argp1);
  result = (char *)(arg1)->getIDString();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientIdentifier_setConnectionID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *arg1 = (ArServerClientIdentifier *) 0 ;
  ArTypes::UByte4 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClientIdentifier_setConnectionID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientIdentifier_setConnectionID" "', argument " "1"" of type '" "ArServerClientIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientIdentifier * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerClientIdentifier_setConnectionID" "', argument " "2"" of type '" "ArTypes::UByte4""'");
  } 
  arg2 = static_cast< ArTypes::UByte4 >(val2);
  (arg1)->setConnectionID(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientIdentifier_getConnectionID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *arg1 = (ArServerClientIdentifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTypes::UByte4 result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClientIdentifier_getConnectionID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientIdentifier_getConnectionID" "', argument " "1"" of type '" "ArServerClientIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientIdentifier * >(argp1);
  result = (ArTypes::UByte4)(arg1)->getConnectionID();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientIdentifier_setSelfIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *arg1 = (ArServerClientIdentifier *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClientIdentifier_setSelfIdentifier",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientIdentifier_setSelfIdentifier" "', argument " "1"" of type '" "ArServerClientIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientIdentifier * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClientIdentifier_setSelfIdentifier" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setSelfIdentifier((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientIdentifier_getSelfIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *arg1 = (ArServerClientIdentifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClientIdentifier_getSelfIdentifier",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientIdentifier_getSelfIdentifier" "', argument " "1"" of type '" "ArServerClientIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientIdentifier * >(argp1);
  result = (char *)(arg1)->getSelfIdentifier();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientIdentifier_setHereGoal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *arg1 = (ArServerClientIdentifier *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClientIdentifier_setHereGoal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientIdentifier_setHereGoal" "', argument " "1"" of type '" "ArServerClientIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientIdentifier * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClientIdentifier_setHereGoal" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setHereGoal((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientIdentifier_getHereGoal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *arg1 = (ArServerClientIdentifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClientIdentifier_getHereGoal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientIdentifier_getHereGoal" "', argument " "1"" of type '" "ArServerClientIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientIdentifier * >(argp1);
  result = (char *)(arg1)->getHereGoal();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientIdentifier_matches(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *arg1 = (ArServerClientIdentifier *) 0 ;
  ArServerClientIdentifier arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerClientIdentifier_matches",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientIdentifier_matches" "', argument " "1"" of type '" "ArServerClientIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientIdentifier * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArServerClientIdentifier,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClientIdentifier_matches" "', argument " "2"" of type '" "ArServerClientIdentifier""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerClientIdentifier_matches" "', argument " "2"" of type '" "ArServerClientIdentifier""'");
    } else {
      ArServerClientIdentifier * temp = reinterpret_cast< ArServerClientIdentifier * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerClientIdentifier_matches" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->matches(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientIdentifier_rebuildIDString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientIdentifier *arg1 = (ArServerClientIdentifier *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClientIdentifier_rebuildIDString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientIdentifier, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientIdentifier_rebuildIDString" "', argument " "1"" of type '" "ArServerClientIdentifier *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientIdentifier * >(argp1);
  (arg1)->rebuildIDString();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerClientIdentifier_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerClientIdentifier, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerClientData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerData *arg1 = (ArServerData *) 0 ;
  long arg2 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerClientData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerClientData",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerClientData" "', argument " "1"" of type '" "ArServerData *""'"); 
  }
  arg1 = reinterpret_cast< ArServerData * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerClientData" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerClientData" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  result = (ArServerClientData *)new ArServerClientData(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerClientData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerClientData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientData *arg1 = (ArServerClientData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerClientData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerClientData" "', argument " "1"" of type '" "ArServerClientData *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientData * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientData_getServerData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientData *arg1 = (ArServerClientData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClientData_getServerData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientData_getServerData" "', argument " "1"" of type '" "ArServerClientData *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientData * >(argp1);
  result = (ArServerData *)(arg1)->getServerData();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientData_getMSec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientData *arg1 = (ArServerClientData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClientData_getMSec",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientData_getMSec" "', argument " "1"" of type '" "ArServerClientData *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientData * >(argp1);
  result = (long)(arg1)->getMSec();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientData_getPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientData *arg1 = (ArServerClientData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArNetPacket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClientData_getPacket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientData_getPacket" "', argument " "1"" of type '" "ArServerClientData *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientData * >(argp1);
  result = (ArNetPacket *)(arg1)->getPacket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArNetPacket, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientData_getLastSent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientData *arg1 = (ArServerClientData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArTime result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClientData_getLastSent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientData_getLastSent" "', argument " "1"" of type '" "ArServerClientData *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientData * >(argp1);
  result = (arg1)->getLastSent();
  resultobj = SWIG_NewPointerObj((new ArTime(static_cast< const ArTime& >(result))), SWIGTYPE_p_ArTime, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientData_setLastSentToNow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientData *arg1 = (ArServerClientData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerClientData_setLastSentToNow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientData_setLastSentToNow" "', argument " "1"" of type '" "ArServerClientData *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientData * >(argp1);
  (arg1)->setLastSentToNow();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientData_setMSec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientData *arg1 = (ArServerClientData *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClientData_setMSec",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientData_setMSec" "', argument " "1"" of type '" "ArServerClientData *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientData * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerClientData_setMSec" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  (arg1)->setMSec(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerClientData_setPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerClientData *arg1 = (ArServerClientData *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerClientData_setPacket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerClientData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerClientData_setPacket" "', argument " "1"" of type '" "ArServerClientData *""'"); 
  }
  arg1 = reinterpret_cast< ArServerClientData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerClientData_setPacket" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  (arg1)->setPacket(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerClientData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerClientData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ArServerCommands_toString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerCommands::Type arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerCommands_toString",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ArServerCommands_toString" "', argument " "1"" of type '" "ArServerCommands::Type""'");
  } 
  arg1 = static_cast< ArServerCommands::Type >(val1);
  result = (char *)ArServerCommands::toString(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerCommands *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArServerCommands")) SWIG_fail;
  result = (ArServerCommands *)new ArServerCommands();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerCommands, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerCommands *arg1 = (ArServerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerCommands",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerCommands, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerCommands" "', argument " "1"" of type '" "ArServerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerCommands * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerCommands_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerCommands, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerFileLister__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerFileLister *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerFileLister",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerFileLister" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerFileLister" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerFileLister" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (ArServerFileLister *)new ArServerFileLister(arg1,(char const *)arg2,(char const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerFileLister, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerFileLister__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerFileLister *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerFileLister",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerFileLister" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerFileLister" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (ArServerFileLister *)new ArServerFileLister(arg1,(char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerFileLister, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerFileLister(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerFileLister__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_ArServerFileLister__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerFileLister'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerFileLister::ArServerFileLister(ArServerBase *,char const *,char const *)\n"
    "    ArServerFileLister::ArServerFileLister(ArServerBase *,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerFileLister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileLister *arg1 = (ArServerFileLister *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerFileLister",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileLister, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerFileLister" "', argument " "1"" of type '" "ArServerFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileLister * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileLister_getDirListing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileLister *arg1 = (ArServerFileLister *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileLister_getDirListing",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileLister_getDirListing" "', argument " "1"" of type '" "ArServerFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileLister * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerFileLister_getDirListing" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerFileLister_getDirListing" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getDirListing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileLister_getDirListingMultiplePackets(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileLister *arg1 = (ArServerFileLister *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileLister_getDirListingMultiplePackets",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileLister_getDirListingMultiplePackets" "', argument " "1"" of type '" "ArServerFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileLister * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerFileLister_getDirListingMultiplePackets" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerFileLister_getDirListingMultiplePackets" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getDirListingMultiplePackets(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileLister_getDefaultUploadDownloadDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileLister *arg1 = (ArServerFileLister *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileLister_getDefaultUploadDownloadDir",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileLister, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileLister_getDefaultUploadDownloadDir" "', argument " "1"" of type '" "ArServerFileLister *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileLister * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerFileLister_getDefaultUploadDownloadDir" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerFileLister_getDefaultUploadDownloadDir" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getDefaultUploadDownloadDir(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerFileLister_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerFileLister, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerFileToClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerFileToClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerFileToClient",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerFileToClient" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerFileToClient" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (ArServerFileToClient *)new ArServerFileToClient(arg1,(char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerFileToClient, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerFileToClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileToClient *arg1 = (ArServerFileToClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerFileToClient",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileToClient, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerFileToClient" "', argument " "1"" of type '" "ArServerFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileToClient * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileToClient_getFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileToClient *arg1 = (ArServerFileToClient *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileToClient_getFile",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileToClient_getFile" "', argument " "1"" of type '" "ArServerFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileToClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerFileToClient_getFile" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerFileToClient_getFile" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getFile(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileToClient_getFileWithTimestamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileToClient *arg1 = (ArServerFileToClient *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileToClient_getFileWithTimestamp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileToClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileToClient_getFileWithTimestamp" "', argument " "1"" of type '" "ArServerFileToClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileToClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerFileToClient_getFileWithTimestamp" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerFileToClient_getFileWithTimestamp" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getFileWithTimestamp(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerFileToClient_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerFileToClient, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerFileFromClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerFileFromClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerFileFromClient",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerFileFromClient" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerFileFromClient" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerFileFromClient" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (ArServerFileFromClient *)new ArServerFileFromClient(arg1,(char const *)arg2,(char const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerFileFromClient, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerFileFromClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerFileFromClient",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerFileFromClient" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_putFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileFromClient_putFile",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_putFile" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerFileFromClient_putFile" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerFileFromClient_putFile" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->putFile(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_putFileInterleaved(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileFromClient_putFileInterleaved",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_putFileInterleaved" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerFileFromClient_putFileInterleaved" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerFileFromClient_putFileInterleaved" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->putFileInterleaved(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_putFileWithTimestamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileFromClient_putFileWithTimestamp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_putFileWithTimestamp" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerFileFromClient_putFileWithTimestamp" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerFileFromClient_putFileWithTimestamp" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->putFileWithTimestamp(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_putFileWithTimestampInterleaved(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileFromClient_putFileWithTimestampInterleaved",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_putFileWithTimestampInterleaved" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerFileFromClient_putFileWithTimestampInterleaved" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerFileFromClient_putFileWithTimestampInterleaved" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->putFileWithTimestampInterleaved(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_addPreMoveCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileFromClient_addPreMoveCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_addPreMoveCallback" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerFileFromClient_addPreMoveCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addPreMoveCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_addPreMoveCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerFileFromClient_addPreMoveCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_addPreMoveCallback" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addPreMoveCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_addPreMoveCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerFileFromClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerFileFromClient_addPreMoveCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerFileFromClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerFileFromClient_addPreMoveCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerFileFromClient_addPreMoveCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerFileFromClient::addPreMoveCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerFileFromClient::addPreMoveCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_remPreMoveCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerFileFromClient_remPreMoveCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_remPreMoveCallback" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remPreMoveCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_addPostMoveCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerFileFromClient_addPostMoveCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_addPostMoveCallback" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerFileFromClient_addPostMoveCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addPostMoveCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_addPostMoveCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerFileFromClient_addPostMoveCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_addPostMoveCallback" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addPostMoveCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_addPostMoveCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerFileFromClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerFileFromClient_addPostMoveCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerFileFromClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerFileFromClient_addPostMoveCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerFileFromClient_addPostMoveCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerFileFromClient::addPostMoveCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerFileFromClient::addPostMoveCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_remPostMoveCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerFileFromClient_remPostMoveCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_remPostMoveCallback" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remPostMoveCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerFileFromClient_getMovingFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerFileFromClient *arg1 = (ArServerFileFromClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerFileFromClient_getMovingFileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerFileFromClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerFileFromClient_getMovingFileName" "', argument " "1"" of type '" "ArServerFileFromClient *""'"); 
  }
  arg1 = reinterpret_cast< ArServerFileFromClient * >(argp1);
  result = (char *)(arg1)->getMovingFileName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerFileFromClient_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerFileFromClient, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerDeleteFileOnServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerDeleteFileOnServer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerDeleteFileOnServer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerDeleteFileOnServer" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerDeleteFileOnServer" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (ArServerDeleteFileOnServer *)new ArServerDeleteFileOnServer(arg1,(char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerDeleteFileOnServer, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerDeleteFileOnServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerDeleteFileOnServer *arg1 = (ArServerDeleteFileOnServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerDeleteFileOnServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerDeleteFileOnServer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerDeleteFileOnServer" "', argument " "1"" of type '" "ArServerDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArServerDeleteFileOnServer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerDeleteFileOnServer_deleteFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerDeleteFileOnServer *arg1 = (ArServerDeleteFileOnServer *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerDeleteFileOnServer_deleteFile",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerDeleteFileOnServer_deleteFile" "', argument " "1"" of type '" "ArServerDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArServerDeleteFileOnServer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerDeleteFileOnServer_deleteFile" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerDeleteFileOnServer_deleteFile" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->deleteFile(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerDeleteFileOnServer_addPreDeleteCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerDeleteFileOnServer *arg1 = (ArServerDeleteFileOnServer *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerDeleteFileOnServer_addPreDeleteCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerDeleteFileOnServer_addPreDeleteCallback" "', argument " "1"" of type '" "ArServerDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArServerDeleteFileOnServer * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerDeleteFileOnServer_addPreDeleteCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addPreDeleteCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerDeleteFileOnServer_addPreDeleteCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerDeleteFileOnServer *arg1 = (ArServerDeleteFileOnServer *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerDeleteFileOnServer_addPreDeleteCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerDeleteFileOnServer_addPreDeleteCallback" "', argument " "1"" of type '" "ArServerDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArServerDeleteFileOnServer * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addPreDeleteCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerDeleteFileOnServer_addPreDeleteCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerDeleteFileOnServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerDeleteFileOnServer_addPreDeleteCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerDeleteFileOnServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerDeleteFileOnServer_addPreDeleteCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerDeleteFileOnServer_addPreDeleteCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerDeleteFileOnServer::addPreDeleteCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerDeleteFileOnServer::addPreDeleteCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerDeleteFileOnServer_remPreDeleteCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerDeleteFileOnServer *arg1 = (ArServerDeleteFileOnServer *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerDeleteFileOnServer_remPreDeleteCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerDeleteFileOnServer_remPreDeleteCallback" "', argument " "1"" of type '" "ArServerDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArServerDeleteFileOnServer * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remPreDeleteCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerDeleteFileOnServer_addPostDeleteCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerDeleteFileOnServer *arg1 = (ArServerDeleteFileOnServer *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerDeleteFileOnServer_addPostDeleteCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerDeleteFileOnServer_addPostDeleteCallback" "', argument " "1"" of type '" "ArServerDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArServerDeleteFileOnServer * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerDeleteFileOnServer_addPostDeleteCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addPostDeleteCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerDeleteFileOnServer_addPostDeleteCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerDeleteFileOnServer *arg1 = (ArServerDeleteFileOnServer *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerDeleteFileOnServer_addPostDeleteCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerDeleteFileOnServer_addPostDeleteCallback" "', argument " "1"" of type '" "ArServerDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArServerDeleteFileOnServer * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addPostDeleteCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerDeleteFileOnServer_addPostDeleteCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerDeleteFileOnServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerDeleteFileOnServer_addPostDeleteCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerDeleteFileOnServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerDeleteFileOnServer_addPostDeleteCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerDeleteFileOnServer_addPostDeleteCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerDeleteFileOnServer::addPostDeleteCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerDeleteFileOnServer::addPostDeleteCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerDeleteFileOnServer_remPostDeleteCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerDeleteFileOnServer *arg1 = (ArServerDeleteFileOnServer *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerDeleteFileOnServer_remPostDeleteCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerDeleteFileOnServer_remPostDeleteCallback" "', argument " "1"" of type '" "ArServerDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArServerDeleteFileOnServer * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remPostDeleteCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerDeleteFileOnServer_getDeletingFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerDeleteFileOnServer *arg1 = (ArServerDeleteFileOnServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerDeleteFileOnServer_getDeletingFileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerDeleteFileOnServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerDeleteFileOnServer_getDeletingFileName" "', argument " "1"" of type '" "ArServerDeleteFileOnServer *""'"); 
  }
  arg1 = reinterpret_cast< ArServerDeleteFileOnServer * >(argp1);
  result = (char *)(arg1)->getDeletingFileName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerDeleteFileOnServer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerDeleteFileOnServer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerHandlerCamera__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  ArServerBase *arg2 = (ArServerBase *) 0 ;
  ArRobot *arg3 = (ArRobot *) 0 ;
  ArPTZ *arg4 = (ArPTZ *) 0 ;
  ArCameraCollection *arg5 = (ArCameraCollection *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  ArServerHandlerCamera *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_ArServerHandlerCamera",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerCamera" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerCamera" "', argument " "2"" of type '" "ArServerBase *""'"); 
  }
  arg2 = reinterpret_cast< ArServerBase * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerCamera" "', argument " "3"" of type '" "ArRobot *""'"); 
  }
  arg3 = reinterpret_cast< ArRobot * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArPTZ, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerCamera" "', argument " "4"" of type '" "ArPTZ *""'"); 
  }
  arg4 = reinterpret_cast< ArPTZ * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_ArCameraCollection, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerHandlerCamera" "', argument " "5"" of type '" "ArCameraCollection *""'"); 
  }
  arg5 = reinterpret_cast< ArCameraCollection * >(argp5);
  result = (ArServerHandlerCamera *)new ArServerHandlerCamera((char const *)arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerCamera, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerCamera__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArPTZ *arg3 = (ArPTZ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerHandlerCamera *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerHandlerCamera",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerCamera" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerCamera" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArPTZ, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerCamera" "', argument " "3"" of type '" "ArPTZ *""'"); 
  }
  arg3 = reinterpret_cast< ArPTZ * >(argp3);
  result = (ArServerHandlerCamera *)new ArServerHandlerCamera(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerCamera, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerCamera(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArPTZ, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_ArServerHandlerCamera__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArServerBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArRobot, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArPTZ, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_ArCameraCollection, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_ArServerHandlerCamera__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerHandlerCamera'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerCamera::ArServerHandlerCamera(char const *,ArServerBase *,ArRobot *,ArPTZ *,ArCameraCollection *)\n"
    "    ArServerHandlerCamera::ArServerHandlerCamera(ArServerBase *,ArRobot *,ArPTZ *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerHandlerCamera(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerHandlerCamera",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerHandlerCamera" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_setCameraAbs__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerHandlerCamera_setCameraAbs",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_setCameraAbs" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerCamera_setCameraAbs" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerCamera_setCameraAbs" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerHandlerCamera_setCameraAbs" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerHandlerCamera_setCameraAbs" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->setCameraAbs(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_setCameraAbs__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerHandlerCamera_setCameraAbs",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_setCameraAbs" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerCamera_setCameraAbs" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerCamera_setCameraAbs" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerHandlerCamera_setCameraAbs" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  (arg1)->setCameraAbs(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_setCameraAbs(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCamera, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArServerHandlerCamera_setCameraAbs__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCamera, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ArServerHandlerCamera_setCameraAbs__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerCamera_setCameraAbs'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerCamera::setCameraAbs(double,double,double,bool)\n"
    "    ArServerHandlerCamera::setCameraAbs(double,double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_setCameraRel__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerHandlerCamera_setCameraRel",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_setCameraRel" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerCamera_setCameraRel" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerCamera_setCameraRel" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerHandlerCamera_setCameraRel" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerHandlerCamera_setCameraRel" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->setCameraRel(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_setCameraRel__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerHandlerCamera_setCameraRel",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_setCameraRel" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerCamera_setCameraRel" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerCamera_setCameraRel" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerHandlerCamera_setCameraRel" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  (arg1)->setCameraRel(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_setCameraRel(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCamera, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArServerHandlerCamera_setCameraRel__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCamera, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ArServerHandlerCamera_setCameraRel__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerCamera_setCameraRel'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerCamera::setCameraRel(double,double,double,bool)\n"
    "    ArServerHandlerCamera::setCameraRel(double,double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_setCameraPct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  double arg2 ;
  double arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerHandlerCamera_setCameraPct",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_setCameraPct" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerCamera_setCameraPct" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerCamera_setCameraPct" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerHandlerCamera_setCameraPct" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->setCameraPct(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_setCameraPct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_setCameraPct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_setCameraPct" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerCamera_setCameraPct" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerCamera_setCameraPct" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  (arg1)->setCameraPct(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_setCameraPct(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCamera, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerCamera_setCameraPct__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCamera, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArServerHandlerCamera_setCameraPct__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerCamera_setCameraPct'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerCamera::setCameraPct(double,double,bool)\n"
    "    ArServerHandlerCamera::setCameraPct(double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_resetCamera__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerCamera_resetCamera",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_resetCamera" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerCamera_resetCamera" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->resetCamera(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_resetCamera__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerCamera_resetCamera",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_resetCamera" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  (arg1)->resetCamera();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_resetCamera(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCamera, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArServerHandlerCamera_resetCamera__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCamera, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerHandlerCamera_resetCamera__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerCamera_resetCamera'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerCamera::resetCamera(bool)\n"
    "    ArServerHandlerCamera::resetCamera()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraModeLookAtGoal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerCamera_cameraModeLookAtGoal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_cameraModeLookAtGoal" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  (arg1)->cameraModeLookAtGoal();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraModeLookAtPoint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArPose arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_cameraModeLookAtPoint",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_cameraModeLookAtPoint" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArPose,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_cameraModeLookAtPoint" "', argument " "2"" of type '" "ArPose""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerHandlerCamera_cameraModeLookAtPoint" "', argument " "2"" of type '" "ArPose""'");
    } else {
      ArPose * temp = reinterpret_cast< ArPose * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerCamera_cameraModeLookAtPoint" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->cameraModeLookAtPoint(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraModeLookAtPoint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArPose arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerCamera_cameraModeLookAtPoint",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_cameraModeLookAtPoint" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArPose,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_cameraModeLookAtPoint" "', argument " "2"" of type '" "ArPose""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerHandlerCamera_cameraModeLookAtPoint" "', argument " "2"" of type '" "ArPose""'");
    } else {
      ArPose * temp = reinterpret_cast< ArPose * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->cameraModeLookAtPoint(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraModeLookAtPoint(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCamera, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ArPose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerHandlerCamera_cameraModeLookAtPoint__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCamera, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ArPose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerCamera_cameraModeLookAtPoint__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerCamera_cameraModeLookAtPoint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerCamera::cameraModeLookAtPoint(ArPose,bool)\n"
    "    ArServerHandlerCamera::cameraModeLookAtPoint(ArPose)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraModeLookAtGoalSetGoal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArPose arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerCamera_cameraModeLookAtGoalSetGoal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_cameraModeLookAtGoalSetGoal" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArPose,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_cameraModeLookAtGoalSetGoal" "', argument " "2"" of type '" "ArPose""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerHandlerCamera_cameraModeLookAtGoalSetGoal" "', argument " "2"" of type '" "ArPose""'");
    } else {
      ArPose * temp = reinterpret_cast< ArPose * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->cameraModeLookAtGoalSetGoal(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraModeLookAtGoalClearGoal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerCamera_cameraModeLookAtGoalClearGoal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_cameraModeLookAtGoalClearGoal" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  (arg1)->cameraModeLookAtGoalClearGoal();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraModePosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerCamera_cameraModePosition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_cameraModePosition" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  (arg1)->cameraModePosition();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_getCameraName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerCamera_getCameraName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_getCameraName" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  result = (char *)(arg1)->getCameraName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_addToCameraCollection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArCameraCollection *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerCamera_addToCameraCollection",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_addToCameraCollection" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ArCameraCollection,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_addToCameraCollection" "', argument " "2"" of type '" "ArCameraCollection &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArServerHandlerCamera_addToCameraCollection" "', argument " "2"" of type '" "ArCameraCollection &""'"); 
  }
  arg2 = reinterpret_cast< ArCameraCollection * >(argp2);
  (arg1)->addToCameraCollection(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_handleGetCameraData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_handleGetCameraData",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_handleGetCameraData" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_handleGetCameraData" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_handleGetCameraData" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleGetCameraData(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_handleGetCameraInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_handleGetCameraInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_handleGetCameraInfo" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_handleGetCameraInfo" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_handleGetCameraInfo" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleGetCameraInfo(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_handleSetCameraAbs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_handleSetCameraAbs",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_handleSetCameraAbs" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_handleSetCameraAbs" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_handleSetCameraAbs" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleSetCameraAbs(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_handleSetCameraPct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_handleSetCameraPct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_handleSetCameraPct" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_handleSetCameraPct" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_handleSetCameraPct" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleSetCameraPct(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_handleSetCameraRel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_handleSetCameraRel",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_handleSetCameraRel" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_handleSetCameraRel" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_handleSetCameraRel" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleSetCameraRel(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_handleGetCameraModeList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_handleGetCameraModeList",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_handleGetCameraModeList" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_handleGetCameraModeList" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_handleGetCameraModeList" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleGetCameraModeList(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_handleCameraModeUpdated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_handleCameraModeUpdated",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_handleCameraModeUpdated" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_handleCameraModeUpdated" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_handleCameraModeUpdated" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleCameraModeUpdated(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_handleSetCameraMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_handleSetCameraMode",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_handleSetCameraMode" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_handleSetCameraMode" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_handleSetCameraMode" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleSetCameraMode(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_handleResetCamera(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_handleResetCamera",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_handleResetCamera" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_handleResetCamera" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_handleResetCamera" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleResetCamera(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_camera(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_camera",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_camera" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_camera" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_camera" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->camera(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraAbs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_cameraAbs",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_cameraAbs" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_cameraAbs" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_cameraAbs" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->cameraAbs(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraPct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_cameraPct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_cameraPct" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_cameraPct" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_cameraPct" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->cameraPct(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraUpdate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_cameraUpdate",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_cameraUpdate" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_cameraUpdate" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_cameraUpdate" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->cameraUpdate(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCamera_cameraInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCamera *arg1 = (ArServerHandlerCamera *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCamera_cameraInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCamera, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCamera_cameraInfo" "', argument " "1"" of type '" "ArServerHandlerCamera *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCamera * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCamera_cameraInfo" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCamera_cameraInfo" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->cameraInfo(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerHandlerCamera_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerHandlerCamera, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerHandlerCameraCollection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArCameraCollection *arg2 = (ArCameraCollection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerHandlerCameraCollection *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerHandlerCameraCollection",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerCameraCollection" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArCameraCollection, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerCameraCollection" "', argument " "2"" of type '" "ArCameraCollection *""'"); 
  }
  arg2 = reinterpret_cast< ArCameraCollection * >(argp2);
  result = (ArServerHandlerCameraCollection *)new ArServerHandlerCameraCollection(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerCameraCollection, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerHandlerCameraCollection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCameraCollection *arg1 = (ArServerHandlerCameraCollection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerHandlerCameraCollection",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCameraCollection, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerHandlerCameraCollection" "', argument " "1"" of type '" "ArServerHandlerCameraCollection *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCameraCollection * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCameraCollection_getCameraList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCameraCollection *arg1 = (ArServerHandlerCameraCollection *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCameraCollection_getCameraList",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCameraCollection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCameraCollection_getCameraList" "', argument " "1"" of type '" "ArServerHandlerCameraCollection *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCameraCollection * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCameraCollection_getCameraList" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCameraCollection_getCameraList" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getCameraList(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCameraCollection_setParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCameraCollection *arg1 = (ArServerHandlerCameraCollection *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCameraCollection_setParams",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCameraCollection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCameraCollection_setParams" "', argument " "1"" of type '" "ArServerHandlerCameraCollection *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCameraCollection * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCameraCollection_setParams" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCameraCollection_setParams" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->setParams(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCameraCollection_handleCameraCollectionModified(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCameraCollection *arg1 = (ArServerHandlerCameraCollection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerCameraCollection_handleCameraCollectionModified",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCameraCollection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCameraCollection_handleCameraCollectionModified" "', argument " "1"" of type '" "ArServerHandlerCameraCollection *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCameraCollection * >(argp1);
  (arg1)->handleCameraCollectionModified();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerHandlerCameraCollection_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerHandlerCameraCollection, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerHandlerCommMonitor__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerHandlerCommMonitor *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerHandlerCommMonitor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerCommMonitor" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ArServerHandlerCommMonitor" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (ArServerHandlerCommMonitor *)new ArServerHandlerCommMonitor(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerCommMonitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerCommMonitor__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerHandlerCommMonitor *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArServerHandlerCommMonitor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerCommMonitor" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (ArServerHandlerCommMonitor *)new ArServerHandlerCommMonitor(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerCommMonitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerCommMonitor(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ArServerHandlerCommMonitor__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_ArServerHandlerCommMonitor__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerHandlerCommMonitor'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerCommMonitor::ArServerHandlerCommMonitor(ArServerBase *,int)\n"
    "    ArServerHandlerCommMonitor::ArServerHandlerCommMonitor(ArServerBase *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerHandlerCommMonitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommMonitor *arg1 = (ArServerHandlerCommMonitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerHandlerCommMonitor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommMonitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerHandlerCommMonitor" "', argument " "1"" of type '" "ArServerHandlerCommMonitor *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommMonitor * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommMonitor_handleGetHeartbeatInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommMonitor *arg1 = (ArServerHandlerCommMonitor *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCommMonitor_handleGetHeartbeatInterval",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommMonitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommMonitor_handleGetHeartbeatInterval" "', argument " "1"" of type '" "ArServerHandlerCommMonitor *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommMonitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommMonitor_handleGetHeartbeatInterval" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCommMonitor_handleGetHeartbeatInterval" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleGetHeartbeatInterval(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommMonitor_handleAckCommTcp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommMonitor *arg1 = (ArServerHandlerCommMonitor *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCommMonitor_handleAckCommTcp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommMonitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommMonitor_handleAckCommTcp" "', argument " "1"" of type '" "ArServerHandlerCommMonitor *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommMonitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommMonitor_handleAckCommTcp" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCommMonitor_handleAckCommTcp" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleAckCommTcp(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommMonitor_handleAckCommUdp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommMonitor *arg1 = (ArServerHandlerCommMonitor *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCommMonitor_handleAckCommUdp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommMonitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommMonitor_handleAckCommUdp" "', argument " "1"" of type '" "ArServerHandlerCommMonitor *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommMonitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommMonitor_handleAckCommUdp" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCommMonitor_handleAckCommUdp" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->handleAckCommUdp(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommMonitor_cycleCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommMonitor *arg1 = (ArServerHandlerCommMonitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerCommMonitor_cycleCallback",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommMonitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommMonitor_cycleCallback" "', argument " "1"" of type '" "ArServerHandlerCommMonitor *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommMonitor * >(argp1);
  (arg1)->cycleCallback();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerHandlerCommMonitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerHandlerCommMonitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerHandlerCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerHandlerCommands *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArServerHandlerCommands",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerCommands" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (ArServerHandlerCommands *)new ArServerHandlerCommands(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerCommands, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerHandlerCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerHandlerCommands",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerHandlerCommands" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_setTextServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArNetServer *arg2 = (ArNetServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerCommands_setTextServer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommands_setTextServer" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetServer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommands_setTextServer" "', argument " "2"" of type '" "ArNetServer *""'"); 
  }
  arg2 = reinterpret_cast< ArNetServer * >(argp2);
  (arg1)->setTextServer(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_addCommand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor *arg4 = (ArFunctor *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerHandlerCommands_addCommand",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommands_addCommand" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommands_addCommand" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCommands_addCommand" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor(obj3); /* XXX Memory leak. How to free? */
  }
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerHandlerCommands_addCommand" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (bool)(arg1)->addCommand((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_addCommand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor *arg4 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerHandlerCommands_addCommand",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommands_addCommand" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommands_addCommand" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCommands_addCommand" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor(obj3); /* XXX Memory leak. How to free? */
  }
  result = (bool)(arg1)->addCommand((char const *)arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_addCommand(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            return _wrap_ArServerHandlerCommands_addCommand__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            _v = PyCallable_Check(argv[3]);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_ArServerHandlerCommands_addCommand__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerCommands_addCommand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerCommands::addCommand(char const *,char const *,ArFunctor *,char const *)\n"
    "    ArServerHandlerCommands::addCommand(char const *,char const *,ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_addStringCommand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor1< ArArgumentBuilder * > *arg4 = (ArFunctor1< ArArgumentBuilder * > *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerHandlerCommands_addStringCommand",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommands_addStringCommand" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommands_addStringCommand" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCommands_addStringCommand" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArFunctor1T_ArArgumentBuilder_p_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerHandlerCommands_addStringCommand" "', argument " "4"" of type '" "ArFunctor1< ArArgumentBuilder * > *""'"); 
  }
  arg4 = reinterpret_cast< ArFunctor1< ArArgumentBuilder * > * >(argp4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerHandlerCommands_addStringCommand" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (bool)(arg1)->addStringCommand((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_addStringCommand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor1< ArArgumentBuilder * > *arg4 = (ArFunctor1< ArArgumentBuilder * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerHandlerCommands_addStringCommand",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommands_addStringCommand" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommands_addStringCommand" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCommands_addStringCommand" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArFunctor1T_ArArgumentBuilder_p_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerHandlerCommands_addStringCommand" "', argument " "4"" of type '" "ArFunctor1< ArArgumentBuilder * > *""'"); 
  }
  arg4 = reinterpret_cast< ArFunctor1< ArArgumentBuilder * > * >(argp4);
  result = (bool)(arg1)->addStringCommand((char const *)arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_addStringCommand(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArFunctor1T_ArArgumentBuilder_p_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ArServerHandlerCommands_addStringCommand__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_ArFunctor1T_ArArgumentBuilder_p_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_ArServerHandlerCommands_addStringCommand__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerCommands_addStringCommand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerCommands::addStringCommand(char const *,char const *,ArFunctor1< ArArgumentBuilder * > *,char const *)\n"
    "    ArServerHandlerCommands::addStringCommand(char const *,char const *,ArFunctor1< ArArgumentBuilder * > *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_setPrefix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerCommands_setPrefix",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommands_setPrefix" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommands_setPrefix" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setPrefix((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_getPrefix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerCommands_getPrefix",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommands_getPrefix" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  result = (char *)(arg1)->getPrefix();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_netListCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCommands_netListCommands",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommands_netListCommands" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommands_netListCommands" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCommands_netListCommands" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->netListCommands(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerCommands_netListStringCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerCommands_netListStringCommands",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerCommands_netListStringCommands" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerCommands_netListStringCommands" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerCommands_netListStringCommands" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->netListStringCommands(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerHandlerCommands_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerHandlerCommands, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerHandlerConfig__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  char *arg6 = (char *) 0 ;
  bool arg7 ;
  char *arg8 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  ArServerHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_ArServerHandlerConfig",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerConfig" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerConfig" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ArServerHandlerConfig" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerHandlerConfig" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_ArServerHandlerConfig" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerHandlerConfig" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  result = (ArServerHandlerConfig *)new ArServerHandlerConfig(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(char const *)arg6,arg7,(char const *)arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerConfig, SWIG_POINTER_NEW |  0 );
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerConfig__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  char *arg6 = (char *) 0 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  ArServerHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_ArServerHandlerConfig",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerConfig" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerConfig" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ArServerHandlerConfig" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerHandlerConfig" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_ArServerHandlerConfig" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = (ArServerHandlerConfig *)new ArServerHandlerConfig(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(char const *)arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerConfig, SWIG_POINTER_NEW |  0 );
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerConfig__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  char *arg6 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  ArServerHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_ArServerHandlerConfig",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerConfig" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerConfig" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ArServerHandlerConfig" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_ArServerHandlerConfig" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  result = (ArServerHandlerConfig *)new ArServerHandlerConfig(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5,(char const *)arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerConfig, SWIG_POINTER_NEW |  0 );
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerConfig__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  ArServerHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_ArServerHandlerConfig",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerConfig" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerConfig" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ArServerHandlerConfig" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (ArServerHandlerConfig *)new ArServerHandlerConfig(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerConfig, SWIG_POINTER_NEW |  0 );
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerConfig__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ArServerHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_ArServerHandlerConfig",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerConfig" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerConfig" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (ArServerHandlerConfig *)new ArServerHandlerConfig(arg1,arg2,(char const *)arg3,(char const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerConfig, SWIG_POINTER_NEW |  0 );
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerConfig__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerHandlerConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerConfig" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (ArServerHandlerConfig *)new ArServerHandlerConfig(arg1,arg2,(char const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerConfig, SWIG_POINTER_NEW |  0 );
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerConfig__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerHandlerConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerHandlerConfig",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerConfig" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  result = (ArServerHandlerConfig *)new ArServerHandlerConfig(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerConfig(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[9] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerHandlerConfig__SWIG_6(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_ArServerHandlerConfig__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_ArServerHandlerConfig__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_ArServerHandlerConfig__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_ArServerHandlerConfig__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_ArServerHandlerConfig__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_new_ArServerHandlerConfig__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerHandlerConfig'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerConfig::ArServerHandlerConfig(ArServerBase *,ArConfig *,char const *,char const *,bool,char const *,bool,char const *)\n"
    "    ArServerHandlerConfig::ArServerHandlerConfig(ArServerBase *,ArConfig *,char const *,char const *,bool,char const *,bool)\n"
    "    ArServerHandlerConfig::ArServerHandlerConfig(ArServerBase *,ArConfig *,char const *,char const *,bool,char const *)\n"
    "    ArServerHandlerConfig::ArServerHandlerConfig(ArServerBase *,ArConfig *,char const *,char const *,bool)\n"
    "    ArServerHandlerConfig::ArServerHandlerConfig(ArServerBase *,ArConfig *,char const *,char const *)\n"
    "    ArServerHandlerConfig::ArServerHandlerConfig(ArServerBase *,ArConfig *,char const *)\n"
    "    ArServerHandlerConfig::ArServerHandlerConfig(ArServerBase *,ArConfig *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerHandlerConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerHandlerConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerHandlerConfig" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_reloadConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_reloadConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_reloadConfig" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_reloadConfig" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_reloadConfig" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->reloadConfig(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getConfigBySections(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_getConfigBySections",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getConfigBySections" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_getConfigBySections" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_getConfigBySections" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getConfigBySections(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getConfigBySectionsV2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_getConfigBySectionsV2",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getConfigBySectionsV2" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_getConfigBySectionsV2" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_getConfigBySectionsV2" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getConfigBySectionsV2(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getConfigBySectionsV3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_getConfigBySectionsV3",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getConfigBySectionsV3" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_getConfigBySectionsV3" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_getConfigBySectionsV3" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getConfigBySectionsV3(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getConfigBySectionsV4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_getConfigBySectionsV4",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getConfigBySectionsV4" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_getConfigBySectionsV4" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_getConfigBySectionsV4" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getConfigBySectionsV4(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_getConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getConfig" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_getConfig" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_getConfig" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getConfig(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_setConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_setConfig" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_setConfig" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_setConfig" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->setConfig(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setConfigParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_setConfigParam",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_setConfigParam" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_setConfigParam" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_setConfigParam" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->setConfigParam(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setConfigBySections(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_setConfigBySections",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_setConfigBySections" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_setConfigBySections" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_setConfigBySections" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->setConfigBySections(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setConfigBySectionsV2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_setConfigBySectionsV2",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_setConfigBySectionsV2" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_setConfigBySectionsV2" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_setConfigBySectionsV2" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->setConfigBySectionsV2(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getConfigDefaults(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_getConfigDefaults",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getConfigDefaults" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_getConfigDefaults" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_getConfigDefaults" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getConfigDefaults(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getConfigSectionFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_getConfigSectionFlags",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getConfigSectionFlags" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_getConfigSectionFlags" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_getConfigSectionFlags" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getConfigSectionFlags(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getLastEditablePriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_getLastEditablePriority",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getLastEditablePriority" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_getLastEditablePriority" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_getLastEditablePriority" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getLastEditablePriority(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addPreWriteCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_addPreWriteCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_addPreWriteCallback" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerConfig_addPreWriteCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addPreWriteCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addPreWriteCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_addPreWriteCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_addPreWriteCallback" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addPreWriteCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addPreWriteCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerHandlerConfig_addPreWriteCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerConfig_addPreWriteCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerConfig_addPreWriteCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerConfig::addPreWriteCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerHandlerConfig::addPreWriteCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_remPreWriteCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_remPreWriteCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_remPreWriteCallback" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remPreWriteCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addPostWriteCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_addPostWriteCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_addPostWriteCallback" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerConfig_addPostWriteCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addPostWriteCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addPostWriteCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_addPostWriteCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_addPostWriteCallback" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addPostWriteCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addPostWriteCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerHandlerConfig_addPostWriteCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerConfig_addPostWriteCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerConfig_addPostWriteCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerConfig::addPostWriteCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerHandlerConfig::addPostWriteCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_remPostWriteCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_remPostWriteCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_remPostWriteCallback" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remPostWriteCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addConfigUpdatedCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_addConfigUpdatedCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_addConfigUpdatedCallback" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerConfig_addConfigUpdatedCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addConfigUpdatedCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addConfigUpdatedCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_addConfigUpdatedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_addConfigUpdatedCallback" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addConfigUpdatedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addConfigUpdatedCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerHandlerConfig_addConfigUpdatedCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerConfig_addConfigUpdatedCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerConfig_addConfigUpdatedCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerConfig::addConfigUpdatedCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerHandlerConfig::addConfigUpdatedCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_remConfigUpdatedCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_remConfigUpdatedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_remConfigUpdatedCallback" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remConfigUpdatedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_restartIO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_restartIO",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_restartIO" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_restartIO" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->restartIO((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_restartSoftware(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_restartSoftware",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_restartSoftware" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_restartSoftware" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->restartSoftware((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_restartHardware(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_restartHardware",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_restartHardware" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_restartHardware" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->restartHardware((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addRestartIOCB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_addRestartIOCB",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_addRestartIOCB" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerConfig_addRestartIOCB" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addRestartIOCB(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addRestartIOCB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_addRestartIOCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_addRestartIOCB" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addRestartIOCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_addRestartIOCB(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerHandlerConfig_addRestartIOCB__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerConfig_addRestartIOCB__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerConfig_addRestartIOCB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerConfig::addRestartIOCB(ArFunctor *,int)\n"
    "    ArServerHandlerConfig::addRestartIOCB(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_remRestartIOCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_remRestartIOCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_remRestartIOCB" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remRestartIOCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setRestartSoftwareCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_setRestartSoftwareCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_setRestartSoftwareCB" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->setRestartSoftwareCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getRestartSoftwareCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArFunctor *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_getRestartSoftwareCB",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getRestartSoftwareCB" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  result = (ArFunctor *)(arg1)->getRestartSoftwareCB();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArFunctor, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setRestartHardwareCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_setRestartHardwareCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_setRestartHardwareCB" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->setRestartHardwareCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getRestartHardwareCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArFunctor *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_getRestartHardwareCB",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getRestartHardwareCB" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  result = (ArFunctor *)(arg1)->getRestartHardwareCB();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArFunctor, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_lockConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_lockConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_lockConfig" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  result = (int)(arg1)->lockConfig();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_tryLockConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_tryLockConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_tryLockConfig" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  result = (int)(arg1)->tryLockConfig();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_unlockConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_unlockConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_unlockConfig" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  result = (int)(arg1)->unlockConfig();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_writeConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_writeConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_writeConfig" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  result = (bool)(arg1)->writeConfig();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_configUpdated__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_configUpdated",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_configUpdated" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_configUpdated" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  result = (bool)(arg1)->configUpdated(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_configUpdated__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_configUpdated",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_configUpdated" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  result = (bool)(arg1)->configUpdated();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_configUpdated(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArServerHandlerConfig_configUpdated__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArServerClient, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerHandlerConfig_configUpdated__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerConfig_configUpdated'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerConfig::configUpdated(ArServerClient *)\n"
    "    ArServerHandlerConfig::configUpdated()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setPreventChanges__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  bool arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerConfig_setPreventChanges",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_setPreventChanges" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerConfig_setPreventChanges" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerConfig_setPreventChanges" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->setPreventChanges(arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setPreventChanges__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_setPreventChanges",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_setPreventChanges" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerConfig_setPreventChanges" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setPreventChanges(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setPreventChanges__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_setPreventChanges",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_setPreventChanges" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  (arg1)->setPreventChanges();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setPreventChanges(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArServerHandlerConfig_setPreventChanges__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerHandlerConfig_setPreventChanges__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArServerHandlerConfig_setPreventChanges__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerConfig_setPreventChanges'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerConfig::setPreventChanges(bool,char const *)\n"
    "    ArServerHandlerConfig::setPreventChanges(bool)\n"
    "    ArServerHandlerConfig::setPreventChanges()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_loadDefaultsFromFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_loadDefaultsFromFile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_loadDefaultsFromFile" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  result = (bool)(arg1)->loadDefaultsFromFile();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_loadDefaultsFromPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  ArNetPacket *arg2 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_loadDefaultsFromPacket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_loadDefaultsFromPacket" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerConfig_loadDefaultsFromPacket" "', argument " "2"" of type '" "ArNetPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArNetPacket * >(argp2);
  result = (bool)(arg1)->loadDefaultsFromPacket(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_createEmptyConfigDefaults(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_createEmptyConfigDefaults",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_createEmptyConfigDefaults" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  (arg1)->createEmptyConfigDefaults();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_setAllowFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerConfig_setAllowFactory",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_setAllowFactory" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerConfig_setAllowFactory" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setAllowFactory(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerConfig_getAllowFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerConfig *arg1 = (ArServerHandlerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerConfig_getAllowFactory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerConfig_getAllowFactory" "', argument " "1"" of type '" "ArServerHandlerConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerConfig * >(argp1);
  result = (bool)(arg1)->getAllowFactory();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerHandlerConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerHandlerConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerHandlerMap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArMapInterface *arg2 = (ArMapInterface *) 0 ;
  ArServerHandlerMap::DataToSend arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerHandlerMap *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerHandlerMap",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMap" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArMapInterface, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerMap" "', argument " "2"" of type '" "ArMapInterface *""'"); 
  }
  arg2 = reinterpret_cast< ArMapInterface * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerHandlerMap" "', argument " "3"" of type '" "ArServerHandlerMap::DataToSend""'");
  } 
  arg3 = static_cast< ArServerHandlerMap::DataToSend >(val3);
  result = (ArServerHandlerMap *)new ArServerHandlerMap(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArMapInterface *arg2 = (ArMapInterface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerHandlerMap *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerHandlerMap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMap" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArMapInterface, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerMap" "', argument " "2"" of type '" "ArMapInterface *""'"); 
  }
  arg2 = reinterpret_cast< ArMapInterface * >(argp2);
  result = (ArServerHandlerMap *)new ArServerHandlerMap(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMap__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerHandlerMap *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArServerHandlerMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMap" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (ArServerHandlerMap *)new ArServerHandlerMap(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMap(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ArServerHandlerMap__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArMapInterface, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerHandlerMap__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArMapInterface, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ArServerHandlerMap__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerHandlerMap'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerMap::ArServerHandlerMap(ArServerBase *,ArMapInterface *,ArServerHandlerMap::DataToSend)\n"
    "    ArServerHandlerMap::ArServerHandlerMap(ArServerBase *,ArMapInterface *)\n"
    "    ArServerHandlerMap::ArServerHandlerMap(ArServerBase *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerHandlerMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerHandlerMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerHandlerMap" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_loadMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMap_loadMap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_loadMap" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMap_loadMap" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->loadMap((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_useMap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  ArMapInterface *arg2 = (ArMapInterface *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMap_useMap",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_useMap" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArMapInterface, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMap_useMap" "', argument " "2"" of type '" "ArMapInterface *""'"); 
  }
  arg2 = reinterpret_cast< ArMapInterface * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerMap_useMap" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->useMap(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_useMap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  ArMapInterface *arg2 = (ArMapInterface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMap_useMap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_useMap" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArMapInterface, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMap_useMap" "', argument " "2"" of type '" "ArMapInterface *""'"); 
  }
  arg2 = reinterpret_cast< ArMapInterface * >(argp2);
  (arg1)->useMap(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_useMap(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMap, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArMapInterface, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerHandlerMap_useMap__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMap, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArMapInterface, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerMap_useMap__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerMap_useMap'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerMap::useMap(ArMapInterface *,bool)\n"
    "    ArServerHandlerMap::useMap(ArMapInterface *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_getMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArMapInterface *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerMap_getMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_getMap" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  result = (ArMapInterface *)(arg1)->getMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArMapInterface, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_serverGetMapId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMap_serverGetMapId",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_serverGetMapId" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMap_serverGetMapId" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMap_serverGetMapId" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverGetMapId(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_serverGetMapName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMap_serverGetMapName",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_serverGetMapName" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMap_serverGetMapName" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMap_serverGetMapName" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverGetMapName(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_serverGetMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMap_serverGetMap",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_serverGetMap" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMap_serverGetMap" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMap_serverGetMap" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverGetMap(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_serverGetMapBinary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMap_serverGetMapBinary",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_serverGetMapBinary" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMap_serverGetMapBinary" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMap_serverGetMapBinary" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverGetMapBinary(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_serverGetMapMultiScans(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMap_serverGetMapMultiScans",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_serverGetMapMultiScans" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMap_serverGetMapMultiScans" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMap_serverGetMapMultiScans" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverGetMapMultiScans(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_serverGetMapWithMaxCategory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMap_serverGetMapWithMaxCategory",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_serverGetMapWithMaxCategory" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMap_serverGetMapWithMaxCategory" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMap_serverGetMapWithMaxCategory" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverGetMapWithMaxCategory(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_serverGetGoals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMap_serverGetGoals",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_serverGetGoals" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMap_serverGetGoals" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMap_serverGetGoals" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverGetGoals(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_setDataToSend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  ArServerHandlerMap::DataToSend arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMap_setDataToSend",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_setDataToSend" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerHandlerMap_setDataToSend" "', argument " "2"" of type '" "ArServerHandlerMap::DataToSend""'");
  } 
  arg2 = static_cast< ArServerHandlerMap::DataToSend >(val2);
  (arg1)->setDataToSend(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMap_getDataToSend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMap *arg1 = (ArServerHandlerMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerHandlerMap::DataToSend result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerMap_getDataToSend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMap_getDataToSend" "', argument " "1"" of type '" "ArServerHandlerMap *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMap * >(argp1);
  result = (ArServerHandlerMap::DataToSend)(arg1)->getDataToSend();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerHandlerMap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerHandlerMap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerHandlerMapping__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArLaser *arg3 = (ArLaser *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  ArLaser *arg7 = (ArLaser *) 0 ;
  char *arg8 = (char *) 0 ;
  char *arg9 = (char *) 0 ;
  std::list< ArLaser *,std::allocator< ArLaser * > > *arg10 = (std::list< ArLaser *,std::allocator< ArLaser * > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  int res9 ;
  char *buf9 = 0 ;
  int alloc9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  ArServerHandlerMapping *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:new_ArServerHandlerMapping",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMapping" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerMapping" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerMapping" "', argument " "3"" of type '" "ArLaser *""'"); 
  }
  arg3 = reinterpret_cast< ArLaser * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerMapping" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerHandlerMapping" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerHandlerMapping" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerHandlerMapping" "', argument " "7"" of type '" "ArLaser *""'"); 
  }
  arg7 = reinterpret_cast< ArLaser * >(argp7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerHandlerMapping" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_AsCharPtrAndSize(obj8, &buf9, NULL, &alloc9);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerHandlerMapping" "', argument " "9"" of type '" "char const *""'");
  }
  arg9 = reinterpret_cast< char * >(buf9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_std__listT_ArLaser_p_std__allocatorT_ArLaser_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "new_ArServerHandlerMapping" "', argument " "10"" of type '" "std::list< ArLaser *,std::allocator< ArLaser * > > *""'"); 
  }
  arg10 = reinterpret_cast< std::list< ArLaser *,std::allocator< ArLaser * > > * >(argp10);
  result = (ArServerHandlerMapping *)new ArServerHandlerMapping(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,(char const *)arg8,(char const *)arg9,arg10);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMapping, SWIG_POINTER_NEW |  0 );
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc9 == SWIG_NEWOBJ) delete[] buf9;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc9 == SWIG_NEWOBJ) delete[] buf9;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMapping__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArLaser *arg3 = (ArLaser *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  ArLaser *arg7 = (ArLaser *) 0 ;
  char *arg8 = (char *) 0 ;
  char *arg9 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  int res9 ;
  char *buf9 = 0 ;
  int alloc9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  ArServerHandlerMapping *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_ArServerHandlerMapping",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMapping" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerMapping" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerMapping" "', argument " "3"" of type '" "ArLaser *""'"); 
  }
  arg3 = reinterpret_cast< ArLaser * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerMapping" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerHandlerMapping" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerHandlerMapping" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerHandlerMapping" "', argument " "7"" of type '" "ArLaser *""'"); 
  }
  arg7 = reinterpret_cast< ArLaser * >(argp7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerHandlerMapping" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  res9 = SWIG_AsCharPtrAndSize(obj8, &buf9, NULL, &alloc9);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_ArServerHandlerMapping" "', argument " "9"" of type '" "char const *""'");
  }
  arg9 = reinterpret_cast< char * >(buf9);
  result = (ArServerHandlerMapping *)new ArServerHandlerMapping(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,(char const *)arg8,(char const *)arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMapping, SWIG_POINTER_NEW |  0 );
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc9 == SWIG_NEWOBJ) delete[] buf9;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  if (alloc9 == SWIG_NEWOBJ) delete[] buf9;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMapping__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArLaser *arg3 = (ArLaser *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  ArLaser *arg7 = (ArLaser *) 0 ;
  char *arg8 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  ArServerHandlerMapping *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_ArServerHandlerMapping",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMapping" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerMapping" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerMapping" "', argument " "3"" of type '" "ArLaser *""'"); 
  }
  arg3 = reinterpret_cast< ArLaser * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerMapping" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerHandlerMapping" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerHandlerMapping" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerHandlerMapping" "', argument " "7"" of type '" "ArLaser *""'"); 
  }
  arg7 = reinterpret_cast< ArLaser * >(argp7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_ArServerHandlerMapping" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  result = (ArServerHandlerMapping *)new ArServerHandlerMapping(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,(char const *)arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMapping, SWIG_POINTER_NEW |  0 );
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMapping__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArLaser *arg3 = (ArLaser *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  ArLaser *arg7 = (ArLaser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  ArServerHandlerMapping *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_ArServerHandlerMapping",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMapping" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerMapping" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerMapping" "', argument " "3"" of type '" "ArLaser *""'"); 
  }
  arg3 = reinterpret_cast< ArLaser * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerMapping" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerHandlerMapping" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerHandlerMapping" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerHandlerMapping" "', argument " "7"" of type '" "ArLaser *""'"); 
  }
  arg7 = reinterpret_cast< ArLaser * >(argp7);
  result = (ArServerHandlerMapping *)new ArServerHandlerMapping(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMapping, SWIG_POINTER_NEW |  0 );
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMapping__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArLaser *arg3 = (ArLaser *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  ArServerHandlerMapping *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_ArServerHandlerMapping",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMapping" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerMapping" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerMapping" "', argument " "3"" of type '" "ArLaser *""'"); 
  }
  arg3 = reinterpret_cast< ArLaser * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerMapping" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerHandlerMapping" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerHandlerMapping" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (ArServerHandlerMapping *)new ArServerHandlerMapping(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMapping, SWIG_POINTER_NEW |  0 );
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMapping__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArLaser *arg3 = (ArLaser *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  ArServerHandlerMapping *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_ArServerHandlerMapping",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMapping" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerMapping" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerMapping" "', argument " "3"" of type '" "ArLaser *""'"); 
  }
  arg3 = reinterpret_cast< ArLaser * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerMapping" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_ArServerHandlerMapping" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (ArServerHandlerMapping *)new ArServerHandlerMapping(arg1,arg2,arg3,(char const *)arg4,(char const *)arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMapping, SWIG_POINTER_NEW |  0 );
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMapping__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArLaser *arg3 = (ArLaser *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ArServerHandlerMapping *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_ArServerHandlerMapping",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMapping" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerMapping" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerMapping" "', argument " "3"" of type '" "ArLaser *""'"); 
  }
  arg3 = reinterpret_cast< ArLaser * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ArServerHandlerMapping" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (ArServerHandlerMapping *)new ArServerHandlerMapping(arg1,arg2,arg3,(char const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMapping, SWIG_POINTER_NEW |  0 );
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMapping__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArLaser *arg3 = (ArLaser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerHandlerMapping *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerHandlerMapping",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerHandlerMapping" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerHandlerMapping" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArLaser, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerHandlerMapping" "', argument " "3"" of type '" "ArLaser *""'"); 
  }
  arg3 = reinterpret_cast< ArLaser * >(argp3);
  result = (ArServerHandlerMapping *)new ArServerHandlerMapping(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerHandlerMapping, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerHandlerMapping(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[11] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 10) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArLaser, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_ArServerHandlerMapping__SWIG_7(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArLaser, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_ArServerHandlerMapping__SWIG_6(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArLaser, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_ArServerHandlerMapping__SWIG_5(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArLaser, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_ArServerHandlerMapping__SWIG_4(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArLaser, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_ArLaser, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_new_ArServerHandlerMapping__SWIG_3(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArLaser, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_ArLaser, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_new_ArServerHandlerMapping__SWIG_2(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArLaser, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_ArLaser, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_AsCharPtrAndSize(argv[8], 0, NULL, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_new_ArServerHandlerMapping__SWIG_1(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArLaser, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_ArLaser, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    int res = SWIG_AsCharPtrAndSize(argv[8], 0, NULL, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      void *vptr = 0;
                      int res = SWIG_ConvertPtr(argv[9], &vptr, SWIGTYPE_p_std__listT_ArLaser_p_std__allocatorT_ArLaser_p_t_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        return _wrap_new_ArServerHandlerMapping__SWIG_0(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerHandlerMapping'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerMapping::ArServerHandlerMapping(ArServerBase *,ArRobot *,ArLaser *,char const *,char const *,bool,ArLaser *,char const *,char const *,std::list< ArLaser *,std::allocator< ArLaser * > > *)\n"
    "    ArServerHandlerMapping::ArServerHandlerMapping(ArServerBase *,ArRobot *,ArLaser *,char const *,char const *,bool,ArLaser *,char const *,char const *)\n"
    "    ArServerHandlerMapping::ArServerHandlerMapping(ArServerBase *,ArRobot *,ArLaser *,char const *,char const *,bool,ArLaser *,char const *)\n"
    "    ArServerHandlerMapping::ArServerHandlerMapping(ArServerBase *,ArRobot *,ArLaser *,char const *,char const *,bool,ArLaser *)\n"
    "    ArServerHandlerMapping::ArServerHandlerMapping(ArServerBase *,ArRobot *,ArLaser *,char const *,char const *,bool)\n"
    "    ArServerHandlerMapping::ArServerHandlerMapping(ArServerBase *,ArRobot *,ArLaser *,char const *,char const *)\n"
    "    ArServerHandlerMapping::ArServerHandlerMapping(ArServerBase *,ArRobot *,ArLaser *,char const *)\n"
    "    ArServerHandlerMapping::ArServerHandlerMapping(ArServerBase *,ArRobot *,ArLaser *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerHandlerMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerHandlerMapping",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerHandlerMapping" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_serverMappingStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_serverMappingStart",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_serverMappingStart" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_serverMappingStart" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMapping_serverMappingStart" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverMappingStart(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_serverMappingEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_serverMappingEnd",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_serverMappingEnd" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_serverMappingEnd" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMapping_serverMappingEnd" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverMappingEnd(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_serverMappingStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_serverMappingStatus",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_serverMappingStatus" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_serverMappingStatus" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMapping_serverMappingStatus" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverMappingStatus(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_isMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerMapping_isMapping",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_isMapping" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  result = (bool)(arg1)->isMapping();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_forceReading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerMapping_forceReading",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_forceReading" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  (arg1)->forceReading();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_getFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerMapping_getFileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_getFileName" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  result = (char *)(arg1)->getFileName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_getMapName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerMapping_getMapName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_getMapName" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  result = (char *)(arg1)->getMapName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addSimpleCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArServerHandlerCommands *arg2 = (ArServerHandlerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addSimpleCommands",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addSimpleCommands" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_addSimpleCommands" "', argument " "2"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg2 = reinterpret_cast< ArServerHandlerCommands * >(argp2);
  (arg1)->addSimpleCommands(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_simpleLoopStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArArgumentBuilder *arg2 = (ArArgumentBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_simpleLoopStart",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_simpleLoopStart" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArArgumentBuilder, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_simpleLoopStart" "', argument " "2"" of type '" "ArArgumentBuilder *""'"); 
  }
  arg2 = reinterpret_cast< ArArgumentBuilder * >(argp2);
  (arg1)->simpleLoopStart(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_simpleLoopEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArArgumentBuilder *arg2 = (ArArgumentBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_simpleLoopEnd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_simpleLoopEnd" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArArgumentBuilder, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_simpleLoopEnd" "', argument " "2"" of type '" "ArArgumentBuilder *""'"); 
  }
  arg2 = reinterpret_cast< ArArgumentBuilder * >(argp2);
  (arg1)->simpleLoopEnd(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addStringForStartOfLogs__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  char *arg2 = (char *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_addStringForStartOfLogs",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addStringForStartOfLogs" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_addStringForStartOfLogs" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerMapping_addStringForStartOfLogs" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addStringForStartOfLogs((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addStringForStartOfLogs__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addStringForStartOfLogs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addStringForStartOfLogs" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_addStringForStartOfLogs" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->addStringForStartOfLogs((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addStringForStartOfLogs(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerHandlerMapping_addStringForStartOfLogs__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerMapping_addStringForStartOfLogs__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerMapping_addStringForStartOfLogs'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerMapping::addStringForStartOfLogs(char const *,ArListPos::Pos)\n"
    "    ArServerHandlerMapping::addStringForStartOfLogs(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_remStringForStartOfLogs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_remStringForStartOfLogs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_remStringForStartOfLogs" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_remStringForStartOfLogs" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->remStringForStartOfLogs((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addTagToLog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addTagToLog",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addTagToLog" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_addTagToLog" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->addTagToLog((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addInfoToLog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addInfoToLog",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addInfoToLog" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_addInfoToLog" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->addInfoToLog((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addLocationData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  char *arg2 = (char *) 0 ;
  ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > *arg3 = (ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_addLocationData",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addLocationData" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_addLocationData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerHandlerMapping_addLocationData" "', argument " "3"" of type '" "ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > *""'"); 
  }
  arg3 = reinterpret_cast< ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > * >(argp3);
  result = (bool)(arg1)->addLocationData((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingStartCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_addMappingStartCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addMappingStartCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerMapping_addMappingStartCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addMappingStartCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingStartCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addMappingStartCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addMappingStartCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addMappingStartCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingStartCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerHandlerMapping_addMappingStartCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerMapping_addMappingStartCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerMapping_addMappingStartCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerMapping::addMappingStartCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerHandlerMapping::addMappingStartCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_remMappingStartCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_remMappingStartCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_remMappingStartCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remMappingStartCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingBegunCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_addMappingBegunCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addMappingBegunCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerMapping_addMappingBegunCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addMappingBegunCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingBegunCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addMappingBegunCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addMappingBegunCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addMappingBegunCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingBegunCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerHandlerMapping_addMappingBegunCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerMapping_addMappingBegunCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerMapping_addMappingBegunCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerMapping::addMappingBegunCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerHandlerMapping::addMappingBegunCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_remMappingBegunCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_remMappingBegunCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_remMappingBegunCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remMappingBegunCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingEndCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_addMappingEndCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addMappingEndCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerMapping_addMappingEndCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addMappingEndCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingEndCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addMappingEndCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addMappingEndCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addMappingEndCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingEndCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerHandlerMapping_addMappingEndCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerMapping_addMappingEndCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerMapping_addMappingEndCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerMapping::addMappingEndCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerHandlerMapping::addMappingEndCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_remMappingEndCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_remMappingEndCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_remMappingEndCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remMappingEndCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingEndedCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_addMappingEndedCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addMappingEndedCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerMapping_addMappingEndedCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addMappingEndedCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingEndedCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addMappingEndedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addMappingEndedCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addMappingEndedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addMappingEndedCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerHandlerMapping_addMappingEndedCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerMapping_addMappingEndedCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerMapping_addMappingEndedCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerMapping::addMappingEndedCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerHandlerMapping::addMappingEndedCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_remMappingEndedCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_remMappingEndedCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_remMappingEndedCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remMappingEndedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addPreMoveCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_addPreMoveCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addPreMoveCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerMapping_addPreMoveCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addPreMoveCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addPreMoveCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addPreMoveCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addPreMoveCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addPreMoveCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addPreMoveCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerHandlerMapping_addPreMoveCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerMapping_addPreMoveCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerMapping_addPreMoveCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerMapping::addPreMoveCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerHandlerMapping::addPreMoveCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_remPreMoveCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_remPreMoveCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_remPreMoveCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remPreMoveCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addPostMoveCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  ArListPos::Pos arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerHandlerMapping_addPostMoveCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addPostMoveCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerHandlerMapping_addPostMoveCallback" "', argument " "3"" of type '" "ArListPos::Pos""'");
  } 
  arg3 = static_cast< ArListPos::Pos >(val3);
  (arg1)->addPostMoveCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addPostMoveCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addPostMoveCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addPostMoveCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addPostMoveCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addPostMoveCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerHandlerMapping_addPostMoveCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerMapping, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerHandlerMapping_addPostMoveCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerHandlerMapping_addPostMoveCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerHandlerMapping::addPostMoveCallback(ArFunctor *,ArListPos::Pos)\n"
    "    ArServerHandlerMapping::addPostMoveCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_remPostMoveCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_remPostMoveCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_remPostMoveCallback" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remPostMoveCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_packetHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArRobotPacket *arg2 = (ArRobotPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_packetHandler",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_packetHandler" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobotPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_packetHandler" "', argument " "2"" of type '" "ArRobotPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArRobotPacket * >(argp2);
  result = (bool)(arg1)->packetHandler(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_getLocationDataMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::map< std::string,ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > *,ArStrCaseCmpOp,std::allocator< std::pair< std::string const,ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > * > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerMapping_getLocationDataMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_getLocationDataMap" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  result = (std::map< std::string,ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > *,ArStrCaseCmpOp,std::allocator< std::pair< std::string const,ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > * > > > *)(arg1)->getLocationDataMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_std__string_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_ArStrCaseCmpOp_std__allocatorT_std__pairT_std__string_const_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_addStringsForStartOfLogToMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArMap *arg2 = (ArMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_addStringsForStartOfLogToMap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_addStringsForStartOfLogToMap" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArMap, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_addStringsForStartOfLogToMap" "', argument " "2"" of type '" "ArMap *""'"); 
  }
  arg2 = reinterpret_cast< ArMap * >(argp2);
  (arg1)->addStringsForStartOfLogToMap(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_getZipFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArZippable *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerMapping_getZipFile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_getZipFile" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  result = (ArZippable *)(arg1)->getZipFile();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArZippable, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_getSnapshotZipFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArZippable *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerHandlerMapping_getSnapshotZipFile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_getSnapshotZipFile" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  result = (ArZippable *)(arg1)->getSnapshotZipFile();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArZippable, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_setZipFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArZippable *arg2 = (ArZippable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_setZipFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_setZipFile" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArZippable, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_setZipFile" "', argument " "2"" of type '" "ArZippable *""'"); 
  }
  arg2 = reinterpret_cast< ArZippable * >(argp2);
  (arg1)->setZipFile(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerHandlerMapping_setSnapshotZipFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerMapping *arg1 = (ArServerHandlerMapping *) 0 ;
  ArZippable *arg2 = (ArZippable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerHandlerMapping_setSnapshotZipFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerHandlerMapping_setSnapshotZipFile" "', argument " "1"" of type '" "ArServerHandlerMapping *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArZippable, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerHandlerMapping_setSnapshotZipFile" "', argument " "2"" of type '" "ArZippable *""'"); 
  }
  arg2 = reinterpret_cast< ArZippable * >(argp2);
  (arg1)->setSnapshotZipFile(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerHandlerMapping_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerHandlerMapping, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerInfoDrawings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerInfoDrawings *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArServerInfoDrawings",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerInfoDrawings" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (ArServerInfoDrawings *)new ArServerInfoDrawings(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerInfoDrawings, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerInfoDrawings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoDrawings *arg1 = (ArServerInfoDrawings *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerInfoDrawings",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoDrawings, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerInfoDrawings" "', argument " "1"" of type '" "ArServerInfoDrawings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoDrawings * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoDrawings_addDrawing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoDrawings *arg1 = (ArServerInfoDrawings *) 0 ;
  ArDrawingData *arg2 = (ArDrawingData *) 0 ;
  char *arg3 = (char *) 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *arg4 = (ArFunctor2< ArServerClient *,ArNetPacket * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerInfoDrawings_addDrawing",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoDrawings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoDrawings_addDrawing" "', argument " "1"" of type '" "ArServerInfoDrawings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoDrawings * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArDrawingData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoDrawings_addDrawing" "', argument " "2"" of type '" "ArDrawingData *""'"); 
  }
  arg2 = reinterpret_cast< ArDrawingData * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoDrawings_addDrawing" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = new ArPyFunctor2<ArServerClient*, ArNetPacket*>(obj3);
  }
  result = (bool)(arg1)->addDrawing(arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoDrawings_addRangeDevice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoDrawings *arg1 = (ArServerInfoDrawings *) 0 ;
  ArRangeDevice *arg2 = (ArRangeDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerInfoDrawings_addRangeDevice",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoDrawings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoDrawings_addRangeDevice" "', argument " "1"" of type '" "ArServerInfoDrawings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoDrawings * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRangeDevice, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoDrawings_addRangeDevice" "', argument " "2"" of type '" "ArRangeDevice *""'"); 
  }
  arg2 = reinterpret_cast< ArRangeDevice * >(argp2);
  result = (bool)(arg1)->addRangeDevice(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoDrawings_addRobotsRangeDevices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoDrawings *arg1 = (ArServerInfoDrawings *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerInfoDrawings_addRobotsRangeDevices",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoDrawings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoDrawings_addRobotsRangeDevices" "', argument " "1"" of type '" "ArServerInfoDrawings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoDrawings * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoDrawings_addRobotsRangeDevices" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (bool)(arg1)->addRobotsRangeDevices(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoDrawings_netListDrawings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoDrawings *arg1 = (ArServerInfoDrawings *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoDrawings_netListDrawings",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoDrawings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoDrawings_netListDrawings" "', argument " "1"" of type '" "ArServerInfoDrawings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoDrawings * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoDrawings_netListDrawings" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoDrawings_netListDrawings" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->netListDrawings(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoDrawings_netGetDrawingList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoDrawings *arg1 = (ArServerInfoDrawings *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoDrawings_netGetDrawingList",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoDrawings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoDrawings_netGetDrawingList" "', argument " "1"" of type '" "ArServerInfoDrawings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoDrawings * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoDrawings_netGetDrawingList" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoDrawings_netGetDrawingList" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->netGetDrawingList(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoDrawings_netRangeDeviceCurrent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoDrawings *arg1 = (ArServerInfoDrawings *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  ArRangeDevice *arg4 = (ArRangeDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerInfoDrawings_netRangeDeviceCurrent",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoDrawings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoDrawings_netRangeDeviceCurrent" "', argument " "1"" of type '" "ArServerInfoDrawings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoDrawings * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoDrawings_netRangeDeviceCurrent" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoDrawings_netRangeDeviceCurrent" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArRangeDevice, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerInfoDrawings_netRangeDeviceCurrent" "', argument " "4"" of type '" "ArRangeDevice *""'"); 
  }
  arg4 = reinterpret_cast< ArRangeDevice * >(argp4);
  (arg1)->netRangeDeviceCurrent(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoDrawings_netRangeDeviceCumulative(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoDrawings *arg1 = (ArServerInfoDrawings *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  ArRangeDevice *arg4 = (ArRangeDevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerInfoDrawings_netRangeDeviceCumulative",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoDrawings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoDrawings_netRangeDeviceCumulative" "', argument " "1"" of type '" "ArServerInfoDrawings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoDrawings * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoDrawings_netRangeDeviceCumulative" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoDrawings_netRangeDeviceCumulative" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArRangeDevice, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerInfoDrawings_netRangeDeviceCumulative" "', argument " "4"" of type '" "ArRangeDevice *""'"); 
  }
  arg4 = reinterpret_cast< ArRangeDevice * >(argp4);
  (arg1)->netRangeDeviceCumulative(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoDrawings_internalGetDrawingData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoDrawings *arg1 = (ArServerInfoDrawings *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArDrawingData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerInfoDrawings_internalGetDrawingData",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoDrawings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoDrawings_internalGetDrawingData" "', argument " "1"" of type '" "ArServerInfoDrawings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoDrawings * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoDrawings_internalGetDrawingData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (ArDrawingData *)(arg1)->internalGetDrawingData((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArDrawingData, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoDrawings_internalGetDrawingCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoDrawings *arg1 = (ArServerInfoDrawings *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArFunctor2< ArServerClient *,ArNetPacket * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerInfoDrawings_internalGetDrawingCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoDrawings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoDrawings_internalGetDrawingCallback" "', argument " "1"" of type '" "ArServerInfoDrawings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoDrawings * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoDrawings_internalGetDrawingCallback" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (ArFunctor2< ArServerClient *,ArNetPacket * > *)(arg1)->internalGetDrawingCallback((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArFunctor2T_ArServerClient_p_ArNetPacket_p_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *ArServerInfoDrawings_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerInfoDrawings, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerInfoRobot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerInfoRobot *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerInfoRobot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerInfoRobot" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerInfoRobot" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerInfoRobot *)new ArServerInfoRobot(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerInfoRobot, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerInfoRobot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoRobot *arg1 = (ArServerInfoRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerInfoRobot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoRobot, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerInfoRobot" "', argument " "1"" of type '" "ArServerInfoRobot *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoRobot * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoRobot_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoRobot *arg1 = (ArServerInfoRobot *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoRobot_update",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoRobot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoRobot_update" "', argument " "1"" of type '" "ArServerInfoRobot *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoRobot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoRobot_update" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoRobot_update" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->update(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoRobot_updateNumbers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoRobot *arg1 = (ArServerInfoRobot *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoRobot_updateNumbers",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoRobot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoRobot_updateNumbers" "', argument " "1"" of type '" "ArServerInfoRobot *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoRobot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoRobot_updateNumbers" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoRobot_updateNumbers" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->updateNumbers(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoRobot_updateStrings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoRobot *arg1 = (ArServerInfoRobot *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoRobot_updateStrings",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoRobot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoRobot_updateStrings" "', argument " "1"" of type '" "ArServerInfoRobot *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoRobot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoRobot_updateStrings" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoRobot_updateStrings" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->updateStrings(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoRobot_batteryInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoRobot *arg1 = (ArServerInfoRobot *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoRobot_batteryInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoRobot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoRobot_batteryInfo" "', argument " "1"" of type '" "ArServerInfoRobot *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoRobot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoRobot_batteryInfo" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoRobot_batteryInfo" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->batteryInfo(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoRobot_physicalInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoRobot *arg1 = (ArServerInfoRobot *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoRobot_physicalInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoRobot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoRobot_physicalInfo" "', argument " "1"" of type '" "ArServerInfoRobot *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoRobot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoRobot_physicalInfo" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoRobot_physicalInfo" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->physicalInfo(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoRobot_activityTimeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoRobot *arg1 = (ArServerInfoRobot *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoRobot_activityTimeInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoRobot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoRobot_activityTimeInfo" "', argument " "1"" of type '" "ArServerInfoRobot *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoRobot * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoRobot_activityTimeInfo" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoRobot_activityTimeInfo" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->activityTimeInfo(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerInfoRobot_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerInfoRobot, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerInfoSensor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerInfoSensor *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerInfoSensor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerInfoSensor" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerInfoSensor" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerInfoSensor *)new ArServerInfoSensor(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerInfoSensor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerInfoSensor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoSensor *arg1 = (ArServerInfoSensor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerInfoSensor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoSensor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerInfoSensor" "', argument " "1"" of type '" "ArServerInfoSensor *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoSensor * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoSensor_getSensorList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoSensor *arg1 = (ArServerInfoSensor *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoSensor_getSensorList",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoSensor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoSensor_getSensorList" "', argument " "1"" of type '" "ArServerInfoSensor *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoSensor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoSensor_getSensorList" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoSensor_getSensorList" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getSensorList(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoSensor_getSensorCurrent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoSensor *arg1 = (ArServerInfoSensor *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoSensor_getSensorCurrent",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoSensor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoSensor_getSensorCurrent" "', argument " "1"" of type '" "ArServerInfoSensor *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoSensor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoSensor_getSensorCurrent" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoSensor_getSensorCurrent" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getSensorCurrent(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoSensor_getSensorCumulative(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoSensor *arg1 = (ArServerInfoSensor *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoSensor_getSensorCumulative",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoSensor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoSensor_getSensorCumulative" "', argument " "1"" of type '" "ArServerInfoSensor *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoSensor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoSensor_getSensorCumulative" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoSensor_getSensorCumulative" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->getSensorCumulative(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerInfoSensor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerInfoSensor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerInfoStrings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerInfoStrings *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArServerInfoStrings",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerInfoStrings" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  result = (ArServerInfoStrings *)new ArServerInfoStrings(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerInfoStrings, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerInfoStrings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoStrings *arg1 = (ArServerInfoStrings *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerInfoStrings",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoStrings, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerInfoStrings" "', argument " "1"" of type '" "ArServerInfoStrings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoStrings * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoStrings_netGetStringsInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoStrings *arg1 = (ArServerInfoStrings *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoStrings_netGetStringsInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoStrings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoStrings_netGetStringsInfo" "', argument " "1"" of type '" "ArServerInfoStrings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoStrings * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoStrings_netGetStringsInfo" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoStrings_netGetStringsInfo" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->netGetStringsInfo(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoStrings_netGetStrings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoStrings *arg1 = (ArServerInfoStrings *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerInfoStrings_netGetStrings",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoStrings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoStrings_netGetStrings" "', argument " "1"" of type '" "ArServerInfoStrings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoStrings * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoStrings_netGetStrings" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerInfoStrings_netGetStrings" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->netGetStrings(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoStrings_addString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoStrings *arg1 = (ArServerInfoStrings *) 0 ;
  char *arg2 = (char *) 0 ;
  ArTypes::UByte2 arg3 ;
  ArFunctor2< char *,ArTypes::UByte2 > *arg4 = (ArFunctor2< char *,ArTypes::UByte2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerInfoStrings_addString",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoStrings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoStrings_addString" "', argument " "1"" of type '" "ArServerInfoStrings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoStrings * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoStrings_addString" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerInfoStrings_addString" "', argument " "3"" of type '" "ArTypes::UByte2""'");
  } 
  arg3 = static_cast< ArTypes::UByte2 >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ArFunctor2T_char_p_unsigned_short_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerInfoStrings_addString" "', argument " "4"" of type '" "ArFunctor2< char *,ArTypes::UByte2 > *""'"); 
  }
  arg4 = reinterpret_cast< ArFunctor2< char *,ArTypes::UByte2 > * >(argp4);
  (arg1)->addString((char const *)arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoStrings_getAddStringFunctor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoStrings *arg1 = (ArServerInfoStrings *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArFunctor3< char const *,ArTypes::UByte2,ArFunctor2< char *,ArTypes::UByte2 > * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerInfoStrings_getAddStringFunctor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoStrings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoStrings_getAddStringFunctor" "', argument " "1"" of type '" "ArServerInfoStrings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoStrings * >(argp1);
  result = (ArFunctor3< char const *,ArTypes::UByte2,ArFunctor2< char *,ArTypes::UByte2 > * > *)(arg1)->getAddStringFunctor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArFunctor3T_char_const_p_unsigned_short_ArFunctor2T_char_p_unsigned_short_t_p_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerInfoStrings_internalGetStringInfoHolder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerInfoStrings *arg1 = (ArServerInfoStrings *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArStringInfoHolder *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerInfoStrings_internalGetStringInfoHolder",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerInfoStrings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerInfoStrings_internalGetStringInfoHolder" "', argument " "1"" of type '" "ArServerInfoStrings *""'"); 
  }
  arg1 = reinterpret_cast< ArServerInfoStrings * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerInfoStrings_internalGetStringInfoHolder" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (ArStringInfoHolder *)(arg1)->internalGetStringInfoHolder((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArStringInfoHolder, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *ArServerInfoStrings_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerInfoStrings, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerModeDrive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerModeDrive *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerModeDrive",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeDrive" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeDrive" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerModeDrive" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (ArServerModeDrive *)new ArServerModeDrive(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeDrive, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeDrive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerModeDrive *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerModeDrive",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeDrive" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeDrive" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerModeDrive *)new ArServerModeDrive(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeDrive, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeDrive(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerModeDrive__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ArServerModeDrive__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerModeDrive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeDrive::ArServerModeDrive(ArServerBase *,ArRobot *,bool)\n"
    "    ArServerModeDrive::ArServerModeDrive(ArServerBase *,ArRobot *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerModeDrive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerModeDrive",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerModeDrive" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_activate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeDrive_activate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_activate" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  (arg1)->activate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_deactivate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeDrive_deactivate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_deactivate" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  (arg1)->deactivate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_addControlCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  ArServerHandlerCommands *arg2 = (ArServerHandlerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeDrive_addControlCommands",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_addControlCommands" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeDrive_addControlCommands" "', argument " "2"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg2 = reinterpret_cast< ArServerHandlerCommands * >(argp2);
  (arg1)->addControlCommands(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_driveJoystick__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  double arg2 ;
  double arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerModeDrive_driveJoystick",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_driveJoystick" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeDrive_driveJoystick" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeDrive_driveJoystick" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerModeDrive_driveJoystick" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->driveJoystick(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_driveJoystick__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeDrive_driveJoystick",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_driveJoystick" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeDrive_driveJoystick" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeDrive_driveJoystick" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  (arg1)->driveJoystick(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_driveJoystick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerModeDrive_driveJoystick__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArServerModeDrive_driveJoystick__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeDrive_driveJoystick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeDrive::driveJoystick(double,double,bool)\n"
    "    ArServerModeDrive::driveJoystick(double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_serverDriveJoystick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeDrive_serverDriveJoystick",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_serverDriveJoystick" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeDrive_serverDriveJoystick" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerModeDrive_serverDriveJoystick" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->serverDriveJoystick(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_userTask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeDrive_userTask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_userTask" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  (arg1)->userTask();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_setThrottleParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeDrive_setThrottleParams",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_setThrottleParams" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeDrive_setThrottleParams" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeDrive_setThrottleParams" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->setThrottleParams(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_getActionGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArActionGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeDrive_getActionGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_getActionGroup" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  result = (ArActionGroup *)(arg1)->getActionGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArActionGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_setSafeDriving(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeDrive_setSafeDriving",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_setSafeDriving" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeDrive_setSafeDriving" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setSafeDriving(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_getSafeDriving(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeDrive_getSafeDriving",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_getSafeDriving" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  result = (bool)(arg1)->getSafeDriving();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeDrive_setExtraUnsafeAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeDrive *arg1 = (ArServerModeDrive *) 0 ;
  ArAction *arg2 = (ArAction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeDrive_setExtraUnsafeAction",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeDrive_setExtraUnsafeAction" "', argument " "1"" of type '" "ArServerModeDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeDrive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArAction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeDrive_setExtraUnsafeAction" "', argument " "2"" of type '" "ArAction *""'"); 
  }
  arg2 = reinterpret_cast< ArAction * >(argp2);
  (arg1)->setExtraUnsafeAction(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerModeDrive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerModeDrive, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerModeIdle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerModeIdle *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerModeIdle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeIdle" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeIdle" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerModeIdle *)new ArServerModeIdle(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeIdle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerModeIdle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerModeIdle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerModeIdle" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_activate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeIdle_activate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_activate" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  (arg1)->activate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_deactivate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeIdle_deactivate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_deactivate" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  (arg1)->deactivate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_userTask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeIdle_userTask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_userTask" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  (arg1)->userTask();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_setModeInterrupted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  ArServerMode *arg2 = (ArServerMode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeIdle_setModeInterrupted",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_setModeInterrupted" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerMode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeIdle_setModeInterrupted" "', argument " "2"" of type '" "ArServerMode *""'"); 
  }
  arg2 = reinterpret_cast< ArServerMode * >(argp2);
  (arg1)->setModeInterrupted(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_getModeInterrupted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerMode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeIdle_getModeInterrupted",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_getModeInterrupted" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  result = (ArServerMode *)(arg1)->getModeInterrupted();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerMode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_getActionGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArActionGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeIdle_getActionGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_getActionGroup" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  result = (ArActionGroup *)(arg1)->getActionGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArActionGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_addToConfig__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeIdle_addToConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_addToConfig" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeIdle_addToConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerModeIdle_addToConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->addToConfig(arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_addToConfig__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeIdle_addToConfig",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_addToConfig" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeIdle_addToConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  (arg1)->addToConfig(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_addToConfig(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeIdle, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerModeIdle_addToConfig__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeIdle, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArServerModeIdle_addToConfig__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeIdle_addToConfig'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeIdle::addToConfig(ArConfig *,char const *)\n"
    "    ArServerModeIdle::addToConfig(ArConfig *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_setUseLocationDependentDevices__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  bool arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeIdle_setUseLocationDependentDevices",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_setUseLocationDependentDevices" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeIdle_setUseLocationDependentDevices" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeIdle_setUseLocationDependentDevices" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->setUseLocationDependentDevices(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_setUseLocationDependentDevices__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeIdle_setUseLocationDependentDevices",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_setUseLocationDependentDevices" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeIdle_setUseLocationDependentDevices" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setUseLocationDependentDevices(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_setUseLocationDependentDevices(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeIdle, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerModeIdle_setUseLocationDependentDevices__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeIdle, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerModeIdle_setUseLocationDependentDevices__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeIdle_setUseLocationDependentDevices'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeIdle::setUseLocationDependentDevices(bool,bool)\n"
    "    ArServerModeIdle::setUseLocationDependentDevices(bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeIdle_getUseLocationDependentDevices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeIdle *arg1 = (ArServerModeIdle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeIdle_getUseLocationDependentDevices",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeIdle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeIdle_getUseLocationDependentDevices" "', argument " "1"" of type '" "ArServerModeIdle *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeIdle * >(argp1);
  result = (bool)(arg1)->getUseLocationDependentDevices();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerModeIdle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerModeIdle, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerModeRatioDrive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  char *arg7 = (char *) 0 ;
  bool arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  ArServerModeRatioDrive *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_ArServerModeRatioDrive",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeRatioDrive" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeRatioDrive" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerModeRatioDrive" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerModeRatioDrive" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ArServerModeRatioDrive" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerModeRatioDrive" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerModeRatioDrive" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_ArServerModeRatioDrive" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  result = (ArServerModeRatioDrive *)new ArServerModeRatioDrive(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeRatioDrive, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeRatioDrive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  char *arg7 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  ArServerModeRatioDrive *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_ArServerModeRatioDrive",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeRatioDrive" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeRatioDrive" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerModeRatioDrive" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerModeRatioDrive" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ArServerModeRatioDrive" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerModeRatioDrive" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_ArServerModeRatioDrive" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  result = (ArServerModeRatioDrive *)new ArServerModeRatioDrive(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeRatioDrive, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeRatioDrive__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  ArServerModeRatioDrive *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_ArServerModeRatioDrive",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeRatioDrive" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeRatioDrive" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerModeRatioDrive" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerModeRatioDrive" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ArServerModeRatioDrive" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ArServerModeRatioDrive" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (ArServerModeRatioDrive *)new ArServerModeRatioDrive(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeRatioDrive, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeRatioDrive__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  ArServerModeRatioDrive *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_ArServerModeRatioDrive",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeRatioDrive" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeRatioDrive" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerModeRatioDrive" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerModeRatioDrive" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ArServerModeRatioDrive" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (ArServerModeRatioDrive *)new ArServerModeRatioDrive(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeRatioDrive, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeRatioDrive__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ArServerModeRatioDrive *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_ArServerModeRatioDrive",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeRatioDrive" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeRatioDrive" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerModeRatioDrive" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ArServerModeRatioDrive" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (ArServerModeRatioDrive *)new ArServerModeRatioDrive(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeRatioDrive, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeRatioDrive__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerModeRatioDrive *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerModeRatioDrive",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeRatioDrive" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeRatioDrive" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerModeRatioDrive" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (ArServerModeRatioDrive *)new ArServerModeRatioDrive(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeRatioDrive, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeRatioDrive__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerModeRatioDrive *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerModeRatioDrive",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeRatioDrive" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeRatioDrive" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerModeRatioDrive *)new ArServerModeRatioDrive(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeRatioDrive, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeRatioDrive(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[9] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerModeRatioDrive__SWIG_6(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ArServerModeRatioDrive__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_ArServerModeRatioDrive__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_ArServerModeRatioDrive__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_ArServerModeRatioDrive__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_new_ArServerModeRatioDrive__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_bool(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_ArServerModeRatioDrive__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerModeRatioDrive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeRatioDrive::ArServerModeRatioDrive(ArServerBase *,ArRobot *,bool,bool,bool,bool,char const *,bool)\n"
    "    ArServerModeRatioDrive::ArServerModeRatioDrive(ArServerBase *,ArRobot *,bool,bool,bool,bool,char const *)\n"
    "    ArServerModeRatioDrive::ArServerModeRatioDrive(ArServerBase *,ArRobot *,bool,bool,bool,bool)\n"
    "    ArServerModeRatioDrive::ArServerModeRatioDrive(ArServerBase *,ArRobot *,bool,bool,bool)\n"
    "    ArServerModeRatioDrive::ArServerModeRatioDrive(ArServerBase *,ArRobot *,bool,bool)\n"
    "    ArServerModeRatioDrive::ArServerModeRatioDrive(ArServerBase *,ArRobot *,bool)\n"
    "    ArServerModeRatioDrive::ArServerModeRatioDrive(ArServerBase *,ArRobot *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerModeRatioDrive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerModeRatioDrive",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerModeRatioDrive" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_activate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeRatioDrive_activate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_activate" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  (arg1)->activate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_deactivate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeRatioDrive_deactivate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_deactivate" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  (arg1)->deactivate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addControlCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArServerHandlerCommands *arg2 = (ArServerHandlerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeRatioDrive_addControlCommands",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_addControlCommands" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeRatioDrive_addControlCommands" "', argument " "2"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg2 = reinterpret_cast< ArServerHandlerCommands * >(argp2);
  (arg1)->addControlCommands(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_ratioDrive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  double arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArServerModeRatioDrive_ratioDrive",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  (arg1)->ratioDrive(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_ratioDrive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerModeRatioDrive_ratioDrive",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->ratioDrive(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_ratioDrive__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerModeRatioDrive_ratioDrive",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerModeRatioDrive_ratioDrive" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  (arg1)->ratioDrive(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_ratioDrive(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArServerModeRatioDrive_ratioDrive__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ArServerModeRatioDrive_ratioDrive__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_ArServerModeRatioDrive_ratioDrive__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeRatioDrive_ratioDrive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeRatioDrive::ratioDrive(double,double,double,bool,double)\n"
    "    ArServerModeRatioDrive::ratioDrive(double,double,double,bool)\n"
    "    ArServerModeRatioDrive::ratioDrive(double,double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addToConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeRatioDrive_addToConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_addToConfig" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeRatioDrive_addToConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerModeRatioDrive_addToConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->addToConfig(arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_userTask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeRatioDrive_userTask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_userTask" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  (arg1)->userTask();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_getActionGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArActionGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeRatioDrive_getActionGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_getActionGroup" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  result = (ArActionGroup *)(arg1)->getActionGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArActionGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_getActionRatioInput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArActionRatioInput *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeRatioDrive_getActionRatioInput",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_getActionRatioInput" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  result = (ArActionRatioInput *)(arg1)->getActionRatioInput();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArActionRatioInput, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_setSafeDriving__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  bool arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeRatioDrive_setSafeDriving",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_setSafeDriving" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeRatioDrive_setSafeDriving" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeRatioDrive_setSafeDriving" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->setSafeDriving(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_setSafeDriving__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeRatioDrive_setSafeDriving",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_setSafeDriving" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeRatioDrive_setSafeDriving" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setSafeDriving(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_setSafeDriving(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerModeRatioDrive_setSafeDriving__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerModeRatioDrive_setSafeDriving__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeRatioDrive_setSafeDriving'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeRatioDrive::setSafeDriving(bool,bool)\n"
    "    ArServerModeRatioDrive::setSafeDriving(bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_getSafeDriving(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeRatioDrive_getSafeDriving",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_getSafeDriving" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  result = (bool)(arg1)->getSafeDriving();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_setUseLocationDependentDevices__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  bool arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeRatioDrive_setUseLocationDependentDevices",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_setUseLocationDependentDevices" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeRatioDrive_setUseLocationDependentDevices" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeRatioDrive_setUseLocationDependentDevices" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->setUseLocationDependentDevices(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_setUseLocationDependentDevices__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeRatioDrive_setUseLocationDependentDevices",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_setUseLocationDependentDevices" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeRatioDrive_setUseLocationDependentDevices" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setUseLocationDependentDevices(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_setUseLocationDependentDevices(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerModeRatioDrive_setUseLocationDependentDevices__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerModeRatioDrive_setUseLocationDependentDevices__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeRatioDrive_setUseLocationDependentDevices'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeRatioDrive::setUseLocationDependentDevices(bool,bool)\n"
    "    ArServerModeRatioDrive::setUseLocationDependentDevices(bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_getUseLocationDependentDevices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeRatioDrive_getUseLocationDependentDevices",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_getUseLocationDependentDevices" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  result = (bool)(arg1)->getUseLocationDependentDevices();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addSafeDrivingCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeRatioDrive_addSafeDrivingCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_addSafeDrivingCallback" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeRatioDrive_addSafeDrivingCallback" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addSafeDrivingCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addSafeDrivingCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeRatioDrive_addSafeDrivingCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_addSafeDrivingCallback" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addSafeDrivingCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addSafeDrivingCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerModeRatioDrive_addSafeDrivingCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerModeRatioDrive_addSafeDrivingCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeRatioDrive_addSafeDrivingCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeRatioDrive::addSafeDrivingCallback(ArFunctor *,int)\n"
    "    ArServerModeRatioDrive::addSafeDrivingCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_remSafeDrivingCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeRatioDrive_remSafeDrivingCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_remSafeDrivingCallback" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remSafeDrivingCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addUnsafeDrivingCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeRatioDrive_addUnsafeDrivingCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_addUnsafeDrivingCallback" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeRatioDrive_addUnsafeDrivingCallback" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addUnsafeDrivingCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addUnsafeDrivingCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeRatioDrive_addUnsafeDrivingCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_addUnsafeDrivingCallback" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addUnsafeDrivingCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addUnsafeDrivingCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerModeRatioDrive_addUnsafeDrivingCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerModeRatioDrive_addUnsafeDrivingCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeRatioDrive_addUnsafeDrivingCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeRatioDrive::addUnsafeDrivingCallback(ArFunctor *,int)\n"
    "    ArServerModeRatioDrive::addUnsafeDrivingCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_remUnsafeDrivingCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeRatioDrive_remUnsafeDrivingCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_remUnsafeDrivingCallback" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remUnsafeDrivingCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addDrivingBackwardsCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeRatioDrive_addDrivingBackwardsCallback",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_addDrivingBackwardsCallback" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeRatioDrive_addDrivingBackwardsCallback" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addDrivingBackwardsCallback(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addDrivingBackwardsCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeRatioDrive_addDrivingBackwardsCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_addDrivingBackwardsCallback" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->addDrivingBackwardsCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_addDrivingBackwardsCallback(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ArServerModeRatioDrive_addDrivingBackwardsCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeRatioDrive, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyCallable_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerModeRatioDrive_addDrivingBackwardsCallback__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeRatioDrive_addDrivingBackwardsCallback'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeRatioDrive::addDrivingBackwardsCallback(ArFunctor *,int)\n"
    "    ArServerModeRatioDrive::addDrivingBackwardsCallback(ArFunctor *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeRatioDrive_remDrivingBackwardsCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeRatioDrive *arg1 = (ArServerModeRatioDrive *) 0 ;
  ArFunctor *arg2 = (ArFunctor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeRatioDrive_remDrivingBackwardsCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeRatioDrive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeRatioDrive_remDrivingBackwardsCallback" "', argument " "1"" of type '" "ArServerModeRatioDrive *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeRatioDrive * >(argp1);
  {
    arg2 = new ArPyFunctor(obj1); /* XXX Memory leak. How to free? */
  }
  (arg1)->remDrivingBackwardsCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerModeRatioDrive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerModeRatioDrive, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerModeStop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerModeStop *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerModeStop",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeStop" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeStop" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerModeStop" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (ArServerModeStop *)new ArServerModeStop(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeStop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeStop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerModeStop *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerModeStop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeStop" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeStop" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerModeStop *)new ArServerModeStop(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeStop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerModeStop(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerModeStop__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ArServerModeStop__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerModeStop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeStop::ArServerModeStop(ArServerBase *,ArRobot *,bool)\n"
    "    ArServerModeStop::ArServerModeStop(ArServerBase *,ArRobot *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerModeStop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerModeStop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerModeStop" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_activate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeStop_activate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_activate" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  (arg1)->activate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_deactivate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeStop_deactivate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_deactivate" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  (arg1)->deactivate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeStop_stop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_stop" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  (arg1)->stop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_netStop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeStop_netStop",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_netStop" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeStop_netStop" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerModeStop_netStop" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->netStop(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_userTask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeStop_userTask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_userTask" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  (arg1)->userTask();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_checkDefault(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeStop_checkDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_checkDefault" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  (arg1)->checkDefault();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_getActionGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArActionGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeStop_getActionGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_getActionGroup" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  result = (ArActionGroup *)(arg1)->getActionGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArActionGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_addToConfig__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeStop_addToConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_addToConfig" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeStop_addToConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerModeStop_addToConfig" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->addToConfig(arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_addToConfig__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  ArConfig *arg2 = (ArConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeStop_addToConfig",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_addToConfig" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeStop_addToConfig" "', argument " "2"" of type '" "ArConfig *""'"); 
  }
  arg2 = reinterpret_cast< ArConfig * >(argp2);
  (arg1)->addToConfig(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_addToConfig(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeStop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerModeStop_addToConfig__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeStop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArServerModeStop_addToConfig__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeStop_addToConfig'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeStop::addToConfig(ArConfig *,char const *)\n"
    "    ArServerModeStop::addToConfig(ArConfig *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_setUseLocationDependentDevices__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  bool arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeStop_setUseLocationDependentDevices",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_setUseLocationDependentDevices" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeStop_setUseLocationDependentDevices" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArServerModeStop_setUseLocationDependentDevices" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->setUseLocationDependentDevices(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_setUseLocationDependentDevices__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerModeStop_setUseLocationDependentDevices",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_setUseLocationDependentDevices" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerModeStop_setUseLocationDependentDevices" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setUseLocationDependentDevices(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_setUseLocationDependentDevices(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeStop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArServerModeStop_setUseLocationDependentDevices__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerModeStop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ArServerModeStop_setUseLocationDependentDevices__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerModeStop_setUseLocationDependentDevices'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerModeStop::setUseLocationDependentDevices(bool,bool)\n"
    "    ArServerModeStop::setUseLocationDependentDevices(bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerModeStop_getUseLocationDependentDevices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeStop *arg1 = (ArServerModeStop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeStop_getUseLocationDependentDevices",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeStop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeStop_getUseLocationDependentDevices" "', argument " "1"" of type '" "ArServerModeStop *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeStop * >(argp1);
  result = (bool)(arg1)->getUseLocationDependentDevices();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerModeStop_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerModeStop, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerModeWander(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerBase *arg1 = (ArServerBase *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerModeWander *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerModeWander",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerModeWander" "', argument " "1"" of type '" "ArServerBase *""'"); 
  }
  arg1 = reinterpret_cast< ArServerBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerModeWander" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerModeWander *)new ArServerModeWander(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerModeWander, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerModeWander(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeWander *arg1 = (ArServerModeWander *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerModeWander",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeWander, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerModeWander" "', argument " "1"" of type '" "ArServerModeWander *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeWander * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeWander_activate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeWander *arg1 = (ArServerModeWander *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeWander_activate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeWander, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeWander_activate" "', argument " "1"" of type '" "ArServerModeWander *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeWander * >(argp1);
  (arg1)->activate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeWander_deactivate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeWander *arg1 = (ArServerModeWander *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeWander_deactivate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeWander, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeWander_deactivate" "', argument " "1"" of type '" "ArServerModeWander *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeWander * >(argp1);
  (arg1)->deactivate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeWander_wander(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeWander *arg1 = (ArServerModeWander *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeWander_wander",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeWander, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeWander_wander" "', argument " "1"" of type '" "ArServerModeWander *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeWander * >(argp1);
  (arg1)->wander();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeWander_netWander(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeWander *arg1 = (ArServerModeWander *) 0 ;
  ArServerClient *arg2 = (ArServerClient *) 0 ;
  ArNetPacket *arg3 = (ArNetPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerModeWander_netWander",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeWander, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeWander_netWander" "', argument " "1"" of type '" "ArServerModeWander *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeWander * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerModeWander_netWander" "', argument " "2"" of type '" "ArServerClient *""'"); 
  }
  arg2 = reinterpret_cast< ArServerClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArNetPacket, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerModeWander_netWander" "', argument " "3"" of type '" "ArNetPacket *""'"); 
  }
  arg3 = reinterpret_cast< ArNetPacket * >(argp3);
  (arg1)->netWander(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeWander_userTask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeWander *arg1 = (ArServerModeWander *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeWander_userTask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeWander, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeWander_userTask" "', argument " "1"" of type '" "ArServerModeWander *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeWander * >(argp1);
  (arg1)->userTask();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeWander_checkDefault(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeWander *arg1 = (ArServerModeWander *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeWander_checkDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeWander, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeWander_checkDefault" "', argument " "1"" of type '" "ArServerModeWander *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeWander * >(argp1);
  (arg1)->checkDefault();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerModeWander_getActionGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerModeWander *arg1 = (ArServerModeWander *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArActionGroup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerModeWander_getActionGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerModeWander, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerModeWander_getActionGroup" "', argument " "1"" of type '" "ArServerModeWander *""'"); 
  }
  arg1 = reinterpret_cast< ArServerModeWander * >(argp1);
  result = (ArActionGroup *)(arg1)->getActionGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArActionGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerModeWander_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerModeWander, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerSimpleComUC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerSimpleComUC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerSimpleComUC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleComUC" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleComUC" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerSimpleComUC *)new ArServerSimpleComUC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleComUC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerSimpleComUC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComUC *arg1 = (ArServerSimpleComUC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerSimpleComUC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComUC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerSimpleComUC" "', argument " "1"" of type '" "ArServerSimpleComUC *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComUC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComUC_command(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComUC *arg1 = (ArServerSimpleComUC *) 0 ;
  ArArgumentBuilder *arg2 = (ArArgumentBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimpleComUC_command",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComUC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComUC_command" "', argument " "1"" of type '" "ArServerSimpleComUC *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComUC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArArgumentBuilder, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleComUC_command" "', argument " "2"" of type '" "ArArgumentBuilder *""'"); 
  }
  arg2 = reinterpret_cast< ArArgumentBuilder * >(argp2);
  (arg1)->command(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComUC_motionCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComUC *arg1 = (ArServerSimpleComUC *) 0 ;
  ArArgumentBuilder *arg2 = (ArArgumentBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimpleComUC_motionCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComUC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComUC_motionCommand" "', argument " "1"" of type '" "ArServerSimpleComUC *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComUC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArArgumentBuilder, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleComUC_motionCommand" "', argument " "2"" of type '" "ArArgumentBuilder *""'"); 
  }
  arg2 = reinterpret_cast< ArArgumentBuilder * >(argp2);
  (arg1)->motionCommand(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerSimpleComUC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerSimpleComUC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerSimpleComMovementLogging__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArServerHandlerPopup *arg3 = (ArServerHandlerPopup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerSimpleComMovementLogging *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerSimpleComMovementLogging",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleComMovementLogging" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleComMovementLogging" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArServerHandlerPopup, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerSimpleComMovementLogging" "', argument " "3"" of type '" "ArServerHandlerPopup *""'"); 
  }
  arg3 = reinterpret_cast< ArServerHandlerPopup * >(argp3);
  result = (ArServerSimpleComMovementLogging *)new ArServerSimpleComMovementLogging(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleComMovementLogging, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleComMovementLogging__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerSimpleComMovementLogging *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerSimpleComMovementLogging",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleComMovementLogging" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleComMovementLogging" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerSimpleComMovementLogging *)new ArServerSimpleComMovementLogging(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleComMovementLogging, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleComMovementLogging(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerSimpleComMovementLogging__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArServerHandlerPopup, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_ArServerSimpleComMovementLogging__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerSimpleComMovementLogging'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerSimpleComMovementLogging::ArServerSimpleComMovementLogging(ArServerHandlerCommands *,ArRobot *,ArServerHandlerPopup *)\n"
    "    ArServerSimpleComMovementLogging::ArServerSimpleComMovementLogging(ArServerHandlerCommands *,ArRobot *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerSimpleComMovementLogging(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerSimpleComMovementLogging",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerSimpleComMovementLogging" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_logMovementSentEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_logMovementSentEnable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_logMovementSentEnable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->logMovementSentEnable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_logMovementSentDisable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_logMovementSentDisable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_logMovementSentDisable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->logMovementSentDisable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_logMovementReceivedEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_logMovementReceivedEnable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_logMovementReceivedEnable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->logMovementReceivedEnable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_logMovementReceivedDisable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_logMovementReceivedDisable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_logMovementReceivedDisable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->logMovementReceivedDisable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_logVelocitiesReceivedEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_logVelocitiesReceivedEnable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_logVelocitiesReceivedEnable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->logVelocitiesReceivedEnable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_logVelocitiesReceivedDisable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_logVelocitiesReceivedDisable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_logVelocitiesReceivedDisable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->logVelocitiesReceivedDisable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_packetsReceivedTrackingEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_packetsReceivedTrackingEnable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_packetsReceivedTrackingEnable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->packetsReceivedTrackingEnable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_packetsReceivedTrackingDisable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_packetsReceivedTrackingDisable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_packetsReceivedTrackingDisable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->packetsReceivedTrackingDisable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_packetsSentTrackingEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_packetsSentTrackingEnable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_packetsSentTrackingEnable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->packetsSentTrackingEnable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_packetsSentTrackingDisable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_packetsSentTrackingDisable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_packetsSentTrackingDisable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->packetsSentTrackingDisable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_logActionsEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_logActionsEnable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_logActionsEnable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->logActionsEnable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_logActionsDisable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_logActionsDisable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_logActionsDisable" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->logActionsDisable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_logActions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_logActions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_logActions" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->logActions();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_popupMovementParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_popupMovementParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_popupMovementParams" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->popupMovementParams();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComMovementLogging_resetOdometer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComMovementLogging *arg1 = (ArServerSimpleComMovementLogging *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComMovementLogging_resetOdometer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComMovementLogging, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComMovementLogging_resetOdometer" "', argument " "1"" of type '" "ArServerSimpleComMovementLogging *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComMovementLogging * >(argp1);
  (arg1)->resetOdometer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerSimpleComMovementLogging_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerSimpleComMovementLogging, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerSimpleComGyro(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArAnalogGyro *arg3 = (ArAnalogGyro *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerSimpleComGyro *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerSimpleComGyro",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleComGyro" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleComGyro" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArAnalogGyro, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerSimpleComGyro" "', argument " "3"" of type '" "ArAnalogGyro *""'"); 
  }
  arg3 = reinterpret_cast< ArAnalogGyro * >(argp3);
  result = (ArServerSimpleComGyro *)new ArServerSimpleComGyro(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleComGyro, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerSimpleComGyro(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComGyro *arg1 = (ArServerSimpleComGyro *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerSimpleComGyro",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComGyro, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerSimpleComGyro" "', argument " "1"" of type '" "ArServerSimpleComGyro *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComGyro * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComGyro_gyroEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComGyro *arg1 = (ArServerSimpleComGyro *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComGyro_gyroEnable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComGyro, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComGyro_gyroEnable" "', argument " "1"" of type '" "ArServerSimpleComGyro *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComGyro * >(argp1);
  (arg1)->gyroEnable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComGyro_gyroDisable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComGyro *arg1 = (ArServerSimpleComGyro *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComGyro_gyroDisable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComGyro, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComGyro_gyroDisable" "', argument " "1"" of type '" "ArServerSimpleComGyro *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComGyro * >(argp1);
  (arg1)->gyroDisable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerSimpleComGyro_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerSimpleComGyro, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerSimpleComLogRobotConfig__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  ArServerHandlerPopup *arg3 = (ArServerHandlerPopup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerSimpleComLogRobotConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerSimpleComLogRobotConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleComLogRobotConfig" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleComLogRobotConfig" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ArServerHandlerPopup, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerSimpleComLogRobotConfig" "', argument " "3"" of type '" "ArServerHandlerPopup *""'"); 
  }
  arg3 = reinterpret_cast< ArServerHandlerPopup * >(argp3);
  result = (ArServerSimpleComLogRobotConfig *)new ArServerSimpleComLogRobotConfig(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleComLogRobotConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleComLogRobotConfig__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerSimpleComLogRobotConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerSimpleComLogRobotConfig",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleComLogRobotConfig" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleComLogRobotConfig" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerSimpleComLogRobotConfig *)new ArServerSimpleComLogRobotConfig(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleComLogRobotConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleComLogRobotConfig(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerSimpleComLogRobotConfig__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ArServerHandlerPopup, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_ArServerSimpleComLogRobotConfig__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerSimpleComLogRobotConfig'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerSimpleComLogRobotConfig::ArServerSimpleComLogRobotConfig(ArServerHandlerCommands *,ArRobot *,ArServerHandlerPopup *)\n"
    "    ArServerSimpleComLogRobotConfig::ArServerSimpleComLogRobotConfig(ArServerHandlerCommands *,ArRobot *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComLogRobotConfig_logConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComLogRobotConfig *arg1 = (ArServerSimpleComLogRobotConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComLogRobotConfig_logConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComLogRobotConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComLogRobotConfig_logConfig" "', argument " "1"" of type '" "ArServerSimpleComLogRobotConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComLogRobotConfig * >(argp1);
  (arg1)->logConfig();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComLogRobotConfig_logMovementConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComLogRobotConfig *arg1 = (ArServerSimpleComLogRobotConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComLogRobotConfig_logMovementConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComLogRobotConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComLogRobotConfig_logMovementConfig" "', argument " "1"" of type '" "ArServerSimpleComLogRobotConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComLogRobotConfig * >(argp1);
  (arg1)->logMovementConfig();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComLogRobotConfig_logOrigConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComLogRobotConfig *arg1 = (ArServerSimpleComLogRobotConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComLogRobotConfig_logOrigConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComLogRobotConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComLogRobotConfig_logOrigConfig" "', argument " "1"" of type '" "ArServerSimpleComLogRobotConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComLogRobotConfig * >(argp1);
  (arg1)->logOrigConfig();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComLogRobotConfig_popupConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComLogRobotConfig *arg1 = (ArServerSimpleComLogRobotConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComLogRobotConfig_popupConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComLogRobotConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComLogRobotConfig_popupConfig" "', argument " "1"" of type '" "ArServerSimpleComLogRobotConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComLogRobotConfig * >(argp1);
  (arg1)->popupConfig();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComLogRobotConfig_popupOrigConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComLogRobotConfig *arg1 = (ArServerSimpleComLogRobotConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComLogRobotConfig_popupOrigConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComLogRobotConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComLogRobotConfig_popupOrigConfig" "', argument " "1"" of type '" "ArServerSimpleComLogRobotConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComLogRobotConfig * >(argp1);
  (arg1)->popupOrigConfig();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComLogRobotConfig_popupMovementConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComLogRobotConfig *arg1 = (ArServerSimpleComLogRobotConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComLogRobotConfig_popupMovementConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComLogRobotConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComLogRobotConfig_popupMovementConfig" "', argument " "1"" of type '" "ArServerSimpleComLogRobotConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComLogRobotConfig * >(argp1);
  (arg1)->popupMovementConfig();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerSimpleComLogRobotConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComLogRobotConfig *arg1 = (ArServerSimpleComLogRobotConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerSimpleComLogRobotConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComLogRobotConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerSimpleComLogRobotConfig" "', argument " "1"" of type '" "ArServerSimpleComLogRobotConfig *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComLogRobotConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerSimpleComLogRobotConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerSimpleComLogRobotConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerSimpleComLogActions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerSimpleComLogActions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerSimpleComLogActions",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleComLogActions" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleComLogActions" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerSimpleComLogActions *)new ArServerSimpleComLogActions(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleComLogActions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleComLogActions_logActions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComLogActions *arg1 = (ArServerSimpleComLogActions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleComLogActions_logActions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComLogActions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleComLogActions_logActions" "', argument " "1"" of type '" "ArServerSimpleComLogActions *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComLogActions * >(argp1);
  (arg1)->logActions();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerSimpleComLogActions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleComLogActions *arg1 = (ArServerSimpleComLogActions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerSimpleComLogActions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleComLogActions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerSimpleComLogActions" "', argument " "1"" of type '" "ArServerSimpleComLogActions *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleComLogActions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerSimpleComLogActions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerSimpleComLogActions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerSimpleServerCommands__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArServerBase *arg2 = (ArServerBase *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerSimpleServerCommands *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerSimpleServerCommands",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleServerCommands" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleServerCommands" "', argument " "2"" of type '" "ArServerBase *""'"); 
  }
  arg2 = reinterpret_cast< ArServerBase * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerSimpleServerCommands" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (ArServerSimpleServerCommands *)new ArServerSimpleServerCommands(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleServerCommands, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleServerCommands__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArServerBase *arg2 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerSimpleServerCommands *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerSimpleServerCommands",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleServerCommands" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleServerCommands" "', argument " "2"" of type '" "ArServerBase *""'"); 
  }
  arg2 = reinterpret_cast< ArServerBase * >(argp2);
  result = (ArServerSimpleServerCommands *)new ArServerSimpleServerCommands(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleServerCommands, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleServerCommands(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArServerBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerSimpleServerCommands__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArServerBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ArServerSimpleServerCommands__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerSimpleServerCommands'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerSimpleServerCommands::ArServerSimpleServerCommands(ArServerHandlerCommands *,ArServerBase *,bool)\n"
    "    ArServerSimpleServerCommands::ArServerSimpleServerCommands(ArServerHandlerCommands *,ArServerBase *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerSimpleServerCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleServerCommands *arg1 = (ArServerSimpleServerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerSimpleServerCommands",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleServerCommands, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerSimpleServerCommands" "', argument " "1"" of type '" "ArServerSimpleServerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleServerCommands * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleServerCommands_logTerseTracking(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleServerCommands *arg1 = (ArServerSimpleServerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleServerCommands_logTerseTracking",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleServerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleServerCommands_logTerseTracking" "', argument " "1"" of type '" "ArServerSimpleServerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleServerCommands * >(argp1);
  (arg1)->logTerseTracking();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleServerCommands_logVerboseTracking(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleServerCommands *arg1 = (ArServerSimpleServerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleServerCommands_logVerboseTracking",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleServerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleServerCommands_logVerboseTracking" "', argument " "1"" of type '" "ArServerSimpleServerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleServerCommands * >(argp1);
  (arg1)->logVerboseTracking();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleServerCommands_resetTracking(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleServerCommands *arg1 = (ArServerSimpleServerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleServerCommands_resetTracking",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleServerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleServerCommands_resetTracking" "', argument " "1"" of type '" "ArServerSimpleServerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleServerCommands * >(argp1);
  (arg1)->resetTracking();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleServerCommands_logConnections(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleServerCommands *arg1 = (ArServerSimpleServerCommands *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleServerCommands_logConnections",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleServerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleServerCommands_logConnections" "', argument " "1"" of type '" "ArServerSimpleServerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleServerCommands * >(argp1);
  (arg1)->logConnections();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerSimpleServerCommands_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerSimpleServerCommands, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerSimplePopup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArServerHandlerPopup *arg2 = (ArServerHandlerPopup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerSimplePopup *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerSimplePopup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimplePopup" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerHandlerPopup, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimplePopup" "', argument " "2"" of type '" "ArServerHandlerPopup *""'"); 
  }
  arg2 = reinterpret_cast< ArServerHandlerPopup * >(argp2);
  result = (ArServerSimplePopup *)new ArServerSimplePopup(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimplePopup, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerSimplePopup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimplePopup *arg1 = (ArServerSimplePopup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerSimplePopup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimplePopup, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerSimplePopup" "', argument " "1"" of type '" "ArServerSimplePopup *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimplePopup * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimplePopup_simplePopup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimplePopup *arg1 = (ArServerSimplePopup *) 0 ;
  ArArgumentBuilder *arg2 = (ArArgumentBuilder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimplePopup_simplePopup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimplePopup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimplePopup_simplePopup" "', argument " "1"" of type '" "ArServerSimplePopup *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimplePopup * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArArgumentBuilder, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimplePopup_simplePopup" "', argument " "2"" of type '" "ArArgumentBuilder *""'"); 
  }
  arg2 = reinterpret_cast< ArArgumentBuilder * >(argp2);
  (arg1)->simplePopup(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerSimplePopup_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerSimplePopup, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerSimpleLogRobotDebugPackets__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerSimpleLogRobotDebugPackets *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerSimpleLogRobotDebugPackets",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleLogRobotDebugPackets" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleLogRobotDebugPackets" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ArServerSimpleLogRobotDebugPackets" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (ArServerSimpleLogRobotDebugPackets *)new ArServerSimpleLogRobotDebugPackets(arg1,arg2,(char const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, SWIG_POINTER_NEW |  0 );
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleLogRobotDebugPackets__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerSimpleLogRobotDebugPackets *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerSimpleLogRobotDebugPackets",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleLogRobotDebugPackets" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleLogRobotDebugPackets" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerSimpleLogRobotDebugPackets *)new ArServerSimpleLogRobotDebugPackets(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleLogRobotDebugPackets(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerSimpleLogRobotDebugPackets__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerHandlerCommands, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArRobot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_ArServerSimpleLogRobotDebugPackets__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerSimpleLogRobotDebugPackets'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerSimpleLogRobotDebugPackets::ArServerSimpleLogRobotDebugPackets(ArServerHandlerCommands *,ArRobot *,char const *)\n"
    "    ArServerSimpleLogRobotDebugPackets::ArServerSimpleLogRobotDebugPackets(ArServerHandlerCommands *,ArRobot *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerSimpleLogRobotDebugPackets(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleLogRobotDebugPackets *arg1 = (ArServerSimpleLogRobotDebugPackets *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerSimpleLogRobotDebugPackets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerSimpleLogRobotDebugPackets" "', argument " "1"" of type '" "ArServerSimpleLogRobotDebugPackets *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleLogRobotDebugPackets * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleLogRobotDebugPackets_startLogging__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleLogRobotDebugPackets *arg1 = (ArServerSimpleLogRobotDebugPackets *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimpleLogRobotDebugPackets_startLogging",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleLogRobotDebugPackets_startLogging" "', argument " "1"" of type '" "ArServerSimpleLogRobotDebugPackets *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleLogRobotDebugPackets * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleLogRobotDebugPackets_startLogging" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->startLogging((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleLogRobotDebugPackets_startLogging__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleLogRobotDebugPackets *arg1 = (ArServerSimpleLogRobotDebugPackets *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleLogRobotDebugPackets_startLogging",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleLogRobotDebugPackets_startLogging" "', argument " "1"" of type '" "ArServerSimpleLogRobotDebugPackets *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleLogRobotDebugPackets * >(argp1);
  result = (bool)(arg1)->startLogging();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleLogRobotDebugPackets_startLogging(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArServerSimpleLogRobotDebugPackets_startLogging__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerSimpleLogRobotDebugPackets_startLogging__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerSimpleLogRobotDebugPackets_startLogging'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerSimpleLogRobotDebugPackets::startLogging(char const *)\n"
    "    ArServerSimpleLogRobotDebugPackets::startLogging()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleLogRobotDebugPackets_stopLogging(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleLogRobotDebugPackets *arg1 = (ArServerSimpleLogRobotDebugPackets *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleLogRobotDebugPackets_stopLogging",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleLogRobotDebugPackets_stopLogging" "', argument " "1"" of type '" "ArServerSimpleLogRobotDebugPackets *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleLogRobotDebugPackets * >(argp1);
  result = (bool)(arg1)->stopLogging();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleLogRobotDebugPackets_packetHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleLogRobotDebugPackets *arg1 = (ArServerSimpleLogRobotDebugPackets *) 0 ;
  ArRobotPacket *arg2 = (ArRobotPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimpleLogRobotDebugPackets_packetHandler",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleLogRobotDebugPackets_packetHandler" "', argument " "1"" of type '" "ArServerSimpleLogRobotDebugPackets *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleLogRobotDebugPackets * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobotPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleLogRobotDebugPackets_packetHandler" "', argument " "2"" of type '" "ArRobotPacket *""'"); 
  }
  arg2 = reinterpret_cast< ArRobotPacket * >(argp2);
  result = (bool)(arg1)->packetHandler(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleLogRobotDebugPackets_addToInfoGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleLogRobotDebugPackets *arg1 = (ArServerSimpleLogRobotDebugPackets *) 0 ;
  ArStringInfoGroup *arg2 = (ArStringInfoGroup *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerSimpleLogRobotDebugPackets_addToInfoGroup",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleLogRobotDebugPackets_addToInfoGroup" "', argument " "1"" of type '" "ArServerSimpleLogRobotDebugPackets *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleLogRobotDebugPackets * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArStringInfoGroup, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleLogRobotDebugPackets_addToInfoGroup" "', argument " "2"" of type '" "ArStringInfoGroup *""'"); 
  }
  arg2 = reinterpret_cast< ArStringInfoGroup * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerSimpleLogRobotDebugPackets_addToInfoGroup" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerSimpleLogRobotDebugPackets_addToInfoGroup" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerSimpleLogRobotDebugPackets_addToInfoGroup" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  (arg1)->addToInfoGroup(arg2,(char const *)arg3,arg4,(char const *)arg5);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleLogRobotDebugPackets_addToInfoGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleLogRobotDebugPackets *arg1 = (ArServerSimpleLogRobotDebugPackets *) 0 ;
  ArStringInfoGroup *arg2 = (ArStringInfoGroup *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerSimpleLogRobotDebugPackets_addToInfoGroup",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleLogRobotDebugPackets_addToInfoGroup" "', argument " "1"" of type '" "ArServerSimpleLogRobotDebugPackets *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleLogRobotDebugPackets * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArStringInfoGroup, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleLogRobotDebugPackets_addToInfoGroup" "', argument " "2"" of type '" "ArStringInfoGroup *""'"); 
  }
  arg2 = reinterpret_cast< ArStringInfoGroup * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerSimpleLogRobotDebugPackets_addToInfoGroup" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerSimpleLogRobotDebugPackets_addToInfoGroup" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  (arg1)->addToInfoGroup(arg2,(char const *)arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleLogRobotDebugPackets_addToInfoGroup(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArStringInfoGroup, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArServerSimpleLogRobotDebugPackets_addToInfoGroup__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArStringInfoGroup, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_ArServerSimpleLogRobotDebugPackets_addToInfoGroup__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerSimpleLogRobotDebugPackets_addToInfoGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerSimpleLogRobotDebugPackets::addToInfoGroup(ArStringInfoGroup *,char const *,int,char const *)\n"
    "    ArServerSimpleLogRobotDebugPackets::addToInfoGroup(ArStringInfoGroup *,char const *,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleLogRobotDebugPackets_getNumValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleLogRobotDebugPackets *arg1 = (ArServerSimpleLogRobotDebugPackets *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleLogRobotDebugPackets_getNumValues",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleLogRobotDebugPackets_getNumValues" "', argument " "1"" of type '" "ArServerSimpleLogRobotDebugPackets *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleLogRobotDebugPackets * >(argp1);
  result = (int)(arg1)->getNumValues();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleLogRobotDebugPackets_getValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleLogRobotDebugPackets *arg1 = (ArServerSimpleLogRobotDebugPackets *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimpleLogRobotDebugPackets_getValue",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleLogRobotDebugPackets_getValue" "', argument " "1"" of type '" "ArServerSimpleLogRobotDebugPackets *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleLogRobotDebugPackets * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerSimpleLogRobotDebugPackets_getValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)(arg1)->getValue(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerSimpleLogRobotDebugPackets_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerSimpleLogRobotDebugPackets, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerSimpleConnectionTester(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerHandlerCommands *arg1 = (ArServerHandlerCommands *) 0 ;
  ArRobot *arg2 = (ArRobot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerSimpleConnectionTester *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerSimpleConnectionTester",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerHandlerCommands, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleConnectionTester" "', argument " "1"" of type '" "ArServerHandlerCommands *""'"); 
  }
  arg1 = reinterpret_cast< ArServerHandlerCommands * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArRobot, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleConnectionTester" "', argument " "2"" of type '" "ArRobot *""'"); 
  }
  arg2 = reinterpret_cast< ArRobot * >(argp2);
  result = (ArServerSimpleConnectionTester *)new ArServerSimpleConnectionTester(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleConnectionTester, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArServerSimpleConnectionTester(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleConnectionTester *arg1 = (ArServerSimpleConnectionTester *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerSimpleConnectionTester",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleConnectionTester, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerSimpleConnectionTester" "', argument " "1"" of type '" "ArServerSimpleConnectionTester *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleConnectionTester * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleConnectionTester_connectionTestStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleConnectionTester *arg1 = (ArServerSimpleConnectionTester *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleConnectionTester_connectionTestStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleConnectionTester, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleConnectionTester_connectionTestStart" "', argument " "1"" of type '" "ArServerSimpleConnectionTester *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleConnectionTester * >(argp1);
  (arg1)->connectionTestStart();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleConnectionTester_connectionTestStop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleConnectionTester *arg1 = (ArServerSimpleConnectionTester *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleConnectionTester_connectionTestStop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleConnectionTester, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleConnectionTester_connectionTestStop" "', argument " "1"" of type '" "ArServerSimpleConnectionTester *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleConnectionTester * >(argp1);
  (arg1)->connectionTestStop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerSimpleConnectionTester_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerSimpleConnectionTester, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerSimpleOpener__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArArgumentParser *arg1 = (ArArgumentParser *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ArServerSimpleOpener *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ArServerSimpleOpener",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArArgumentParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleOpener" "', argument " "1"" of type '" "ArArgumentParser *""'"); 
  }
  arg1 = reinterpret_cast< ArArgumentParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleOpener" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ArServerSimpleOpener" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (ArServerSimpleOpener *)new ArServerSimpleOpener(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleOpener, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleOpener__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArArgumentParser *arg1 = (ArArgumentParser *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ArServerSimpleOpener *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ArServerSimpleOpener",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArArgumentParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleOpener" "', argument " "1"" of type '" "ArArgumentParser *""'"); 
  }
  arg1 = reinterpret_cast< ArArgumentParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ArServerSimpleOpener" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (ArServerSimpleOpener *)new ArServerSimpleOpener(arg1,(char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleOpener, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleOpener__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArArgumentParser *arg1 = (ArArgumentParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerSimpleOpener *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArServerSimpleOpener",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArArgumentParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerSimpleOpener" "', argument " "1"" of type '" "ArArgumentParser *""'"); 
  }
  arg1 = reinterpret_cast< ArArgumentParser * >(argp1);
  result = (ArServerSimpleOpener *)new ArServerSimpleOpener(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerSimpleOpener, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerSimpleOpener(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArArgumentParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ArServerSimpleOpener__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArArgumentParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ArServerSimpleOpener__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArArgumentParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ArServerSimpleOpener__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerSimpleOpener'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerSimpleOpener::ArServerSimpleOpener(ArArgumentParser *,char const *,bool)\n"
    "    ArServerSimpleOpener::ArServerSimpleOpener(ArArgumentParser *,char const *)\n"
    "    ArServerSimpleOpener::ArServerSimpleOpener(ArArgumentParser *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerSimpleOpener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerSimpleOpener",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerSimpleOpener" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_open__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  ArServerBase *arg2 = (ArServerBase *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ArServerSimpleOpener_open",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_open" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleOpener_open" "', argument " "2"" of type '" "ArServerBase *""'"); 
  }
  arg2 = reinterpret_cast< ArServerBase * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerSimpleOpener_open" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArServerSimpleOpener_open" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (bool)(arg1)->open(arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_open__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  ArServerBase *arg2 = (ArServerBase *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArServerSimpleOpener_open",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_open" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleOpener_open" "', argument " "2"" of type '" "ArServerBase *""'"); 
  }
  arg2 = reinterpret_cast< ArServerBase * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerSimpleOpener_open" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->open(arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_open__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  ArServerBase *arg2 = (ArServerBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimpleOpener_open",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_open" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArServerBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleOpener_open" "', argument " "2"" of type '" "ArServerBase *""'"); 
  }
  arg2 = reinterpret_cast< ArServerBase * >(argp2);
  result = (bool)(arg1)->open(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_open(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerSimpleOpener, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArServerBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerSimpleOpener_open__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerSimpleOpener, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArServerBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ArServerSimpleOpener_open__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerSimpleOpener, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArServerBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ArServerSimpleOpener_open__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerSimpleOpener_open'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerSimpleOpener::open(ArServerBase *,char const *,int)\n"
    "    ArServerSimpleOpener::open(ArServerBase *,char const *)\n"
    "    ArServerSimpleOpener::open(ArServerBase *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_parseArgs__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleOpener_parseArgs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_parseArgs" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  result = (bool)(arg1)->parseArgs();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_parseArgs__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  ArArgumentParser *arg2 = (ArArgumentParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimpleOpener_parseArgs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_parseArgs" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArArgumentParser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleOpener_parseArgs" "', argument " "2"" of type '" "ArArgumentParser *""'"); 
  }
  arg2 = reinterpret_cast< ArArgumentParser * >(argp2);
  result = (bool)(arg1)->parseArgs(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_parseArgs(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerSimpleOpener, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArServerSimpleOpener_parseArgs__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerSimpleOpener, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ArArgumentParser, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ArServerSimpleOpener_parseArgs__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerSimpleOpener_parseArgs'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerSimpleOpener::parseArgs()\n"
    "    ArServerSimpleOpener::parseArgs(ArArgumentParser *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_logOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleOpener_logOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_logOptions" "', argument " "1"" of type '" "ArServerSimpleOpener const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  ((ArServerSimpleOpener const *)arg1)->logOptions();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_checkAndLog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleOpener_checkAndLog",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_checkAndLog" "', argument " "1"" of type '" "ArServerSimpleOpener const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  result = (bool)((ArServerSimpleOpener const *)arg1)->checkAndLog();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_wasUserFileBad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleOpener_wasUserFileBad",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_wasUserFileBad" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  result = (bool)(arg1)->wasUserFileBad();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_didOpenFail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleOpener_didOpenFail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_didOpenFail" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  result = (bool)(arg1)->didOpenFail();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_getPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleOpener_getPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_getPort" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  result = (int)(arg1)->getPort();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_setDefaultPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimpleOpener_setDefaultPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_setDefaultPort" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerSimpleOpener_setDefaultPort" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setDefaultPort(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_parseFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimpleOpener_parseFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_parseFile" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerSimpleOpener_parseFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->parseFile((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_setServerTcpOnly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerSimpleOpener_setServerTcpOnly",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_setServerTcpOnly" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArServerSimpleOpener_setServerTcpOnly" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setServerTcpOnly(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerSimpleOpener_getServerKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerSimpleOpener *arg1 = (ArServerSimpleOpener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerSimpleOpener_getServerKey",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerSimpleOpener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerSimpleOpener_getServerKey" "', argument " "1"" of type '" "ArServerSimpleOpener *""'"); 
  }
  arg1 = reinterpret_cast< ArServerSimpleOpener * >(argp1);
  result = (char *)(arg1)->getServerKey();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerSimpleOpener_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerSimpleOpener, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArServerUserInfo__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  ArServerUserInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArServerUserInfo",&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArServerUserInfo" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (ArServerUserInfo *)new ArServerUserInfo((char const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerUserInfo, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerUserInfo__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerUserInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ArServerUserInfo")) SWIG_fail;
  result = (ArServerUserInfo *)new ArServerUserInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArServerUserInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArServerUserInfo(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ArServerUserInfo__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ArServerUserInfo__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ArServerUserInfo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerUserInfo::ArServerUserInfo(char const *)\n"
    "    ArServerUserInfo::ArServerUserInfo()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ArServerUserInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerUserInfo *arg1 = (ArServerUserInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArServerUserInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerUserInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArServerUserInfo" "', argument " "1"" of type '" "ArServerUserInfo *""'"); 
  }
  arg1 = reinterpret_cast< ArServerUserInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerUserInfo_readFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerUserInfo *arg1 = (ArServerUserInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerUserInfo_readFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerUserInfo_readFile" "', argument " "1"" of type '" "ArServerUserInfo *""'"); 
  }
  arg1 = reinterpret_cast< ArServerUserInfo * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerUserInfo_readFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->readFile((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerUserInfo_setBaseDirectory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerUserInfo *arg1 = (ArServerUserInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerUserInfo_setBaseDirectory",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerUserInfo_setBaseDirectory" "', argument " "1"" of type '" "ArServerUserInfo *""'"); 
  }
  arg1 = reinterpret_cast< ArServerUserInfo * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerUserInfo_setBaseDirectory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setBaseDirectory((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerUserInfo_matchUserPassword__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerUserInfo *arg1 = (ArServerUserInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned char *arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ArServerUserInfo_matchUserPassword",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "1"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerUserInfo * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "3"" of type '" "unsigned char [16]""'"); 
  } 
  arg3 = reinterpret_cast< unsigned char * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (bool)((ArServerUserInfo const *)arg1)->matchUserPassword((char const *)arg2,arg3,(char const *)arg4,(char const *)arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerUserInfo_matchUserPassword__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerUserInfo *arg1 = (ArServerUserInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned char *arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ArServerUserInfo_matchUserPassword",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "1"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerUserInfo * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "3"" of type '" "unsigned char [16]""'"); 
  } 
  arg3 = reinterpret_cast< unsigned char * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ArServerUserInfo_matchUserPassword" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (bool)((ArServerUserInfo const *)arg1)->matchUserPassword((char const *)arg2,arg3,(char const *)arg4,(char const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerUserInfo_matchUserPassword(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_char, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_ArServerUserInfo_matchUserPassword__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArServerUserInfo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_char, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_ArServerUserInfo_matchUserPassword__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArServerUserInfo_matchUserPassword'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArServerUserInfo::matchUserPassword(char const *,unsigned char [16],char const *,char const *,bool) const\n"
    "    ArServerUserInfo::matchUserPassword(char const *,unsigned char [16],char const *,char const *) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArServerUserInfo_doNotUse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerUserInfo *arg1 = (ArServerUserInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerUserInfo_doNotUse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerUserInfo_doNotUse" "', argument " "1"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerUserInfo * >(argp1);
  result = (bool)((ArServerUserInfo const *)arg1)->doNotUse();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerUserInfo_getUsersGroups(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerUserInfo *arg1 = (ArServerUserInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArServerUserInfo_getUsersGroups",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerUserInfo_getUsersGroups" "', argument " "1"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerUserInfo * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArServerUserInfo_getUsersGroups" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = ((ArServerUserInfo const *)arg1)->getUsersGroups((char const *)arg2);
  resultobj = SWIG_NewPointerObj((new std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > >(static_cast< const std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > >& >(result))), SWIGTYPE_p_std__setT_std__string_ArStrCaseCmpOp_std__allocatorT_std__string_t_t, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArServerUserInfo_logUsers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArServerUserInfo *arg1 = (ArServerUserInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArServerUserInfo_logUsers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArServerUserInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArServerUserInfo_logUsers" "', argument " "1"" of type '" "ArServerUserInfo const *""'"); 
  }
  arg1 = reinterpret_cast< ArServerUserInfo * >(argp1);
  ((ArServerUserInfo const *)arg1)->logUsers();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArServerUserInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArServerUserInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ArClientHandlerRobotUpdate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientBase *arg1 = (ArClientBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArClientHandlerRobotUpdate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ArClientHandlerRobotUpdate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ArClientHandlerRobotUpdate" "', argument " "1"" of type '" "ArClientBase *""'"); 
  }
  arg1 = reinterpret_cast< ArClientBase * >(argp1);
  result = (ArClientHandlerRobotUpdate *)new ArClientHandlerRobotUpdate(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArClientHandlerRobotUpdate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArClientHandlerRobotUpdate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ArClientHandlerRobotUpdate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArClientHandlerRobotUpdate" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_requestUpdates__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerRobotUpdate_requestUpdates",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_requestUpdates" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArClientHandlerRobotUpdate_requestUpdates" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->requestUpdates(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_requestUpdates__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_requestUpdates",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_requestUpdates" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  (arg1)->requestUpdates();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_requestUpdates(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  Py_ssize_t ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerRobotUpdate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ArClientHandlerRobotUpdate_requestUpdates__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ArClientHandlerRobotUpdate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ArClientHandlerRobotUpdate_requestUpdates__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ArClientHandlerRobotUpdate_requestUpdates'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ArClientHandlerRobotUpdate::requestUpdates(int)\n"
    "    ArClientHandlerRobotUpdate::requestUpdates()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_stopUpdates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_stopUpdates",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_stopUpdates" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  (arg1)->stopUpdates();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_addStatusChangedCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  ArFunctor2< char const *,char const * > *arg2 = (ArFunctor2< char const *,char const * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerRobotUpdate_addStatusChangedCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_addStatusChangedCB" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor2T_char_const_p_char_const_p_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientHandlerRobotUpdate_addStatusChangedCB" "', argument " "2"" of type '" "ArFunctor2< char const *,char const * > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor2< char const *,char const * > * >(argp2);
  (arg1)->addStatusChangedCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_remStatusChangedCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  ArFunctor2< char const *,char const * > *arg2 = (ArFunctor2< char const *,char const * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerRobotUpdate_remStatusChangedCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_remStatusChangedCB" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ArFunctor2T_char_const_p_char_const_p_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientHandlerRobotUpdate_remStatusChangedCB" "', argument " "2"" of type '" "ArFunctor2< char const *,char const * > *""'"); 
  }
  arg2 = reinterpret_cast< ArFunctor2< char const *,char const * > * >(argp2);
  (arg1)->remStatusChangedCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_addModeChangedCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  ArFunctor1< char const * > *arg2 = (ArFunctor1< char const * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerRobotUpdate_addModeChangedCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_addModeChangedCB" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  {
    arg2 = new ArPyFunctor1_String(obj1);
  }
  (arg1)->addModeChangedCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_remModeChangedCB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  ArFunctor1< char const * > *arg2 = (ArFunctor1< char const * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ArClientHandlerRobotUpdate_remModeChangedCB",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_remModeChangedCB" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  {
    arg2 = new ArPyFunctor1_String(obj1);
  }
  (arg1)->remModeChangedCB(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_lock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_lock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_lock" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  (arg1)->lock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_unlock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_unlock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_unlock" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  (arg1)->unlock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getX",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getX" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (double)(arg1)->getX();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getY",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getY" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (double)(arg1)->getY();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getTh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getTh",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getTh" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (double)(arg1)->getTh();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getPose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArPose result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getPose",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getPose" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (arg1)->getPose();
  resultobj = SWIG_NewPointerObj((new ArPose(static_cast< const ArPose& >(result))), SWIGTYPE_p_ArPose, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getVel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getVel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getVel" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (double)(arg1)->getVel();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getRotVel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getRotVel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getRotVel" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (double)(arg1)->getRotVel();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getLatVel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getLatVel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getLatVel" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (double)(arg1)->getLatVel();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_haveStateOfCharge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_haveStateOfCharge",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_haveStateOfCharge" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (bool)(arg1)->haveStateOfCharge();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getStateOfCharge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getStateOfCharge",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getStateOfCharge" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (double)(arg1)->getStateOfCharge();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_haveVoltage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_haveVoltage",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_haveVoltage" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (bool)(arg1)->haveVoltage();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getVoltage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getVoltage",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getVoltage" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (double)(arg1)->getVoltage();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getTemperature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getTemperature",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getTemperature" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (double)(arg1)->getTemperature();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getStatus" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (char *)(arg1)->getStatus();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_getMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ArClientHandlerRobotUpdate_getMode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_getMode" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  result = (char *)(arg1)->getMode();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_waitForStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientHandlerRobotUpdate_waitForStatus",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_waitForStatus" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientHandlerRobotUpdate_waitForStatus" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientHandlerRobotUpdate_waitForStatus" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (bool)(arg1)->waitForStatus((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArClientHandlerRobotUpdate_waitForMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArClientHandlerRobotUpdate *arg1 = (ArClientHandlerRobotUpdate *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ArClientHandlerRobotUpdate_waitForMode",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArClientHandlerRobotUpdate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArClientHandlerRobotUpdate_waitForMode" "', argument " "1"" of type '" "ArClientHandlerRobotUpdate *""'"); 
  }
  arg1 = reinterpret_cast< ArClientHandlerRobotUpdate * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArClientHandlerRobotUpdate_waitForMode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ArClientHandlerRobotUpdate_waitForMode" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (bool)(arg1)->waitForMode((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *ArClientHandlerRobotUpdate_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArClientHandlerRobotUpdate, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"SWIG_IMPORTED_ARIA_swigconstant", SWIG_IMPORTED_ARIA_swigconstant, METH_VARARGS, NULL},
	 { (char *)"new_ArNetPacket", _wrap_new_ArNetPacket, METH_VARARGS, (char *)"\n"
		"ArNetPacket(ArTypes::UByte2 bufferSize)\n"
		"ArNetPacket()\n"
		"new_ArNetPacket(ArNetPacket other) -> ArNetPacket\n"
		""},
	 { (char *)"delete_ArNetPacket", _wrap_delete_ArNetPacket, METH_VARARGS, (char *)"delete_ArNetPacket(ArNetPacket self)"},
	 { (char *)"ArNetPacket_setCommand", _wrap_ArNetPacket_setCommand, METH_VARARGS, (char *)"ArNetPacket_setCommand(ArNetPacket self, ArTypes::UByte2 command)"},
	 { (char *)"ArNetPacket_getCommand", _wrap_ArNetPacket_getCommand, METH_VARARGS, (char *)"ArNetPacket_getCommand(ArNetPacket self) -> ArTypes::UByte2"},
	 { (char *)"ArNetPacket_doubleToBuf", _wrap_ArNetPacket_doubleToBuf, METH_VARARGS, (char *)"ArNetPacket_doubleToBuf(ArNetPacket self, double val)"},
	 { (char *)"ArNetPacket_bufToDouble", _wrap_ArNetPacket_bufToDouble, METH_VARARGS, (char *)"ArNetPacket_bufToDouble(ArNetPacket self) -> double"},
	 { (char *)"ArNetPacket_empty", _wrap_ArNetPacket_empty, METH_VARARGS, (char *)"ArNetPacket_empty(ArNetPacket self)"},
	 { (char *)"ArNetPacket_finalizePacket", _wrap_ArNetPacket_finalizePacket, METH_VARARGS, (char *)"ArNetPacket_finalizePacket(ArNetPacket self)"},
	 { (char *)"ArNetPacket_resetRead", _wrap_ArNetPacket_resetRead, METH_VARARGS, (char *)"ArNetPacket_resetRead(ArNetPacket self)"},
	 { (char *)"ArNetPacket_duplicatePacket", _wrap_ArNetPacket_duplicatePacket, METH_VARARGS, (char *)"ArNetPacket_duplicatePacket(ArNetPacket self, ArNetPacket packet)"},
	 { (char *)"ArNetPacket_verifyCheckSum", _wrap_ArNetPacket_verifyCheckSum, METH_VARARGS, (char *)"ArNetPacket_verifyCheckSum(ArNetPacket self) -> bool"},
	 { (char *)"ArNetPacket_calcCheckSum", _wrap_ArNetPacket_calcCheckSum, METH_VARARGS, (char *)"ArNetPacket_calcCheckSum(ArNetPacket self) -> ArTypes::Byte2"},
	 { (char *)"ArNetPacket_getAddedFooter", _wrap_ArNetPacket_getAddedFooter, METH_VARARGS, (char *)"ArNetPacket_getAddedFooter(ArNetPacket self) -> bool"},
	 { (char *)"ArNetPacket_setAddedFooter", _wrap_ArNetPacket_setAddedFooter, METH_VARARGS, (char *)"ArNetPacket_setAddedFooter(ArNetPacket self, bool addedFooter)"},
	 { (char *)"ArNetPacket_getPacketSource", _wrap_ArNetPacket_getPacketSource, METH_VARARGS, (char *)"ArNetPacket_getPacketSource(ArNetPacket self) -> ArNetPacket::PacketSource"},
	 { (char *)"ArNetPacket_setPacketSource", _wrap_ArNetPacket_setPacketSource, METH_VARARGS, (char *)"ArNetPacket_setPacketSource(ArNetPacket self, ArNetPacket::PacketSource source)"},
	 { (char *)"ArNetPacket_setArbitraryString", _wrap_ArNetPacket_setArbitraryString, METH_VARARGS, (char *)"ArNetPacket_setArbitraryString(ArNetPacket self, char const * string)"},
	 { (char *)"ArNetPacket_getArbitraryString", _wrap_ArNetPacket_getArbitraryString, METH_VARARGS, (char *)"ArNetPacket_getArbitraryString(ArNetPacket self) -> char const *"},
	 { (char *)"ArNetPacket_swigregister", ArNetPacket_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerBase", _wrap_new_ArServerBase, METH_VARARGS, (char *)"\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName, bool addBackupTimeoutToConfig=True, char const * backupTimeoutName, char const * backupTimeoutDesc, bool masterServer=False, bool slaveServer=False, bool logPasswordFailureVerbosely=False, bool allowSlowPackets=True, bool allowIdlePackets=True, int maxClientsAllowed=-1, int warningTimeMSec=250)\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName, bool addBackupTimeoutToConfig=True, char const * backupTimeoutName, char const * backupTimeoutDesc, bool masterServer=False, bool slaveServer=False, bool logPasswordFailureVerbosely=False, bool allowSlowPackets=True, bool allowIdlePackets=True, int maxClientsAllowed=-1)\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName, bool addBackupTimeoutToConfig=True, char const * backupTimeoutName, char const * backupTimeoutDesc, bool masterServer=False, bool slaveServer=False, bool logPasswordFailureVerbosely=False, bool allowSlowPackets=True, bool allowIdlePackets=True)\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName, bool addBackupTimeoutToConfig=True, char const * backupTimeoutName, char const * backupTimeoutDesc, bool masterServer=False, bool slaveServer=False, bool logPasswordFailureVerbosely=False, bool allowSlowPackets=True)\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName, bool addBackupTimeoutToConfig=True, char const * backupTimeoutName, char const * backupTimeoutDesc, bool masterServer=False, bool slaveServer=False, bool logPasswordFailureVerbosely=False)\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName, bool addBackupTimeoutToConfig=True, char const * backupTimeoutName, char const * backupTimeoutDesc, bool masterServer=False, bool slaveServer=False)\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName, bool addBackupTimeoutToConfig=True, char const * backupTimeoutName, char const * backupTimeoutDesc, bool masterServer=False)\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName, bool addBackupTimeoutToConfig=True, char const * backupTimeoutName, char const * backupTimeoutDesc)\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName, bool addBackupTimeoutToConfig=True, char const * backupTimeoutName)\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName, bool addBackupTimeoutToConfig=True)\n"
		"ArServerBase(bool addAriaExitCB=True, char const * serverName)\n"
		"ArServerBase(bool addAriaExitCB=True)\n"
		"new_ArServerBase() -> ArServerBase\n"
		""},
	 { (char *)"delete_ArServerBase", _wrap_delete_ArServerBase, METH_VARARGS, (char *)"delete_ArServerBase(ArServerBase self)"},
	 { (char *)"ArServerBase_open", _wrap_ArServerBase_open, METH_VARARGS, (char *)"\n"
		"open(unsigned int port, char const * openOnIP=None, bool tcpOnly=False) -> bool\n"
		"open(unsigned int port, char const * openOnIP=None) -> bool\n"
		"ArServerBase_open(ArServerBase self, unsigned int port) -> bool\n"
		""},
	 { (char *)"ArServerBase_close", _wrap_ArServerBase_close, METH_VARARGS, (char *)"ArServerBase_close(ArServerBase self)"},
	 { (char *)"ArServerBase_loopOnce", _wrap_ArServerBase_loopOnce, METH_VARARGS, (char *)"ArServerBase_loopOnce(ArServerBase self)"},
	 { (char *)"ArServerBase_addData", _wrap_ArServerBase_addData, METH_VARARGS, (char *)"\n"
		"addData(char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription, char const * commandGroup=None, char const * dataFlags=None) -> bool\n"
		"addData(char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription, char const * commandGroup=None) -> bool\n"
		"ArServerBase_addData(ArServerBase self, char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription) -> bool\n"
		""},
	 { (char *)"ArServerBase_loadUserInfo", _wrap_ArServerBase_loadUserInfo, METH_VARARGS, (char *)"\n"
		"loadUserInfo(char const * fileName, char const * baseDirectory) -> bool\n"
		"ArServerBase_loadUserInfo(ArServerBase self, char const * fileName) -> bool\n"
		""},
	 { (char *)"ArServerBase_logUserInfo", _wrap_ArServerBase_logUserInfo, METH_VARARGS, (char *)"ArServerBase_logUserInfo(ArServerBase self)"},
	 { (char *)"ArServerBase_logCommandGroups", _wrap_ArServerBase_logCommandGroups, METH_VARARGS, (char *)"ArServerBase_logCommandGroups(ArServerBase self)"},
	 { (char *)"ArServerBase_logCommandGroupsToFile", _wrap_ArServerBase_logCommandGroupsToFile, METH_VARARGS, (char *)"ArServerBase_logCommandGroupsToFile(ArServerBase self, char const * fileName)"},
	 { (char *)"ArServerBase_setGroupDescription", _wrap_ArServerBase_setGroupDescription, METH_VARARGS, (char *)"ArServerBase_setGroupDescription(ArServerBase self, char const * GrpName, char const * GrpDesc)"},
	 { (char *)"ArServerBase_logGroupDescriptions", _wrap_ArServerBase_logGroupDescriptions, METH_VARARGS, (char *)"ArServerBase_logGroupDescriptions(ArServerBase self)"},
	 { (char *)"ArServerBase_logGroupDescriptionsToFile", _wrap_ArServerBase_logGroupDescriptionsToFile, METH_VARARGS, (char *)"ArServerBase_logGroupDescriptionsToFile(ArServerBase self, char const * fileName)"},
	 { (char *)"ArServerBase_setServerKey", _wrap_ArServerBase_setServerKey, METH_VARARGS, (char *)"ArServerBase_setServerKey(ArServerBase self, char const * serverKey)"},
	 { (char *)"ArServerBase_rejectSinceUsingCentralServer", _wrap_ArServerBase_rejectSinceUsingCentralServer, METH_VARARGS, (char *)"ArServerBase_rejectSinceUsingCentralServer(ArServerBase self, char const * centralServerIPString)"},
	 { (char *)"ArServerBase_enforceProtocolVersion", _wrap_ArServerBase_enforceProtocolVersion, METH_VARARGS, (char *)"ArServerBase_enforceProtocolVersion(ArServerBase self, char const * protocolVersion)"},
	 { (char *)"ArServerBase_enforceType", _wrap_ArServerBase_enforceType, METH_VARARGS, (char *)"ArServerBase_enforceType(ArServerBase self, ArServerCommands::Type type)"},
	 { (char *)"ArServerBase_setBackupTimeout", _wrap_ArServerBase_setBackupTimeout, METH_VARARGS, (char *)"ArServerBase_setBackupTimeout(ArServerBase self, double timeoutInMins)"},
	 { (char *)"ArServerBase_run", _wrap_ArServerBase_run, METH_VARARGS, (char *)"ArServerBase_run(ArServerBase self)"},
	 { (char *)"ArServerBase_runAsync", _wrap_ArServerBase_runAsync, METH_VARARGS, (char *)"ArServerBase_runAsync(ArServerBase self)"},
	 { (char *)"ArServerBase_logConnections", _wrap_ArServerBase_logConnections, METH_VARARGS, (char *)"\n"
		"logConnections(char const * prefix)\n"
		"ArServerBase_logConnections(ArServerBase self)\n"
		""},
	 { (char *)"ArServerBase_getNumClients", _wrap_ArServerBase_getNumClients, METH_VARARGS, (char *)"ArServerBase_getNumClients(ArServerBase self) -> int"},
	 { (char *)"ArServerBase_findCommandFromName", _wrap_ArServerBase_findCommandFromName, METH_VARARGS, (char *)"ArServerBase_findCommandFromName(ArServerBase self, char const * command) -> unsigned int"},
	 { (char *)"ArServerBase_broadcastPacketTcp", _wrap_ArServerBase_broadcastPacketTcp, METH_VARARGS, (char *)"ArServerBase_broadcastPacketTcp(ArServerBase self, ArNetPacket packet, char const * name) -> bool"},
	 { (char *)"ArServerBase_broadcastPacketTcpToMatching", _wrap_ArServerBase_broadcastPacketTcpToMatching, METH_VARARGS, (char *)"\n"
		"broadcastPacketTcpToMatching(ArNetPacket packet, char const * name, ArServerClientIdentifier identifier, bool matchConnectionID=False) -> bool\n"
		"ArServerBase_broadcastPacketTcpToMatching(ArServerBase self, ArNetPacket packet, char const * name, ArServerClientIdentifier identifier) -> bool\n"
		""},
	 { (char *)"ArServerBase_broadcastPacketTcpWithExclusion", _wrap_ArServerBase_broadcastPacketTcpWithExclusion, METH_VARARGS, (char *)"\n"
		"broadcastPacketTcpWithExclusion(ArNetPacket packet, char const * name, ArServerClient excludeClient, bool match=False, ArServerClientIdentifier identifier, bool matchConnectionID=False) -> bool\n"
		"broadcastPacketTcpWithExclusion(ArNetPacket packet, char const * name, ArServerClient excludeClient, bool match=False, ArServerClientIdentifier identifier) -> bool\n"
		"broadcastPacketTcpWithExclusion(ArNetPacket packet, char const * name, ArServerClient excludeClient, bool match=False) -> bool\n"
		"ArServerBase_broadcastPacketTcpWithExclusion(ArServerBase self, ArNetPacket packet, char const * name, ArServerClient excludeClient) -> bool\n"
		""},
	 { (char *)"ArServerBase_broadcastPacketUdp", _wrap_ArServerBase_broadcastPacketUdp, METH_VARARGS, (char *)"ArServerBase_broadcastPacketUdp(ArServerBase self, ArNetPacket packet, char const * name) -> bool"},
	 { (char *)"ArServerBase_broadcastPacketUdpWithExclusion", _wrap_ArServerBase_broadcastPacketUdpWithExclusion, METH_VARARGS, (char *)"\n"
		"broadcastPacketUdpWithExclusion(ArNetPacket packet, char const * name, ArServerClient excludeClient, bool match=False, ArServerClientIdentifier identifier, bool matchConnectionID=False) -> bool\n"
		"broadcastPacketUdpWithExclusion(ArNetPacket packet, char const * name, ArServerClient excludeClient, bool match=False, ArServerClientIdentifier identifier) -> bool\n"
		"broadcastPacketUdpWithExclusion(ArNetPacket packet, char const * name, ArServerClient excludeClient, bool match=False) -> bool\n"
		"ArServerBase_broadcastPacketUdpWithExclusion(ArServerBase self, ArNetPacket packet, char const * name, ArServerClient excludeClient) -> bool\n"
		""},
	 { (char *)"ArServerBase_broadcastPacketUdpToMatching", _wrap_ArServerBase_broadcastPacketUdpToMatching, METH_VARARGS, (char *)"ArServerBase_broadcastPacketUdpToMatching(ArServerBase self, ArNetPacket packet, char const * name, ArServerClientIdentifier identifier, bool matchConnectionID) -> bool"},
	 { (char *)"ArServerBase_sleepAfterSend", _wrap_ArServerBase_sleepAfterSend, METH_VARARGS, (char *)"ArServerBase_sleepAfterSend(ArServerBase self, int msecDelay)"},
	 { (char *)"ArServerBase_idleProcessingPending", _wrap_ArServerBase_idleProcessingPending, METH_VARARGS, (char *)"ArServerBase_idleProcessingPending(ArServerBase self) -> bool"},
	 { (char *)"ArServerBase_processPacket", _wrap_ArServerBase_processPacket, METH_VARARGS, (char *)"ArServerBase_processPacket(ArServerBase self, ArNetPacket packet, sockaddr_in * sin)"},
	 { (char *)"ArServerBase_sendUdp", _wrap_ArServerBase_sendUdp, METH_VARARGS, (char *)"ArServerBase_sendUdp(ArServerBase self, ArNetPacket packet, sockaddr_in * sin) -> bool"},
	 { (char *)"ArServerBase_logTracking", _wrap_ArServerBase_logTracking, METH_VARARGS, (char *)"\n"
		"logTracking(bool terse=True)\n"
		"ArServerBase_logTracking(ArServerBase self)\n"
		""},
	 { (char *)"ArServerBase_resetTracking", _wrap_ArServerBase_resetTracking, METH_VARARGS, (char *)"ArServerBase_resetTracking(ArServerBase self)"},
	 { (char *)"ArServerBase_runThread", _wrap_ArServerBase_runThread, METH_VARARGS, (char *)"ArServerBase_runThread(ArServerBase self, void * arg) -> void *"},
	 { (char *)"ArServerBase_getTcpPort", _wrap_ArServerBase_getTcpPort, METH_VARARGS, (char *)"ArServerBase_getTcpPort(ArServerBase self) -> unsigned int"},
	 { (char *)"ArServerBase_getUdpPort", _wrap_ArServerBase_getUdpPort, METH_VARARGS, (char *)"ArServerBase_getUdpPort(ArServerBase self) -> unsigned int"},
	 { (char *)"ArServerBase_getOpenOnIP", _wrap_ArServerBase_getOpenOnIP, METH_VARARGS, (char *)"ArServerBase_getOpenOnIP(ArServerBase self) -> char const *"},
	 { (char *)"ArServerBase_addCycleCallback", _wrap_ArServerBase_addCycleCallback, METH_VARARGS, (char *)"ArServerBase_addCycleCallback(ArServerBase self, ArFunctor functor)"},
	 { (char *)"ArServerBase_remCycleCallback", _wrap_ArServerBase_remCycleCallback, METH_VARARGS, (char *)"ArServerBase_remCycleCallback(ArServerBase self, ArFunctor functor)"},
	 { (char *)"ArServerBase_addClientRemovedCallback", _wrap_ArServerBase_addClientRemovedCallback, METH_VARARGS, (char *)"ArServerBase_addClientRemovedCallback(ArServerBase self, ArFunctor1< ArServerClient * > * functor)"},
	 { (char *)"ArServerBase_remClientRemovedCallback", _wrap_ArServerBase_remClientRemovedCallback, METH_VARARGS, (char *)"ArServerBase_remClientRemovedCallback(ArServerBase self, ArFunctor1< ArServerClient * > * functor)"},
	 { (char *)"ArServerBase_makeNewServerClientFromSocket", _wrap_ArServerBase_makeNewServerClientFromSocket, METH_VARARGS, (char *)"ArServerBase_makeNewServerClientFromSocket(ArServerBase self, ArSocket socket, bool overrideGeneralReject) -> ArServerClient"},
	 { (char *)"ArServerBase_getUserInfo", _wrap_ArServerBase_getUserInfo, METH_VARARGS, (char *)"ArServerBase_getUserInfo(ArServerBase self) -> ArServerUserInfo"},
	 { (char *)"ArServerBase_setUserInfo", _wrap_ArServerBase_setUserInfo, METH_VARARGS, (char *)"ArServerBase_setUserInfo(ArServerBase self, ArServerUserInfo userInfo)"},
	 { (char *)"ArServerBase_addDataAdvanced", _wrap_ArServerBase_addDataAdvanced, METH_VARARGS, (char *)"\n"
		"addDataAdvanced(char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription, char const * commandGroup=None, char const * dataFlags=None, unsigned int commandNumber=0, ArFunctor2< long,unsigned int > * requestChangedFunctor=None, ArRetFunctor2< bool,ArServerClient *,ArNetPacket * > * requestOnceFunctor=None) -> bool\n"
		"addDataAdvanced(char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription, char const * commandGroup=None, char const * dataFlags=None, unsigned int commandNumber=0, ArFunctor2< long,unsigned int > * requestChangedFunctor=None) -> bool\n"
		"addDataAdvanced(char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription, char const * commandGroup=None, char const * dataFlags=None, unsigned int commandNumber=0) -> bool\n"
		"addDataAdvanced(char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription, char const * commandGroup=None, char const * dataFlags=None) -> bool\n"
		"addDataAdvanced(char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription, char const * commandGroup=None) -> bool\n"
		"ArServerBase_addDataAdvanced(ArServerBase self, char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription) -> bool\n"
		""},
	 { (char *)"ArServerBase_setAdditionalDataFlags", _wrap_ArServerBase_setAdditionalDataFlags, METH_VARARGS, (char *)"ArServerBase_setAdditionalDataFlags(ArServerBase self, char const * additionalDataFlags)"},
	 { (char *)"ArServerBase_getFrequency", _wrap_ArServerBase_getFrequency, METH_VARARGS, (char *)"\n"
		"getFrequency(unsigned int command, bool internalCall=False) -> long\n"
		"ArServerBase_getFrequency(ArServerBase self, unsigned int command) -> long\n"
		""},
	 { (char *)"ArServerBase_broadcastPacketTcpByCommand", _wrap_ArServerBase_broadcastPacketTcpByCommand, METH_VARARGS, (char *)"ArServerBase_broadcastPacketTcpByCommand(ArServerBase self, ArNetPacket packet, unsigned int command) -> bool"},
	 { (char *)"ArServerBase_broadcastPacketTcpByCommandWithExclusion", _wrap_ArServerBase_broadcastPacketTcpByCommandWithExclusion, METH_VARARGS, (char *)"\n"
		"broadcastPacketTcpByCommandWithExclusion(ArNetPacket packet, unsigned int command, ArServerClient excludeClient, bool match=False, ArServerClientIdentifier identifier, bool matchConnectionID=False) -> bool\n"
		"broadcastPacketTcpByCommandWithExclusion(ArNetPacket packet, unsigned int command, ArServerClient excludeClient, bool match=False, ArServerClientIdentifier identifier) -> bool\n"
		"broadcastPacketTcpByCommandWithExclusion(ArNetPacket packet, unsigned int command, ArServerClient excludeClient, bool match=False) -> bool\n"
		"ArServerBase_broadcastPacketTcpByCommandWithExclusion(ArServerBase self, ArNetPacket packet, unsigned int command, ArServerClient excludeClient) -> bool\n"
		""},
	 { (char *)"ArServerBase_broadcastPacketUdpByCommand", _wrap_ArServerBase_broadcastPacketUdpByCommand, METH_VARARGS, (char *)"ArServerBase_broadcastPacketUdpByCommand(ArServerBase self, ArNetPacket packet, unsigned int command) -> bool"},
	 { (char *)"ArServerBase_broadcastPacketUdpByCommandWithExclusion", _wrap_ArServerBase_broadcastPacketUdpByCommandWithExclusion, METH_VARARGS, (char *)"\n"
		"broadcastPacketUdpByCommandWithExclusion(ArNetPacket packet, unsigned int command, ArServerClient excludeClient, bool match=False, ArServerClientIdentifier identifier, bool matchConnectionID=False) -> bool\n"
		"broadcastPacketUdpByCommandWithExclusion(ArNetPacket packet, unsigned int command, ArServerClient excludeClient, bool match=False, ArServerClientIdentifier identifier) -> bool\n"
		"broadcastPacketUdpByCommandWithExclusion(ArNetPacket packet, unsigned int command, ArServerClient excludeClient, bool match=False) -> bool\n"
		"ArServerBase_broadcastPacketUdpByCommandWithExclusion(ArServerBase self, ArNetPacket packet, unsigned int command, ArServerClient excludeClient) -> bool\n"
		""},
	 { (char *)"ArServerBase_closeConnectionID", _wrap_ArServerBase_closeConnectionID, METH_VARARGS, (char *)"ArServerBase_closeConnectionID(ArServerBase self, ArTypes::UByte4 idNum)"},
	 { (char *)"ArServerBase_dataHasFlag", _wrap_ArServerBase_dataHasFlag, METH_VARARGS, (char *)"ArServerBase_dataHasFlag(ArServerBase self, char const * name, char const * dataFlag) -> bool"},
	 { (char *)"ArServerBase_dataHasFlagByCommand", _wrap_ArServerBase_dataHasFlagByCommand, METH_VARARGS, (char *)"ArServerBase_dataHasFlagByCommand(ArServerBase self, unsigned int command, char const * dataFlag) -> bool"},
	 { (char *)"ArServerBase_setDebugLogging", _wrap_ArServerBase_setDebugLogging, METH_VARARGS, (char *)"\n"
		"setDebugLogging(bool debugLogging=False)\n"
		"ArServerBase_setDebugLogging(ArServerBase self)\n"
		""},
	 { (char *)"ArServerBase_getDebugLogging", _wrap_ArServerBase_getDebugLogging, METH_VARARGS, (char *)"ArServerBase_getDebugLogging(ArServerBase self) -> bool"},
	 { (char *)"ArServerBase_getMostClients", _wrap_ArServerBase_getMostClients, METH_VARARGS, (char *)"ArServerBase_getMostClients(ArServerBase self) -> int"},
	 { (char *)"ArServerBase_allowingIdlePackets", _wrap_ArServerBase_allowingIdlePackets, METH_VARARGS, (char *)"ArServerBase_allowingIdlePackets(ArServerBase self) -> bool"},
	 { (char *)"ArServerBase_addIdleSingleShotCallback", _wrap_ArServerBase_addIdleSingleShotCallback, METH_VARARGS, (char *)"ArServerBase_addIdleSingleShotCallback(ArServerBase self, ArFunctor functor) -> bool"},
	 { (char *)"ArServerBase_hasSlowPackets", _wrap_ArServerBase_hasSlowPackets, METH_VARARGS, (char *)"ArServerBase_hasSlowPackets(ArServerBase self) -> bool"},
	 { (char *)"ArServerBase_hasIdlePackets", _wrap_ArServerBase_hasIdlePackets, METH_VARARGS, (char *)"ArServerBase_hasIdlePackets(ArServerBase self) -> bool"},
	 { (char *)"ArServerBase_hasIdleCallbacks", _wrap_ArServerBase_hasIdleCallbacks, METH_VARARGS, (char *)"ArServerBase_hasIdleCallbacks(ArServerBase self) -> bool"},
	 { (char *)"ArServerBase_internalSetNumClients", _wrap_ArServerBase_internalSetNumClients, METH_VARARGS, (char *)"ArServerBase_internalSetNumClients(ArServerBase self, int numClients)"},
	 { (char *)"ArServerBase_addTooManyClientsCB", _wrap_ArServerBase_addTooManyClientsCB, METH_VARARGS, (char *)"\n"
		"addTooManyClientsCB(ArFunctor1_CString functor, int position=50)\n"
		"ArServerBase_addTooManyClientsCB(ArServerBase self, ArFunctor1_CString functor)\n"
		""},
	 { (char *)"ArServerBase_remTooManyClientsCB", _wrap_ArServerBase_remTooManyClientsCB, METH_VARARGS, (char *)"ArServerBase_remTooManyClientsCB(ArServerBase self, ArFunctor1_CString functor)"},
	 { (char *)"ArServerBase_internalSetDefaultFrequency", _wrap_ArServerBase_internalSetDefaultFrequency, METH_VARARGS, (char *)"ArServerBase_internalSetDefaultFrequency(ArServerBase self, char const * command, int frequency) -> bool"},
	 { (char *)"ArServerBase_internalLockup", _wrap_ArServerBase_internalLockup, METH_VARARGS, (char *)"ArServerBase_internalLockup(ArServerBase self)"},
	 { (char *)"ArServerBase_remData", _wrap_ArServerBase_remData, METH_VARARGS, (char *)"ArServerBase_remData(ArServerBase self, char const * name)"},
	 { (char *)"ArServerBase_swigregister", ArServerBase_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_ArServerMode", _wrap_delete_ArServerMode, METH_VARARGS, (char *)"delete_ArServerMode(ArServerMode self)"},
	 { (char *)"ArServerMode_getActionGroup", _wrap_ArServerMode_getActionGroup, METH_VARARGS, (char *)"ArServerMode_getActionGroup(ArServerMode self) -> ArActionGroup"},
	 { (char *)"ArServerMode_activate", _wrap_ArServerMode_activate, METH_VARARGS, (char *)"ArServerMode_activate(ArServerMode self)"},
	 { (char *)"ArServerMode_deactivate", _wrap_ArServerMode_deactivate, METH_VARARGS, (char *)"ArServerMode_deactivate(ArServerMode self)"},
	 { (char *)"ArServerMode_activationDenied", _wrap_ArServerMode_activationDenied, METH_VARARGS, (char *)"ArServerMode_activationDenied(ArServerMode self)"},
	 { (char *)"ArServerMode_userTask", _wrap_ArServerMode_userTask, METH_VARARGS, (char *)"ArServerMode_userTask(ArServerMode self)"},
	 { (char *)"ArServerMode_requestUnlock", _wrap_ArServerMode_requestUnlock, METH_VARARGS, (char *)"ArServerMode_requestUnlock(ArServerMode self)"},
	 { (char *)"ArServerMode_forceUnlock", _wrap_ArServerMode_forceUnlock, METH_VARARGS, (char *)"ArServerMode_forceUnlock(ArServerMode self)"},
	 { (char *)"ArServerMode_lockMode", _wrap_ArServerMode_lockMode, METH_VARARGS, (char *)"\n"
		"lockMode(bool willUnlockIfRequested=False)\n"
		"ArServerMode_lockMode(ArServerMode self)\n"
		""},
	 { (char *)"ArServerMode_unlockMode", _wrap_ArServerMode_unlockMode, METH_VARARGS, (char *)"ArServerMode_unlockMode(ArServerMode self)"},
	 { (char *)"ArServerMode_getMode", _wrap_ArServerMode_getMode, METH_VARARGS, (char *)"ArServerMode_getMode(ArServerMode self) -> char const *"},
	 { (char *)"ArServerMode_getStatus", _wrap_ArServerMode_getStatus, METH_VARARGS, (char *)"ArServerMode_getStatus(ArServerMode self) -> char const *"},
	 { (char *)"ArServerMode_getExtendedStatus", _wrap_ArServerMode_getExtendedStatus, METH_VARARGS, (char *)"ArServerMode_getExtendedStatus(ArServerMode self) -> char const *"},
	 { (char *)"ArServerMode_getActiveModeModeString", _wrap_ArServerMode_getActiveModeModeString, METH_VARARGS, (char *)"ArServerMode_getActiveModeModeString() -> char const *"},
	 { (char *)"ArServerMode_getActiveModeStatusString", _wrap_ArServerMode_getActiveModeStatusString, METH_VARARGS, (char *)"ArServerMode_getActiveModeStatusString() -> char const *"},
	 { (char *)"ArServerMode_getActiveModeExtendedStatusString", _wrap_ArServerMode_getActiveModeExtendedStatusString, METH_VARARGS, (char *)"ArServerMode_getActiveModeExtendedStatusString() -> char const *"},
	 { (char *)"ArServerMode_getName", _wrap_ArServerMode_getName, METH_VARARGS, (char *)"ArServerMode_getName(ArServerMode self) -> char const *"},
	 { (char *)"ArServerMode_isActive", _wrap_ArServerMode_isActive, METH_VARARGS, (char *)"ArServerMode_isActive(ArServerMode self) -> bool"},
	 { (char *)"ArServerMode_isLocked", _wrap_ArServerMode_isLocked, METH_VARARGS, (char *)"ArServerMode_isLocked() -> bool"},
	 { (char *)"ArServerMode_willUnlockIfRequested", _wrap_ArServerMode_willUnlockIfRequested, METH_VARARGS, (char *)"ArServerMode_willUnlockIfRequested() -> bool"},
	 { (char *)"ArServerMode_getActiveMode", _wrap_ArServerMode_getActiveMode, METH_VARARGS, (char *)"ArServerMode_getActiveMode() -> ArServerMode"},
	 { (char *)"ArServerMode_hasSetActivityTime", _wrap_ArServerMode_hasSetActivityTime, METH_VARARGS, (char *)"ArServerMode_hasSetActivityTime(ArServerMode self) -> bool"},
	 { (char *)"ArServerMode_getActivityTime", _wrap_ArServerMode_getActivityTime, METH_VARARGS, (char *)"ArServerMode_getActivityTime(ArServerMode self) -> ArTime"},
	 { (char *)"ArServerMode_setActivityTimeToNow", _wrap_ArServerMode_setActivityTimeToNow, METH_VARARGS, (char *)"ArServerMode_setActivityTimeToNow(ArServerMode self)"},
	 { (char *)"ArServerMode_getActiveModeActivityTimeSecSince", _wrap_ArServerMode_getActiveModeActivityTimeSecSince, METH_VARARGS, (char *)"ArServerMode_getActiveModeActivityTimeSecSince() -> int"},
	 { (char *)"ArServerMode_getActiveModeSetActivityThisCycle", _wrap_ArServerMode_getActiveModeSetActivityThisCycle, METH_VARARGS, (char *)"ArServerMode_getActiveModeSetActivityThisCycle() -> bool"},
	 { (char *)"ArServerMode_addAsDefaultMode", _wrap_ArServerMode_addAsDefaultMode, METH_VARARGS, (char *)"\n"
		"addAsDefaultMode(ArListPos::Pos pos)\n"
		"ArServerMode_addAsDefaultMode(ArServerMode self)\n"
		""},
	 { (char *)"ArServerMode_checkDefault", _wrap_ArServerMode_checkDefault, METH_VARARGS, (char *)"ArServerMode_checkDefault(ArServerMode self)"},
	 { (char *)"ArServerMode_setMode", _wrap_ArServerMode_setMode, METH_VARARGS, (char *)"ArServerMode_setMode(ArServerMode self, char const * str)"},
	 { (char *)"ArServerMode_setStatus", _wrap_ArServerMode_setStatus, METH_VARARGS, (char *)"ArServerMode_setStatus(ArServerMode self, char const * str)"},
	 { (char *)"ArServerMode_isAutoResumeAfterInterrupt", _wrap_ArServerMode_isAutoResumeAfterInterrupt, METH_VARARGS, (char *)"ArServerMode_isAutoResumeAfterInterrupt(ArServerMode self) -> bool"},
	 { (char *)"ArServerMode_addModeData", _wrap_ArServerMode_addModeData, METH_VARARGS, (char *)"\n"
		"addModeData(char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription, char const * commandGroup=None, char const * dataFlags=None) -> bool\n"
		"addModeData(char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription, char const * commandGroup=None) -> bool\n"
		"ArServerMode_addModeData(ArServerMode self, char const * name, char const * description, ArFunctor2< ArServerClient *,ArNetPacket * > * functor, char const * argumentDescription, char const * returnDescription) -> bool\n"
		""},
	 { (char *)"ArServerMode_getModeDataList", _wrap_ArServerMode_getModeDataList, METH_VARARGS, (char *)"ArServerMode_getModeDataList(ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerMode_getModeInfo", _wrap_ArServerMode_getModeInfo, METH_VARARGS, (char *)"ArServerMode_getModeInfo(ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerMode_getModeBusy", _wrap_ArServerMode_getModeBusy, METH_VARARGS, (char *)"ArServerMode_getModeBusy(ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerMode_addActivateCallback", _wrap_ArServerMode_addActivateCallback, METH_VARARGS, (char *)"\n"
		"addActivateCallback(ArFunctor functor, int position=50)\n"
		"ArServerMode_addActivateCallback(ArServerMode self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerMode_remActivateCallback", _wrap_ArServerMode_remActivateCallback, METH_VARARGS, (char *)"ArServerMode_remActivateCallback(ArServerMode self, ArFunctor functor)"},
	 { (char *)"ArServerMode_addDeactivateCallback", _wrap_ArServerMode_addDeactivateCallback, METH_VARARGS, (char *)"\n"
		"addDeactivateCallback(ArFunctor functor, int position=50)\n"
		"ArServerMode_addDeactivateCallback(ArServerMode self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerMode_remDeactivateCallback", _wrap_ArServerMode_remDeactivateCallback, METH_VARARGS, (char *)"ArServerMode_remDeactivateCallback(ArServerMode self, ArFunctor functor)"},
	 { (char *)"ArServerMode_addSingleShotDeactivateCallback", _wrap_ArServerMode_addSingleShotDeactivateCallback, METH_VARARGS, (char *)"\n"
		"addSingleShotDeactivateCallback(ArFunctor functor, int position=50)\n"
		"ArServerMode_addSingleShotDeactivateCallback(ArServerMode self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerMode_remSingleShotDeactivateCallback", _wrap_ArServerMode_remSingleShotDeactivateCallback, METH_VARARGS, (char *)"ArServerMode_remSingleShotDeactivateCallback(ArServerMode self, ArFunctor functor)"},
	 { (char *)"ArServerMode_addSingleShotPostDeactivateCallback", _wrap_ArServerMode_addSingleShotPostDeactivateCallback, METH_VARARGS, (char *)"\n"
		"addSingleShotPostDeactivateCallback(ArFunctor functor, int position=50)\n"
		"ArServerMode_addSingleShotPostDeactivateCallback(ArServerMode self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerMode_remSingleShotPostDeactivateCallback", _wrap_ArServerMode_remSingleShotPostDeactivateCallback, METH_VARARGS, (char *)"ArServerMode_remSingleShotPostDeactivateCallback(ArServerMode self, ArFunctor functor)"},
	 { (char *)"ArServerMode_getIdleMode", _wrap_ArServerMode_getIdleMode, METH_VARARGS, (char *)"ArServerMode_getIdleMode() -> ArServerModeIdle"},
	 { (char *)"ArServerMode_swigregister", ArServerMode_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientArg", _wrap_new_ArClientArg, METH_VARARGS, (char *)"\n"
		"ArClientArg(bool isDisplayHintParsed=False, ArPriority::Priority lastPriority, int version=1, bool isSingleParam=False)\n"
		"ArClientArg(bool isDisplayHintParsed=False, ArPriority::Priority lastPriority, int version=1)\n"
		"ArClientArg(bool isDisplayHintParsed=False, ArPriority::Priority lastPriority)\n"
		"ArClientArg(bool isDisplayHintParsed=False)\n"
		"new_ArClientArg() -> ArClientArg\n"
		""},
	 { (char *)"delete_ArClientArg", _wrap_delete_ArClientArg, METH_VARARGS, (char *)"delete_ArClientArg(ArClientArg self)"},
	 { (char *)"ArClientArg_isSendableParamType", _wrap_ArClientArg_isSendableParamType, METH_VARARGS, (char *)"\n"
		"isSendableParamType(ArConfigArg arg, bool isIncludeSeparator=True) -> bool\n"
		"ArClientArg_isSendableParamType(ArConfigArg arg) -> bool\n"
		""},
	 { (char *)"ArClientArg_createArg", _wrap_ArClientArg_createArg, METH_VARARGS, (char *)"\n"
		"createArg(ArNetPacket packet, ArConfigArg argOut, std::string * parentPathNameOut=None) -> bool\n"
		"ArClientArg_createArg(ArClientArg self, ArNetPacket packet, ArConfigArg argOut) -> bool\n"
		""},
	 { (char *)"ArClientArg_createPacket", _wrap_ArClientArg_createPacket, METH_VARARGS, (char *)"\n"
		"createPacket(ArConfigArg arg, ArNetPacket packet, char const * parentPathName=None) -> bool\n"
		"ArClientArg_createPacket(ArClientArg self, ArConfigArg arg, ArNetPacket packet) -> bool\n"
		""},
	 { (char *)"ArClientArg_bufToArgValue", _wrap_ArClientArg_bufToArgValue, METH_VARARGS, (char *)"ArClientArg_bufToArgValue(ArClientArg self, ArNetPacket packet, ArConfigArg arg) -> bool"},
	 { (char *)"ArClientArg_argValueToBuf", _wrap_ArClientArg_argValueToBuf, METH_VARARGS, (char *)"ArClientArg_argValueToBuf(ArClientArg self, ArConfigArg arg, ArNetPacket packet) -> bool"},
	 { (char *)"ArClientArg_argTextToBuf", _wrap_ArClientArg_argTextToBuf, METH_VARARGS, (char *)"ArClientArg_argTextToBuf(ArClientArg self, ArConfigArg arg, ArNetPacket packet) -> bool"},
	 { (char *)"ArClientArg_addArgTextToPacket", _wrap_ArClientArg_addArgTextToPacket, METH_VARARGS, (char *)"ArClientArg_addArgTextToPacket(ArClientArg self, ArConfigArg arg, ArNetPacket packet) -> bool"},
	 { (char *)"ArClientArg_addAncestorListToPacket", _wrap_ArClientArg_addAncestorListToPacket, METH_VARARGS, (char *)"ArClientArg_addAncestorListToPacket(ArClientArg self, std::list< ArConfigArg *,std::allocator< ArConfigArg * > > const & ancestorList, ArNetPacket packet) -> bool"},
	 { (char *)"ArClientArg_addListBeginToPacket", _wrap_ArClientArg_addListBeginToPacket, METH_VARARGS, (char *)"ArClientArg_addListBeginToPacket(ArClientArg self, ArConfigArg parentArg, ArNetPacket packet) -> bool"},
	 { (char *)"ArClientArg_addListEndToPacket", _wrap_ArClientArg_addListEndToPacket, METH_VARARGS, (char *)"ArClientArg_addListEndToPacket(ArClientArg self, ArConfigArg parentArg, ArNetPacket packet) -> bool"},
	 { (char *)"ArClientArg_swigregister", ArClientArg_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientBase", _wrap_new_ArClientBase, METH_VARARGS, (char *)"new_ArClientBase() -> ArClientBase"},
	 { (char *)"delete_ArClientBase", _wrap_delete_ArClientBase, METH_VARARGS, (char *)"delete_ArClientBase(ArClientBase self)"},
	 { (char *)"ArClientBase_setRobotName", _wrap_ArClientBase_setRobotName, METH_VARARGS, (char *)"\n"
		"setRobotName(char const * name, bool debugLogging=False, int robotId=0)\n"
		"setRobotName(char const * name, bool debugLogging=False)\n"
		"ArClientBase_setRobotName(ArClientBase self, char const * name)\n"
		""},
	 { (char *)"ArClientBase_getRobotName", _wrap_ArClientBase_getRobotName, METH_VARARGS, (char *)"ArClientBase_getRobotName(ArClientBase self) -> char const *"},
	 { (char *)"ArClientBase_getLogPrefix", _wrap_ArClientBase_getLogPrefix, METH_VARARGS, (char *)"ArClientBase_getLogPrefix(ArClientBase self) -> char const *"},
	 { (char *)"ArClientBase_getDebugLogging", _wrap_ArClientBase_getDebugLogging, METH_VARARGS, (char *)"ArClientBase_getDebugLogging(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_blockingConnect", _wrap_ArClientBase_blockingConnect, METH_VARARGS, (char *)"\n"
		"blockingConnect(char const * host, int port, bool log=True, char const * user=None, char const * password=None, char const * openOnIP=None) -> bool\n"
		"blockingConnect(char const * host, int port, bool log=True, char const * user=None, char const * password=None) -> bool\n"
		"blockingConnect(char const * host, int port, bool log=True, char const * user=None) -> bool\n"
		"blockingConnect(char const * host, int port, bool log=True) -> bool\n"
		"ArClientBase_blockingConnect(ArClientBase self, char const * host, int port) -> bool\n"
		""},
	 { (char *)"ArClientBase_disconnect", _wrap_ArClientBase_disconnect, METH_VARARGS, (char *)"ArClientBase_disconnect(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_disconnectSoon", _wrap_ArClientBase_disconnectSoon, METH_VARARGS, (char *)"ArClientBase_disconnectSoon(ArClientBase self)"},
	 { (char *)"ArClientBase_isConnected", _wrap_ArClientBase_isConnected, METH_VARARGS, (char *)"ArClientBase_isConnected(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_wasRejected", _wrap_ArClientBase_wasRejected, METH_VARARGS, (char *)"ArClientBase_wasRejected(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_getState", _wrap_ArClientBase_getState, METH_VARARGS, (char *)"ArClientBase_getState(ArClientBase self) -> ArClientBase::ClientState"},
	 { (char *)"ArClientBase_addHandler", _wrap_ArClientBase_addHandler, METH_VARARGS, (char *)"\n"
		"addHandler(char const * name, ArFunctor1< ArNetPacket * > * functor, bool takeOwnershipOfFunctor=False) -> bool\n"
		"ArClientBase_addHandler(ArClientBase self, char const * name, ArFunctor1< ArNetPacket * > * functor) -> bool\n"
		""},
	 { (char *)"ArClientBase_remHandler", _wrap_ArClientBase_remHandler, METH_VARARGS, (char *)"ArClientBase_remHandler(ArClientBase self, char const * name, ArFunctor1< ArNetPacket * > * functor) -> bool"},
	 { (char *)"ArClientBase_request", _wrap_ArClientBase_request, METH_VARARGS, (char *)"\n"
		"request(char const * name, long mSec, ArNetPacket packet=None) -> bool\n"
		"ArClientBase_request(ArClientBase self, char const * name, long mSec) -> bool\n"
		""},
	 { (char *)"ArClientBase_requestStop", _wrap_ArClientBase_requestStop, METH_VARARGS, (char *)"ArClientBase_requestStop(ArClientBase self, char const * name) -> bool"},
	 { (char *)"ArClientBase_requestOnce", _wrap_ArClientBase_requestOnce, METH_VARARGS, (char *)"\n"
		"requestOnce(char const * name, ArNetPacket packet=None, bool quiet=False) -> bool\n"
		"requestOnce(char const * name, ArNetPacket packet=None) -> bool\n"
		"ArClientBase_requestOnce(ArClientBase self, char const * name) -> bool\n"
		""},
	 { (char *)"ArClientBase_requestOnceUdp", _wrap_ArClientBase_requestOnceUdp, METH_VARARGS, (char *)"\n"
		"requestOnceUdp(char const * name, ArNetPacket packet=None, bool quiet=False) -> bool\n"
		"requestOnceUdp(char const * name, ArNetPacket packet=None) -> bool\n"
		"ArClientBase_requestOnceUdp(ArClientBase self, char const * name) -> bool\n"
		""},
	 { (char *)"ArClientBase_requestOnceWithString", _wrap_ArClientBase_requestOnceWithString, METH_VARARGS, (char *)"ArClientBase_requestOnceWithString(ArClientBase self, char const * name, char const * str) -> bool"},
	 { (char *)"ArClientBase_requestOnceWithInt16", _wrap_ArClientBase_requestOnceWithInt16, METH_VARARGS, (char *)"ArClientBase_requestOnceWithInt16(ArClientBase self, char const * name, ArTypes::Byte2 val) -> bool"},
	 { (char *)"ArClientBase_requestOnceWithInt32", _wrap_ArClientBase_requestOnceWithInt32, METH_VARARGS, (char *)"ArClientBase_requestOnceWithInt32(ArClientBase self, char const * name, ArTypes::Byte4 val) -> bool"},
	 { (char *)"ArClientBase_requestOnceWithDouble", _wrap_ArClientBase_requestOnceWithDouble, METH_VARARGS, (char *)"ArClientBase_requestOnceWithDouble(ArClientBase self, char const * name, double val) -> bool"},
	 { (char *)"ArClientBase_dataExists", _wrap_ArClientBase_dataExists, METH_VARARGS, (char *)"ArClientBase_dataExists(ArClientBase self, char const * name) -> bool"},
	 { (char *)"ArClientBase_getHost", _wrap_ArClientBase_getHost, METH_VARARGS, (char *)"ArClientBase_getHost(ArClientBase self) -> char const *"},
	 { (char *)"ArClientBase_getPort", _wrap_ArClientBase_getPort, METH_VARARGS, (char *)"ArClientBase_getPort(ArClientBase self) -> int"},
	 { (char *)"ArClientBase_setServerKey", _wrap_ArClientBase_setServerKey, METH_VARARGS, (char *)"\n"
		"setServerKey(char const * serverKey, bool log=True)\n"
		"ArClientBase_setServerKey(ArClientBase self, char const * serverKey)\n"
		""},
	 { (char *)"ArClientBase_enforceProtocolVersion", _wrap_ArClientBase_enforceProtocolVersion, METH_VARARGS, (char *)"\n"
		"enforceProtocolVersion(char const * protocolVersion, bool log=True)\n"
		"ArClientBase_enforceProtocolVersion(ArClientBase self, char const * protocolVersion)\n"
		""},
	 { (char *)"ArClientBase_enforceType", _wrap_ArClientBase_enforceType, METH_VARARGS, (char *)"\n"
		"enforceType(ArServerCommands::Type type, bool log=True)\n"
		"ArClientBase_enforceType(ArClientBase self, ArServerCommands::Type type)\n"
		""},
	 { (char *)"ArClientBase_getLastPacketReceived", _wrap_ArClientBase_getLastPacketReceived, METH_VARARGS, (char *)"ArClientBase_getLastPacketReceived(ArClientBase self) -> ArTime"},
	 { (char *)"ArClientBase_setBackupTimeout", _wrap_ArClientBase_setBackupTimeout, METH_VARARGS, (char *)"ArClientBase_setBackupTimeout(ArClientBase self, double timeoutInMins)"},
	 { (char *)"ArClientBase_run", _wrap_ArClientBase_run, METH_VARARGS, (char *)"ArClientBase_run(ArClientBase self)"},
	 { (char *)"ArClientBase_runAsync", _wrap_ArClientBase_runAsync, METH_VARARGS, (char *)"ArClientBase_runAsync(ArClientBase self)"},
	 { (char *)"ArClientBase_stopRunning", _wrap_ArClientBase_stopRunning, METH_VARARGS, (char *)"ArClientBase_stopRunning(ArClientBase self)"},
	 { (char *)"ArClientBase_isStopped", _wrap_ArClientBase_isStopped, METH_VARARGS, (char *)"ArClientBase_isStopped(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_logDataList", _wrap_ArClientBase_logDataList, METH_VARARGS, (char *)"ArClientBase_logDataList(ArClientBase self)"},
	 { (char *)"ArClientBase_addCycleCallback", _wrap_ArClientBase_addCycleCallback, METH_VARARGS, (char *)"ArClientBase_addCycleCallback(ArClientBase self, ArFunctor functor)"},
	 { (char *)"ArClientBase_remCycleCallback", _wrap_ArClientBase_remCycleCallback, METH_VARARGS, (char *)"ArClientBase_remCycleCallback(ArClientBase self, ArFunctor functor)"},
	 { (char *)"ArClientBase_sendPacketTcp", _wrap_ArClientBase_sendPacketTcp, METH_VARARGS, (char *)"ArClientBase_sendPacketTcp(ArClientBase self, ArNetPacket packet) -> bool"},
	 { (char *)"ArClientBase_sendPacketUdp", _wrap_ArClientBase_sendPacketUdp, METH_VARARGS, (char *)"ArClientBase_sendPacketUdp(ArClientBase self, ArNetPacket packet) -> bool"},
	 { (char *)"ArClientBase_setConnectTimeoutTime", _wrap_ArClientBase_setConnectTimeoutTime, METH_VARARGS, (char *)"ArClientBase_setConnectTimeoutTime(ArClientBase self, int sec)"},
	 { (char *)"ArClientBase_getConnectTimeoutTime", _wrap_ArClientBase_getConnectTimeoutTime, METH_VARARGS, (char *)"ArClientBase_getConnectTimeoutTime(ArClientBase self) -> int"},
	 { (char *)"ArClientBase_logTracking", _wrap_ArClientBase_logTracking, METH_VARARGS, (char *)"ArClientBase_logTracking(ArClientBase self, bool terse)"},
	 { (char *)"ArClientBase_resetTracking", _wrap_ArClientBase_resetTracking, METH_VARARGS, (char *)"ArClientBase_resetTracking(ArClientBase self)"},
	 { (char *)"ArClientBase_addServerShutdownCB", _wrap_ArClientBase_addServerShutdownCB, METH_VARARGS, (char *)"\n"
		"addServerShutdownCB(ArFunctor functor, ArListPos::Pos position)\n"
		"ArClientBase_addServerShutdownCB(ArClientBase self, ArFunctor functor)\n"
		""},
	 { (char *)"ArClientBase_remServerShutdownCB", _wrap_ArClientBase_remServerShutdownCB, METH_VARARGS, (char *)"ArClientBase_remServerShutdownCB(ArClientBase self, ArFunctor functor)"},
	 { (char *)"ArClientBase_addDisconnectOnErrorCB", _wrap_ArClientBase_addDisconnectOnErrorCB, METH_VARARGS, (char *)"\n"
		"addDisconnectOnErrorCB(ArFunctor functor, ArListPos::Pos position)\n"
		"ArClientBase_addDisconnectOnErrorCB(ArClientBase self, ArFunctor functor)\n"
		""},
	 { (char *)"ArClientBase_remDisconnectOnErrorCB", _wrap_ArClientBase_remDisconnectOnErrorCB, METH_VARARGS, (char *)"ArClientBase_remDisconnectOnErrorCB(ArClientBase self, ArFunctor functor)"},
	 { (char *)"ArClientBase_loopOnce", _wrap_ArClientBase_loopOnce, METH_VARARGS, (char *)"ArClientBase_loopOnce(ArClientBase self)"},
	 { (char *)"ArClientBase_processPacket", _wrap_ArClientBase_processPacket, METH_VARARGS, (char *)"ArClientBase_processPacket(ArClientBase self, ArNetPacket packet, bool tcp)"},
	 { (char *)"ArClientBase_processPacketUdp", _wrap_ArClientBase_processPacketUdp, METH_VARARGS, (char *)"ArClientBase_processPacketUdp(ArClientBase self, ArNetPacket packet, sockaddr_in * sin)"},
	 { (char *)"ArClientBase_setTcpOnlyFromServer", _wrap_ArClientBase_setTcpOnlyFromServer, METH_VARARGS, (char *)"ArClientBase_setTcpOnlyFromServer(ArClientBase self)"},
	 { (char *)"ArClientBase_setTcpOnlyToServer", _wrap_ArClientBase_setTcpOnlyToServer, METH_VARARGS, (char *)"ArClientBase_setTcpOnlyToServer(ArClientBase self)"},
	 { (char *)"ArClientBase_isTcpOnlyFromServer", _wrap_ArClientBase_isTcpOnlyFromServer, METH_VARARGS, (char *)"ArClientBase_isTcpOnlyFromServer(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_isTcpOnlyToServer", _wrap_ArClientBase_isTcpOnlyToServer, METH_VARARGS, (char *)"ArClientBase_isTcpOnlyToServer(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_getClientKey", _wrap_ArClientBase_getClientKey, METH_VARARGS, (char *)"ArClientBase_getClientKey(ArClientBase self, unsigned char [ArClientBase::CLIENT_KEY_LENGTH] key)"},
	 { (char *)"ArClientBase_startNonBlockingDisconnect", _wrap_ArClientBase_startNonBlockingDisconnect, METH_VARARGS, (char *)"ArClientBase_startNonBlockingDisconnect(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_finishNonBlockingDisconnect", _wrap_ArClientBase_finishNonBlockingDisconnect, METH_VARARGS, (char *)"ArClientBase_finishNonBlockingDisconnect(ArClientBase self)"},
	 { (char *)"ArClientBase_getName", _wrap_ArClientBase_getName, METH_VARARGS, (char *)"\n"
		"getName(ArNetPacket packet, bool internalCall=False) -> char const\n"
		"getName(ArNetPacket packet) -> char const\n"
		"getName(unsigned int command, bool internalCall=False) -> char const\n"
		"ArClientBase_getName(ArClientBase self, unsigned int command) -> char const *\n"
		""},
	 { (char *)"ArClientBase_runThread", _wrap_ArClientBase_runThread, METH_VARARGS, (char *)"ArClientBase_runThread(ArClientBase self, void * arg) -> void *"},
	 { (char *)"ArClientBase_getTcpAddr", _wrap_ArClientBase_getTcpAddr, METH_VARARGS, (char *)"ArClientBase_getTcpAddr(ArClientBase self) -> in_addr *"},
	 { (char *)"ArClientBase_internalBlockingConnect", _wrap_ArClientBase_internalBlockingConnect, METH_VARARGS, (char *)"\n"
		"internalBlockingConnect(char const * host, int port, bool log, char const * user, char const * password, ArSocket tcpSocket, char const * openOnIP=None) -> bool\n"
		"ArClientBase_internalBlockingConnect(ArClientBase self, char const * host, int port, bool log, char const * user, char const * password, ArSocket tcpSocket) -> bool\n"
		""},
	 { (char *)"ArClientBase_internalNonBlockingConnectStart", _wrap_ArClientBase_internalNonBlockingConnectStart, METH_VARARGS, (char *)"\n"
		"internalNonBlockingConnectStart(char const * host, int port, bool log, char const * user, char const * password, ArSocket tcpSocket, char const * openOnIP=None) -> ArClientBase::NonBlockingConnectReturn\n"
		"ArClientBase_internalNonBlockingConnectStart(ArClientBase self, char const * host, int port, bool log, char const * user, char const * password, ArSocket tcpSocket) -> ArClientBase::NonBlockingConnectReturn\n"
		""},
	 { (char *)"ArClientBase_internalNonBlockingConnectContinue", _wrap_ArClientBase_internalNonBlockingConnectContinue, METH_VARARGS, (char *)"ArClientBase_internalNonBlockingConnectContinue(ArClientBase self) -> ArClientBase::NonBlockingConnectReturn"},
	 { (char *)"ArClientBase_getTcpSocket", _wrap_ArClientBase_getTcpSocket, METH_VARARGS, (char *)"ArClientBase_getTcpSocket(ArClientBase self) -> ArSocket"},
	 { (char *)"ArClientBase_getUdpSocket", _wrap_ArClientBase_getUdpSocket, METH_VARARGS, (char *)"ArClientBase_getUdpSocket(ArClientBase self) -> ArSocket"},
	 { (char *)"ArClientBase_getDataMap", _wrap_ArClientBase_getDataMap, METH_VARARGS, (char *)"ArClientBase_getDataMap(ArClientBase self) -> std::map< unsigned int,ArClientData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArClientData * > > > const *"},
	 { (char *)"ArClientBase_findCommandFromName", _wrap_ArClientBase_findCommandFromName, METH_VARARGS, (char *)"ArClientBase_findCommandFromName(ArClientBase self, char const * name) -> unsigned int"},
	 { (char *)"ArClientBase_requestByCommand", _wrap_ArClientBase_requestByCommand, METH_VARARGS, (char *)"\n"
		"requestByCommand(unsigned int command, long mSec, ArNetPacket packet=None) -> bool\n"
		"ArClientBase_requestByCommand(ArClientBase self, unsigned int command, long mSec) -> bool\n"
		""},
	 { (char *)"ArClientBase_requestStopByCommand", _wrap_ArClientBase_requestStopByCommand, METH_VARARGS, (char *)"ArClientBase_requestStopByCommand(ArClientBase self, unsigned int command) -> bool"},
	 { (char *)"ArClientBase_requestOnceByCommand", _wrap_ArClientBase_requestOnceByCommand, METH_VARARGS, (char *)"\n"
		"requestOnceByCommand(unsigned int command, ArNetPacket packet=None) -> bool\n"
		"ArClientBase_requestOnceByCommand(ArClientBase self, unsigned int command) -> bool\n"
		""},
	 { (char *)"ArClientBase_requestOnceByCommandUdp", _wrap_ArClientBase_requestOnceByCommandUdp, METH_VARARGS, (char *)"\n"
		"requestOnceByCommandUdp(unsigned int command, ArNetPacket packet=None) -> bool\n"
		"ArClientBase_requestOnceByCommandUdp(ArClientBase self, unsigned int command) -> bool\n"
		""},
	 { (char *)"ArClientBase_getReceivedDataList", _wrap_ArClientBase_getReceivedDataList, METH_VARARGS, (char *)"ArClientBase_getReceivedDataList(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_getReceivedArgRetList", _wrap_ArClientBase_getReceivedArgRetList, METH_VARARGS, (char *)"ArClientBase_getReceivedArgRetList(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_getReceivedGroupAndFlagsList", _wrap_ArClientBase_getReceivedGroupAndFlagsList, METH_VARARGS, (char *)"ArClientBase_getReceivedGroupAndFlagsList(ArClientBase self) -> bool"},
	 { (char *)"ArClientBase_getRejected", _wrap_ArClientBase_getRejected, METH_VARARGS, (char *)"ArClientBase_getRejected(ArClientBase self) -> int"},
	 { (char *)"ArClientBase_getRejectedString", _wrap_ArClientBase_getRejectedString, METH_VARARGS, (char *)"ArClientBase_getRejectedString(ArClientBase self) -> char const *"},
	 { (char *)"ArClientBase_swigregister", ArClientBase_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientCommands", _wrap_new_ArClientCommands, METH_VARARGS, (char *)"new_ArClientCommands() -> ArClientCommands"},
	 { (char *)"delete_ArClientCommands", _wrap_delete_ArClientCommands, METH_VARARGS, (char *)"delete_ArClientCommands(ArClientCommands self)"},
	 { (char *)"ArClientCommands_swigregister", ArClientCommands_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientFileListerItem", _wrap_new_ArClientFileListerItem, METH_VARARGS, (char *)"\n"
		"ArClientFileListerItem(char const * name, time_t atime, time_t mtime, ArTypes::UByte4 size)\n"
		"new_ArClientFileListerItem(ArClientFileListerItem item) -> ArClientFileListerItem\n"
		""},
	 { (char *)"delete_ArClientFileListerItem", _wrap_delete_ArClientFileListerItem, METH_VARARGS, (char *)"delete_ArClientFileListerItem(ArClientFileListerItem self)"},
	 { (char *)"ArClientFileListerItem_getName", _wrap_ArClientFileListerItem_getName, METH_VARARGS, (char *)"ArClientFileListerItem_getName(ArClientFileListerItem self) -> char const *"},
	 { (char *)"ArClientFileListerItem_getLastAccessedTime", _wrap_ArClientFileListerItem_getLastAccessedTime, METH_VARARGS, (char *)"ArClientFileListerItem_getLastAccessedTime(ArClientFileListerItem self) -> time_t"},
	 { (char *)"ArClientFileListerItem_getLastModifiedTime", _wrap_ArClientFileListerItem_getLastModifiedTime, METH_VARARGS, (char *)"ArClientFileListerItem_getLastModifiedTime(ArClientFileListerItem self) -> time_t"},
	 { (char *)"ArClientFileListerItem_getSize", _wrap_ArClientFileListerItem_getSize, METH_VARARGS, (char *)"ArClientFileListerItem_getSize(ArClientFileListerItem self) -> ArTypes::UByte4"},
	 { (char *)"ArClientFileListerItem_swigregister", ArClientFileListerItem_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientFileLister", _wrap_new_ArClientFileLister, METH_VARARGS, (char *)"new_ArClientFileLister(ArClientBase client) -> ArClientFileLister"},
	 { (char *)"delete_ArClientFileLister", _wrap_delete_ArClientFileLister, METH_VARARGS, (char *)"delete_ArClientFileLister(ArClientFileLister self)"},
	 { (char *)"ArClientFileLister_isAvailable", _wrap_ArClientFileLister_isAvailable, METH_VARARGS, (char *)"ArClientFileLister_isAvailable(ArClientFileLister self) -> bool"},
	 { (char *)"ArClientFileLister_changeToTopDir", _wrap_ArClientFileLister_changeToTopDir, METH_VARARGS, (char *)"ArClientFileLister_changeToTopDir(ArClientFileLister self)"},
	 { (char *)"ArClientFileLister_changeToDir", _wrap_ArClientFileLister_changeToDir, METH_VARARGS, (char *)"ArClientFileLister_changeToDir(ArClientFileLister self, char const * dir)"},
	 { (char *)"ArClientFileLister_upOneDir", _wrap_ArClientFileLister_upOneDir, METH_VARARGS, (char *)"ArClientFileLister_upOneDir(ArClientFileLister self)"},
	 { (char *)"ArClientFileLister_changeToAbsDir", _wrap_ArClientFileLister_changeToAbsDir, METH_VARARGS, (char *)"ArClientFileLister_changeToAbsDir(ArClientFileLister self, char const * dir)"},
	 { (char *)"ArClientFileLister_getCurrentDir", _wrap_ArClientFileLister_getCurrentDir, METH_VARARGS, (char *)"ArClientFileLister_getCurrentDir(ArClientFileLister self) -> char const *"},
	 { (char *)"ArClientFileLister_getWaitingForDir", _wrap_ArClientFileLister_getWaitingForDir, METH_VARARGS, (char *)"ArClientFileLister_getWaitingForDir(ArClientFileLister self) -> char const *"},
	 { (char *)"ArClientFileLister_getDirectories", _wrap_ArClientFileLister_getDirectories, METH_VARARGS, (char *)"ArClientFileLister_getDirectories(ArClientFileLister self) -> std::list< ArClientFileListerItem,std::allocator< ArClientFileListerItem > >"},
	 { (char *)"ArClientFileLister_getFiles", _wrap_ArClientFileLister_getFiles, METH_VARARGS, (char *)"ArClientFileLister_getFiles(ArClientFileLister self) -> std::list< ArClientFileListerItem,std::allocator< ArClientFileListerItem > >"},
	 { (char *)"ArClientFileLister_addUpdatedCallback", _wrap_ArClientFileLister_addUpdatedCallback, METH_VARARGS, (char *)"\n"
		"addUpdatedCallback(ArFunctor1_Int functor, ArListPos::Pos position)\n"
		"ArClientFileLister_addUpdatedCallback(ArClientFileLister self, ArFunctor1_Int functor)\n"
		""},
	 { (char *)"ArClientFileLister_remUpdatedCallback", _wrap_ArClientFileLister_remUpdatedCallback, METH_VARARGS, (char *)"ArClientFileLister_remUpdatedCallback(ArClientFileLister self, ArFunctor1_Int functor)"},
	 { (char *)"ArClientFileLister_getLastUpdated", _wrap_ArClientFileLister_getLastUpdated, METH_VARARGS, (char *)"ArClientFileLister_getLastUpdated(ArClientFileLister self) -> ArTime"},
	 { (char *)"ArClientFileLister_getLastRequested", _wrap_ArClientFileLister_getLastRequested, METH_VARARGS, (char *)"ArClientFileLister_getLastRequested(ArClientFileLister self) -> ArTime"},
	 { (char *)"ArClientFileLister_log", _wrap_ArClientFileLister_log, METH_VARARGS, (char *)"ArClientFileLister_log(ArClientFileLister self, bool withTimes)"},
	 { (char *)"ArClientFileLister_swigregister", ArClientFileLister_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientFileToClient", _wrap_new_ArClientFileToClient, METH_VARARGS, (char *)"new_ArClientFileToClient(ArClientBase client) -> ArClientFileToClient"},
	 { (char *)"delete_ArClientFileToClient", _wrap_delete_ArClientFileToClient, METH_VARARGS, (char *)"delete_ArClientFileToClient(ArClientFileToClient self)"},
	 { (char *)"ArClientFileToClient_isAvailable", _wrap_ArClientFileToClient_isAvailable, METH_VARARGS, (char *)"ArClientFileToClient_isAvailable(ArClientFileToClient self) -> bool"},
	 { (char *)"ArClientFileToClient_isAvailableSetTimestamp", _wrap_ArClientFileToClient_isAvailableSetTimestamp, METH_VARARGS, (char *)"ArClientFileToClient_isAvailableSetTimestamp(ArClientFileToClient self) -> bool"},
	 { (char *)"ArClientFileToClient_getFileFromDirectory", _wrap_ArClientFileToClient_getFileFromDirectory, METH_VARARGS, (char *)"\n"
		"getFileFromDirectory(char const * directory, char const * fileName, char const * clientFileName, bool isSetTimestamp=False) -> bool\n"
		"ArClientFileToClient_getFileFromDirectory(ArClientFileToClient self, char const * directory, char const * fileName, char const * clientFileName) -> bool\n"
		""},
	 { (char *)"ArClientFileToClient_cancelGet", _wrap_ArClientFileToClient_cancelGet, METH_VARARGS, (char *)"ArClientFileToClient_cancelGet(ArClientFileToClient self)"},
	 { (char *)"ArClientFileToClient_isWaitingForFile", _wrap_ArClientFileToClient_isWaitingForFile, METH_VARARGS, (char *)"ArClientFileToClient_isWaitingForFile(ArClientFileToClient self) -> bool"},
	 { (char *)"ArClientFileToClient_getDirectory", _wrap_ArClientFileToClient_getDirectory, METH_VARARGS, (char *)"ArClientFileToClient_getDirectory(ArClientFileToClient self) -> char const *"},
	 { (char *)"ArClientFileToClient_getFileName", _wrap_ArClientFileToClient_getFileName, METH_VARARGS, (char *)"ArClientFileToClient_getFileName(ArClientFileToClient self) -> char const *"},
	 { (char *)"ArClientFileToClient_getClientFileName", _wrap_ArClientFileToClient_getClientFileName, METH_VARARGS, (char *)"ArClientFileToClient_getClientFileName(ArClientFileToClient self) -> char const *"},
	 { (char *)"ArClientFileToClient_addFileReceivedCallback", _wrap_ArClientFileToClient_addFileReceivedCallback, METH_VARARGS, (char *)"\n"
		"addFileReceivedCallback(ArFunctor1_Int functor, ArListPos::Pos position)\n"
		"ArClientFileToClient_addFileReceivedCallback(ArClientFileToClient self, ArFunctor1_Int functor)\n"
		""},
	 { (char *)"ArClientFileToClient_remFileReceivedCallback", _wrap_ArClientFileToClient_remFileReceivedCallback, METH_VARARGS, (char *)"ArClientFileToClient_remFileReceivedCallback(ArClientFileToClient self, ArFunctor1_Int functor)"},
	 { (char *)"ArClientFileToClient_getLastReceived", _wrap_ArClientFileToClient_getLastReceived, METH_VARARGS, (char *)"ArClientFileToClient_getLastReceived(ArClientFileToClient self) -> ArTime"},
	 { (char *)"ArClientFileToClient_getLastRequested", _wrap_ArClientFileToClient_getLastRequested, METH_VARARGS, (char *)"ArClientFileToClient_getLastRequested(ArClientFileToClient self) -> ArTime"},
	 { (char *)"ArClientFileToClient_swigregister", ArClientFileToClient_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientFileFromClient", _wrap_new_ArClientFileFromClient, METH_VARARGS, (char *)"new_ArClientFileFromClient(ArClientBase client) -> ArClientFileFromClient"},
	 { (char *)"delete_ArClientFileFromClient", _wrap_delete_ArClientFileFromClient, METH_VARARGS, (char *)"delete_ArClientFileFromClient(ArClientFileFromClient self)"},
	 { (char *)"ArClientFileFromClient_isAvailable", _wrap_ArClientFileFromClient_isAvailable, METH_VARARGS, (char *)"ArClientFileFromClient_isAvailable(ArClientFileFromClient self) -> bool"},
	 { (char *)"ArClientFileFromClient_isAvailableSlow", _wrap_ArClientFileFromClient_isAvailableSlow, METH_VARARGS, (char *)"ArClientFileFromClient_isAvailableSlow(ArClientFileFromClient self) -> bool"},
	 { (char *)"ArClientFileFromClient_isAvailableFast", _wrap_ArClientFileFromClient_isAvailableFast, METH_VARARGS, (char *)"ArClientFileFromClient_isAvailableFast(ArClientFileFromClient self) -> bool"},
	 { (char *)"ArClientFileFromClient_isAvailableSetTimestamp", _wrap_ArClientFileFromClient_isAvailableSetTimestamp, METH_VARARGS, (char *)"ArClientFileFromClient_isAvailableSetTimestamp(ArClientFileFromClient self) -> bool"},
	 { (char *)"ArClientFileFromClient_putFileToDirectory", _wrap_ArClientFileFromClient_putFileToDirectory, METH_VARARGS, (char *)"\n"
		"putFileToDirectory(char const * directory, char const * fileName, char const * clientFileName, ArClientFileFromClient::SendSpeed sendSpeed, bool isSetTimestamp=False) -> bool\n"
		"putFileToDirectory(char const * directory, char const * fileName, char const * clientFileName, ArClientFileFromClient::SendSpeed sendSpeed) -> bool\n"
		"ArClientFileFromClient_putFileToDirectory(ArClientFileFromClient self, char const * directory, char const * fileName, char const * clientFileName) -> bool\n"
		""},
	 { (char *)"ArClientFileFromClient_cancelPut", _wrap_ArClientFileFromClient_cancelPut, METH_VARARGS, (char *)"ArClientFileFromClient_cancelPut(ArClientFileFromClient self)"},
	 { (char *)"ArClientFileFromClient_isWaitingForReturn", _wrap_ArClientFileFromClient_isWaitingForReturn, METH_VARARGS, (char *)"ArClientFileFromClient_isWaitingForReturn(ArClientFileFromClient self) -> bool"},
	 { (char *)"ArClientFileFromClient_getDirectory", _wrap_ArClientFileFromClient_getDirectory, METH_VARARGS, (char *)"ArClientFileFromClient_getDirectory(ArClientFileFromClient self) -> char const *"},
	 { (char *)"ArClientFileFromClient_getFileName", _wrap_ArClientFileFromClient_getFileName, METH_VARARGS, (char *)"ArClientFileFromClient_getFileName(ArClientFileFromClient self) -> char const *"},
	 { (char *)"ArClientFileFromClient_getClientFileName", _wrap_ArClientFileFromClient_getClientFileName, METH_VARARGS, (char *)"ArClientFileFromClient_getClientFileName(ArClientFileFromClient self) -> char const *"},
	 { (char *)"ArClientFileFromClient_addFileSentCallback", _wrap_ArClientFileFromClient_addFileSentCallback, METH_VARARGS, (char *)"\n"
		"addFileSentCallback(ArFunctor1_Int functor, ArListPos::Pos position)\n"
		"ArClientFileFromClient_addFileSentCallback(ArClientFileFromClient self, ArFunctor1_Int functor)\n"
		""},
	 { (char *)"ArClientFileFromClient_remFileSentCallback", _wrap_ArClientFileFromClient_remFileSentCallback, METH_VARARGS, (char *)"ArClientFileFromClient_remFileSentCallback(ArClientFileFromClient self, ArFunctor1_Int functor)"},
	 { (char *)"ArClientFileFromClient_getLastCompletedSend", _wrap_ArClientFileFromClient_getLastCompletedSend, METH_VARARGS, (char *)"ArClientFileFromClient_getLastCompletedSend(ArClientFileFromClient self) -> ArTime"},
	 { (char *)"ArClientFileFromClient_getLastStartedSend", _wrap_ArClientFileFromClient_getLastStartedSend, METH_VARARGS, (char *)"ArClientFileFromClient_getLastStartedSend(ArClientFileFromClient self) -> ArTime"},
	 { (char *)"ArClientFileFromClient_swigregister", ArClientFileFromClient_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientDeleteFileOnServer", _wrap_new_ArClientDeleteFileOnServer, METH_VARARGS, (char *)"new_ArClientDeleteFileOnServer(ArClientBase client) -> ArClientDeleteFileOnServer"},
	 { (char *)"delete_ArClientDeleteFileOnServer", _wrap_delete_ArClientDeleteFileOnServer, METH_VARARGS, (char *)"delete_ArClientDeleteFileOnServer(ArClientDeleteFileOnServer self)"},
	 { (char *)"ArClientDeleteFileOnServer_isAvailable", _wrap_ArClientDeleteFileOnServer_isAvailable, METH_VARARGS, (char *)"ArClientDeleteFileOnServer_isAvailable(ArClientDeleteFileOnServer self) -> bool"},
	 { (char *)"ArClientDeleteFileOnServer_deleteFileFromDirectory", _wrap_ArClientDeleteFileOnServer_deleteFileFromDirectory, METH_VARARGS, (char *)"ArClientDeleteFileOnServer_deleteFileFromDirectory(ArClientDeleteFileOnServer self, char const * directory, char const * fileName) -> bool"},
	 { (char *)"ArClientDeleteFileOnServer_isWaitingForReturn", _wrap_ArClientDeleteFileOnServer_isWaitingForReturn, METH_VARARGS, (char *)"ArClientDeleteFileOnServer_isWaitingForReturn(ArClientDeleteFileOnServer self) -> bool"},
	 { (char *)"ArClientDeleteFileOnServer_getDirectory", _wrap_ArClientDeleteFileOnServer_getDirectory, METH_VARARGS, (char *)"ArClientDeleteFileOnServer_getDirectory(ArClientDeleteFileOnServer self) -> char const *"},
	 { (char *)"ArClientDeleteFileOnServer_getFileName", _wrap_ArClientDeleteFileOnServer_getFileName, METH_VARARGS, (char *)"ArClientDeleteFileOnServer_getFileName(ArClientDeleteFileOnServer self) -> char const *"},
	 { (char *)"ArClientDeleteFileOnServer_addFileDeletedCallback", _wrap_ArClientDeleteFileOnServer_addFileDeletedCallback, METH_VARARGS, (char *)"\n"
		"addFileDeletedCallback(ArFunctor1_Int functor, ArListPos::Pos position)\n"
		"ArClientDeleteFileOnServer_addFileDeletedCallback(ArClientDeleteFileOnServer self, ArFunctor1_Int functor)\n"
		""},
	 { (char *)"ArClientDeleteFileOnServer_remFileDeletedCallback", _wrap_ArClientDeleteFileOnServer_remFileDeletedCallback, METH_VARARGS, (char *)"ArClientDeleteFileOnServer_remFileDeletedCallback(ArClientDeleteFileOnServer self, ArFunctor1_Int functor)"},
	 { (char *)"ArClientDeleteFileOnServer_getLastCompletedSend", _wrap_ArClientDeleteFileOnServer_getLastCompletedSend, METH_VARARGS, (char *)"ArClientDeleteFileOnServer_getLastCompletedSend(ArClientDeleteFileOnServer self) -> ArTime"},
	 { (char *)"ArClientDeleteFileOnServer_getLastStartedSend", _wrap_ArClientDeleteFileOnServer_getLastStartedSend, METH_VARARGS, (char *)"ArClientDeleteFileOnServer_getLastStartedSend(ArClientDeleteFileOnServer self) -> ArTime"},
	 { (char *)"ArClientDeleteFileOnServer_swigregister", ArClientDeleteFileOnServer_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientHandlerConfig", _wrap_new_ArClientHandlerConfig, METH_VARARGS, (char *)"\n"
		"ArClientHandlerConfig(ArClientBase client, bool ignoreBounds=False, char const * robotName=None, char const * logPrefix=None)\n"
		"ArClientHandlerConfig(ArClientBase client, bool ignoreBounds=False, char const * robotName=None)\n"
		"ArClientHandlerConfig(ArClientBase client, bool ignoreBounds=False)\n"
		"new_ArClientHandlerConfig(ArClientBase client) -> ArClientHandlerConfig\n"
		""},
	 { (char *)"delete_ArClientHandlerConfig", _wrap_delete_ArClientHandlerConfig, METH_VARARGS, (char *)"delete_ArClientHandlerConfig(ArClientHandlerConfig self)"},
	 { (char *)"ArClientHandlerConfig_requestConfigFromServer", _wrap_ArClientHandlerConfig_requestConfigFromServer, METH_VARARGS, (char *)"ArClientHandlerConfig_requestConfigFromServer(ArClientHandlerConfig self)"},
	 { (char *)"ArClientHandlerConfig_reloadConfigOnServer", _wrap_ArClientHandlerConfig_reloadConfigOnServer, METH_VARARGS, (char *)"ArClientHandlerConfig_reloadConfigOnServer(ArClientHandlerConfig self)"},
	 { (char *)"ArClientHandlerConfig_getConfigCopy", _wrap_ArClientHandlerConfig_getConfigCopy, METH_VARARGS, (char *)"ArClientHandlerConfig_getConfigCopy(ArClientHandlerConfig self) -> ArConfig"},
	 { (char *)"ArClientHandlerConfig_addGotConfigCB", _wrap_ArClientHandlerConfig_addGotConfigCB, METH_VARARGS, (char *)"\n"
		"addGotConfigCB(ArFunctor functor, ArListPos::Pos position)\n"
		"ArClientHandlerConfig_addGotConfigCB(ArClientHandlerConfig self, ArFunctor functor)\n"
		""},
	 { (char *)"ArClientHandlerConfig_remGotConfigCB", _wrap_ArClientHandlerConfig_remGotConfigCB, METH_VARARGS, (char *)"ArClientHandlerConfig_remGotConfigCB(ArClientHandlerConfig self, ArFunctor functor)"},
	 { (char *)"ArClientHandlerConfig_addSaveConfigSucceededCB", _wrap_ArClientHandlerConfig_addSaveConfigSucceededCB, METH_VARARGS, (char *)"\n"
		"addSaveConfigSucceededCB(ArFunctor functor, ArListPos::Pos position)\n"
		"ArClientHandlerConfig_addSaveConfigSucceededCB(ArClientHandlerConfig self, ArFunctor functor)\n"
		""},
	 { (char *)"ArClientHandlerConfig_remSaveConfigSucceededCB", _wrap_ArClientHandlerConfig_remSaveConfigSucceededCB, METH_VARARGS, (char *)"ArClientHandlerConfig_remSaveConfigSucceededCB(ArClientHandlerConfig self, ArFunctor functor)"},
	 { (char *)"ArClientHandlerConfig_addSaveConfigFailedCB", _wrap_ArClientHandlerConfig_addSaveConfigFailedCB, METH_VARARGS, (char *)"\n"
		"addSaveConfigFailedCB(ArFunctor1_CString functor, ArListPos::Pos position)\n"
		"ArClientHandlerConfig_addSaveConfigFailedCB(ArClientHandlerConfig self, ArFunctor1_CString functor)\n"
		""},
	 { (char *)"ArClientHandlerConfig_remSaveConfigFailedCB", _wrap_ArClientHandlerConfig_remSaveConfigFailedCB, METH_VARARGS, (char *)"ArClientHandlerConfig_remSaveConfigFailedCB(ArClientHandlerConfig self, ArFunctor1_CString functor)"},
	 { (char *)"ArClientHandlerConfig_haveGottenConfig", _wrap_ArClientHandlerConfig_haveGottenConfig, METH_VARARGS, (char *)"ArClientHandlerConfig_haveGottenConfig(ArClientHandlerConfig self) -> bool"},
	 { (char *)"ArClientHandlerConfig_saveConfigToServer", _wrap_ArClientHandlerConfig_saveConfigToServer, METH_VARARGS, (char *)"\n"
		"saveConfigToServer()\n"
		"saveConfigToServer(ArConfig config, std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > > const * ignoreTheseSections=None)\n"
		"ArClientHandlerConfig_saveConfigToServer(ArClientHandlerConfig self, ArConfig config)\n"
		""},
	 { (char *)"ArClientHandlerConfig_haveRequestedDefaults", _wrap_ArClientHandlerConfig_haveRequestedDefaults, METH_VARARGS, (char *)"ArClientHandlerConfig_haveRequestedDefaults(ArClientHandlerConfig self) -> bool"},
	 { (char *)"ArClientHandlerConfig_haveGottenDefaults", _wrap_ArClientHandlerConfig_haveGottenDefaults, METH_VARARGS, (char *)"ArClientHandlerConfig_haveGottenDefaults(ArClientHandlerConfig self) -> bool"},
	 { (char *)"ArClientHandlerConfig_canRequestDefaults", _wrap_ArClientHandlerConfig_canRequestDefaults, METH_VARARGS, (char *)"ArClientHandlerConfig_canRequestDefaults(ArClientHandlerConfig self) -> bool"},
	 { (char *)"ArClientHandlerConfig_requestDefaultConfigFromServer", _wrap_ArClientHandlerConfig_requestDefaultConfigFromServer, METH_VARARGS, (char *)"ArClientHandlerConfig_requestDefaultConfigFromServer(ArClientHandlerConfig self) -> bool"},
	 { (char *)"ArClientHandlerConfig_getDefaultConfig", _wrap_ArClientHandlerConfig_getDefaultConfig, METH_VARARGS, (char *)"ArClientHandlerConfig_getDefaultConfig(ArClientHandlerConfig self) -> ArConfig"},
	 { (char *)"ArClientHandlerConfig_requestConfigDefaults", _wrap_ArClientHandlerConfig_requestConfigDefaults, METH_VARARGS, (char *)"ArClientHandlerConfig_requestConfigDefaults(ArClientHandlerConfig self) -> bool"},
	 { (char *)"ArClientHandlerConfig_requestSectionDefaults", _wrap_ArClientHandlerConfig_requestSectionDefaults, METH_VARARGS, (char *)"ArClientHandlerConfig_requestSectionDefaults(ArClientHandlerConfig self, char const * section) -> bool"},
	 { (char *)"ArClientHandlerConfig_addGotConfigDefaultsCB", _wrap_ArClientHandlerConfig_addGotConfigDefaultsCB, METH_VARARGS, (char *)"\n"
		"addGotConfigDefaultsCB(ArFunctor functor, ArListPos::Pos position)\n"
		"ArClientHandlerConfig_addGotConfigDefaultsCB(ArClientHandlerConfig self, ArFunctor functor)\n"
		""},
	 { (char *)"ArClientHandlerConfig_remGotConfigDefaultsCB", _wrap_ArClientHandlerConfig_remGotConfigDefaultsCB, METH_VARARGS, (char *)"ArClientHandlerConfig_remGotConfigDefaultsCB(ArClientHandlerConfig self, ArFunctor functor)"},
	 { (char *)"ArClientHandlerConfig_isLastEditablePriorityAvailable", _wrap_ArClientHandlerConfig_isLastEditablePriorityAvailable, METH_VARARGS, (char *)"ArClientHandlerConfig_isLastEditablePriorityAvailable(ArClientHandlerConfig self) -> bool"},
	 { (char *)"ArClientHandlerConfig_requestLastEditablePriorityFromServer", _wrap_ArClientHandlerConfig_requestLastEditablePriorityFromServer, METH_VARARGS, (char *)"ArClientHandlerConfig_requestLastEditablePriorityFromServer(ArClientHandlerConfig self) -> bool"},
	 { (char *)"ArClientHandlerConfig_haveGottenLastEditablePriority", _wrap_ArClientHandlerConfig_haveGottenLastEditablePriority, METH_VARARGS, (char *)"ArClientHandlerConfig_haveGottenLastEditablePriority(ArClientHandlerConfig self) -> bool"},
	 { (char *)"ArClientHandlerConfig_getLastEditablePriority", _wrap_ArClientHandlerConfig_getLastEditablePriority, METH_VARARGS, (char *)"ArClientHandlerConfig_getLastEditablePriority(ArClientHandlerConfig self) -> ArPriority::Priority"},
	 { (char *)"ArClientHandlerConfig_addGotLastEditablePriorityCB", _wrap_ArClientHandlerConfig_addGotLastEditablePriorityCB, METH_VARARGS, (char *)"\n"
		"addGotLastEditablePriorityCB(ArFunctor functor, int position=50)\n"
		"ArClientHandlerConfig_addGotLastEditablePriorityCB(ArClientHandlerConfig self, ArFunctor functor)\n"
		""},
	 { (char *)"ArClientHandlerConfig_remGotLastEditablePriorityCB", _wrap_ArClientHandlerConfig_remGotLastEditablePriorityCB, METH_VARARGS, (char *)"ArClientHandlerConfig_remGotLastEditablePriorityCB(ArClientHandlerConfig self, ArFunctor functor)"},
	 { (char *)"ArClientHandlerConfig_getConfig", _wrap_ArClientHandlerConfig_getConfig, METH_VARARGS, (char *)"ArClientHandlerConfig_getConfig(ArClientHandlerConfig self) -> ArConfig"},
	 { (char *)"ArClientHandlerConfig_lock", _wrap_ArClientHandlerConfig_lock, METH_VARARGS, (char *)"ArClientHandlerConfig_lock(ArClientHandlerConfig self) -> int"},
	 { (char *)"ArClientHandlerConfig_tryLock", _wrap_ArClientHandlerConfig_tryLock, METH_VARARGS, (char *)"ArClientHandlerConfig_tryLock(ArClientHandlerConfig self) -> int"},
	 { (char *)"ArClientHandlerConfig_unlock", _wrap_ArClientHandlerConfig_unlock, METH_VARARGS, (char *)"ArClientHandlerConfig_unlock(ArClientHandlerConfig self) -> int"},
	 { (char *)"ArClientHandlerConfig_setQuiet", _wrap_ArClientHandlerConfig_setQuiet, METH_VARARGS, (char *)"ArClientHandlerConfig_setQuiet(ArClientHandlerConfig self, bool isQuiet)"},
	 { (char *)"ArClientHandlerConfig_swigregister", ArClientHandlerConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientSimpleConnector", _wrap_new_ArClientSimpleConnector, METH_VARARGS, (char *)"\n"
		"ArClientSimpleConnector(ArArgumentParser parser)\n"
		"ArClientSimpleConnector(int * argc)\n"
		"new_ArClientSimpleConnector(ArArgumentBuilder arguments) -> ArClientSimpleConnector\n"
		""},
	 { (char *)"delete_ArClientSimpleConnector", _wrap_delete_ArClientSimpleConnector, METH_VARARGS, (char *)"delete_ArClientSimpleConnector(ArClientSimpleConnector self)"},
	 { (char *)"ArClientSimpleConnector_connectClient", _wrap_ArClientSimpleConnector_connectClient, METH_VARARGS, (char *)"\n"
		"connectClient(ArClientBase client, bool log=True) -> bool\n"
		"ArClientSimpleConnector_connectClient(ArClientSimpleConnector self, ArClientBase client) -> bool\n"
		""},
	 { (char *)"ArClientSimpleConnector_parseArgs", _wrap_ArClientSimpleConnector_parseArgs, METH_VARARGS, (char *)"\n"
		"parseArgs() -> bool\n"
		"ArClientSimpleConnector_parseArgs(ArClientSimpleConnector self, ArArgumentParser parser) -> bool\n"
		""},
	 { (char *)"ArClientSimpleConnector_logOptions", _wrap_ArClientSimpleConnector_logOptions, METH_VARARGS, (char *)"ArClientSimpleConnector_logOptions(ArClientSimpleConnector self)"},
	 { (char *)"ArClientSimpleConnector_swigregister", ArClientSimpleConnector_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArHybridForwarderVideo", _wrap_new_ArHybridForwarderVideo, METH_VARARGS, (char *)"\n"
		"ArHybridForwarderVideo(ArServerBase server, ArClientBase client)\n"
		"ArHybridForwarderVideo(ArServerBase server, char const * hostname, int port=7070)\n"
		"ArHybridForwarderVideo(ArServerBase server, char const * hostname)\n"
		"new_ArHybridForwarderVideo(ArServerBase server) -> ArHybridForwarderVideo\n"
		""},
	 { (char *)"delete_ArHybridForwarderVideo", _wrap_delete_ArHybridForwarderVideo, METH_VARARGS, (char *)"delete_ArHybridForwarderVideo(ArHybridForwarderVideo self)"},
	 { (char *)"ArHybridForwarderVideo_isForwardingVideo", _wrap_ArHybridForwarderVideo_isForwardingVideo, METH_VARARGS, (char *)"ArHybridForwarderVideo_isForwardingVideo(ArHybridForwarderVideo self) -> bool"},
	 { (char *)"ArHybridForwarderVideo_getCameraName", _wrap_ArHybridForwarderVideo_getCameraName, METH_VARARGS, (char *)"ArHybridForwarderVideo_getCameraName(ArHybridForwarderVideo self) -> char const *"},
	 { (char *)"ArHybridForwarderVideo_setCameraName", _wrap_ArHybridForwarderVideo_setCameraName, METH_VARARGS, (char *)"ArHybridForwarderVideo_setCameraName(ArHybridForwarderVideo self, char const * cameraName)"},
	 { (char *)"ArHybridForwarderVideo_addToCameraCollection", _wrap_ArHybridForwarderVideo_addToCameraCollection, METH_VARARGS, (char *)"ArHybridForwarderVideo_addToCameraCollection(ArHybridForwarderVideo self, ArCameraCollection collection)"},
	 { (char *)"ArHybridForwarderVideo_sendVideoSize", _wrap_ArHybridForwarderVideo_sendVideoSize, METH_VARARGS, (char *)"ArHybridForwarderVideo_sendVideoSize(ArHybridForwarderVideo self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArHybridForwarderVideo_sendVideo", _wrap_ArHybridForwarderVideo_sendVideo, METH_VARARGS, (char *)"ArHybridForwarderVideo_sendVideo(ArHybridForwarderVideo self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArHybridForwarderVideo_receiveVideoSize", _wrap_ArHybridForwarderVideo_receiveVideoSize, METH_VARARGS, (char *)"ArHybridForwarderVideo_receiveVideoSize(ArHybridForwarderVideo self, ArNetPacket packet)"},
	 { (char *)"ArHybridForwarderVideo_receiveVideo", _wrap_ArHybridForwarderVideo_receiveVideo, METH_VARARGS, (char *)"ArHybridForwarderVideo_receiveVideo(ArHybridForwarderVideo self, ArNetPacket packet)"},
	 { (char *)"ArHybridForwarderVideo_clientCycleCallback", _wrap_ArHybridForwarderVideo_clientCycleCallback, METH_VARARGS, (char *)"ArHybridForwarderVideo_clientCycleCallback(ArHybridForwarderVideo self)"},
	 { (char *)"ArHybridForwarderVideo_setVideoRequestTime", _wrap_ArHybridForwarderVideo_setVideoRequestTime, METH_VARARGS, (char *)"\n"
		"setVideoRequestTime(int ms)\n"
		"ArHybridForwarderVideo_setVideoRequestTime(ArHybridForwarderVideo self) -> int\n"
		""},
	 { (char *)"ArHybridForwarderVideo_swigregister", ArHybridForwarderVideo_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArNetPacketReceiverTcp", _wrap_new_ArNetPacketReceiverTcp, METH_VARARGS, (char *)"new_ArNetPacketReceiverTcp() -> ArNetPacketReceiverTcp"},
	 { (char *)"delete_ArNetPacketReceiverTcp", _wrap_delete_ArNetPacketReceiverTcp, METH_VARARGS, (char *)"delete_ArNetPacketReceiverTcp(ArNetPacketReceiverTcp self)"},
	 { (char *)"ArNetPacketReceiverTcp_setSocket", _wrap_ArNetPacketReceiverTcp_setSocket, METH_VARARGS, (char *)"ArNetPacketReceiverTcp_setSocket(ArNetPacketReceiverTcp self, ArSocket socket)"},
	 { (char *)"ArNetPacketReceiverTcp_getSocket", _wrap_ArNetPacketReceiverTcp_getSocket, METH_VARARGS, (char *)"ArNetPacketReceiverTcp_getSocket(ArNetPacketReceiverTcp self) -> ArSocket"},
	 { (char *)"ArNetPacketReceiverTcp_setProcessPacketCB", _wrap_ArNetPacketReceiverTcp_setProcessPacketCB, METH_VARARGS, (char *)"ArNetPacketReceiverTcp_setProcessPacketCB(ArNetPacketReceiverTcp self, ArFunctor1< ArNetPacket * > * functor)"},
	 { (char *)"ArNetPacketReceiverTcp_getProcessPacketCB", _wrap_ArNetPacketReceiverTcp_getProcessPacketCB, METH_VARARGS, (char *)"ArNetPacketReceiverTcp_getProcessPacketCB(ArNetPacketReceiverTcp self) -> ArFunctor1< ArNetPacket * > *"},
	 { (char *)"ArNetPacketReceiverTcp_setLoggingPrefix", _wrap_ArNetPacketReceiverTcp_setLoggingPrefix, METH_VARARGS, (char *)"ArNetPacketReceiverTcp_setLoggingPrefix(ArNetPacketReceiverTcp self, char const * loggingPrefix)"},
	 { (char *)"ArNetPacketReceiverTcp_readData", _wrap_ArNetPacketReceiverTcp_readData, METH_VARARGS, (char *)"ArNetPacketReceiverTcp_readData(ArNetPacketReceiverTcp self) -> bool"},
	 { (char *)"ArNetPacketReceiverTcp_setQuiet", _wrap_ArNetPacketReceiverTcp_setQuiet, METH_VARARGS, (char *)"ArNetPacketReceiverTcp_setQuiet(ArNetPacketReceiverTcp self, bool quiet)"},
	 { (char *)"ArNetPacketReceiverTcp_getQuiet", _wrap_ArNetPacketReceiverTcp_getQuiet, METH_VARARGS, (char *)"ArNetPacketReceiverTcp_getQuiet(ArNetPacketReceiverTcp self) -> bool"},
	 { (char *)"ArNetPacketReceiverTcp_swigregister", ArNetPacketReceiverTcp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArNetPacketReceiverUdp", _wrap_new_ArNetPacketReceiverUdp, METH_VARARGS, (char *)"new_ArNetPacketReceiverUdp() -> ArNetPacketReceiverUdp"},
	 { (char *)"delete_ArNetPacketReceiverUdp", _wrap_delete_ArNetPacketReceiverUdp, METH_VARARGS, (char *)"delete_ArNetPacketReceiverUdp(ArNetPacketReceiverUdp self)"},
	 { (char *)"ArNetPacketReceiverUdp_setSocket", _wrap_ArNetPacketReceiverUdp_setSocket, METH_VARARGS, (char *)"ArNetPacketReceiverUdp_setSocket(ArNetPacketReceiverUdp self, ArSocket socket)"},
	 { (char *)"ArNetPacketReceiverUdp_getSocket", _wrap_ArNetPacketReceiverUdp_getSocket, METH_VARARGS, (char *)"ArNetPacketReceiverUdp_getSocket(ArNetPacketReceiverUdp self) -> ArSocket"},
	 { (char *)"ArNetPacketReceiverUdp_setProcessPacketCB", _wrap_ArNetPacketReceiverUdp_setProcessPacketCB, METH_VARARGS, (char *)"ArNetPacketReceiverUdp_setProcessPacketCB(ArNetPacketReceiverUdp self, ArFunctor2< ArNetPacket *,sockaddr_in * > * functor)"},
	 { (char *)"ArNetPacketReceiverUdp_getProcessPacketCB", _wrap_ArNetPacketReceiverUdp_getProcessPacketCB, METH_VARARGS, (char *)"ArNetPacketReceiverUdp_getProcessPacketCB(ArNetPacketReceiverUdp self) -> ArFunctor2< ArNetPacket *,sockaddr_in * > *"},
	 { (char *)"ArNetPacketReceiverUdp_readData", _wrap_ArNetPacketReceiverUdp_readData, METH_VARARGS, (char *)"ArNetPacketReceiverUdp_readData(ArNetPacketReceiverUdp self) -> bool"},
	 { (char *)"ArNetPacketReceiverUdp_swigregister", ArNetPacketReceiverUdp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArNetPacketSenderTcp", _wrap_new_ArNetPacketSenderTcp, METH_VARARGS, (char *)"new_ArNetPacketSenderTcp() -> ArNetPacketSenderTcp"},
	 { (char *)"delete_ArNetPacketSenderTcp", _wrap_delete_ArNetPacketSenderTcp, METH_VARARGS, (char *)"delete_ArNetPacketSenderTcp(ArNetPacketSenderTcp self)"},
	 { (char *)"ArNetPacketSenderTcp_setSocket", _wrap_ArNetPacketSenderTcp_setSocket, METH_VARARGS, (char *)"ArNetPacketSenderTcp_setSocket(ArNetPacketSenderTcp self, ArSocket socket)"},
	 { (char *)"ArNetPacketSenderTcp_getSocket", _wrap_ArNetPacketSenderTcp_getSocket, METH_VARARGS, (char *)"ArNetPacketSenderTcp_getSocket(ArNetPacketSenderTcp self) -> ArSocket"},
	 { (char *)"ArNetPacketSenderTcp_setBackupTimeout", _wrap_ArNetPacketSenderTcp_setBackupTimeout, METH_VARARGS, (char *)"ArNetPacketSenderTcp_setBackupTimeout(ArNetPacketSenderTcp self, double connectionTimeoutInMins)"},
	 { (char *)"ArNetPacketSenderTcp_setDebugLogging", _wrap_ArNetPacketSenderTcp_setDebugLogging, METH_VARARGS, (char *)"ArNetPacketSenderTcp_setDebugLogging(ArNetPacketSenderTcp self, bool debugLogging)"},
	 { (char *)"ArNetPacketSenderTcp_setLoggingPrefix", _wrap_ArNetPacketSenderTcp_setLoggingPrefix, METH_VARARGS, (char *)"ArNetPacketSenderTcp_setLoggingPrefix(ArNetPacketSenderTcp self, char const * prefix)"},
	 { (char *)"ArNetPacketSenderTcp_sendPacket", _wrap_ArNetPacketSenderTcp_sendPacket, METH_VARARGS, (char *)"\n"
		"sendPacket(ArNetPacket packet, char const * loggingString)\n"
		"ArNetPacketSenderTcp_sendPacket(ArNetPacketSenderTcp self, ArNetPacket packet)\n"
		""},
	 { (char *)"ArNetPacketSenderTcp_sendData", _wrap_ArNetPacketSenderTcp_sendData, METH_VARARGS, (char *)"ArNetPacketSenderTcp_sendData(ArNetPacketSenderTcp self) -> bool"},
	 { (char *)"ArNetPacketSenderTcp_swigregister", ArNetPacketSenderTcp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerClient", _wrap_new_ArServerClient, METH_VARARGS, (char *)"\n"
		"ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey, ArServerUserInfo userInfo=None, int rejecting=0, char const * rejectingString, bool debugLogging=False, char const * serverClientName, bool logPasswordFailureVerbosely=False, bool allowSlowPackets=True, bool allowIdlePackets=True, char const * enforceProtocolVersion, ArServerCommands::Type enforceType)\n"
		"ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey, ArServerUserInfo userInfo=None, int rejecting=0, char const * rejectingString, bool debugLogging=False, char const * serverClientName, bool logPasswordFailureVerbosely=False, bool allowSlowPackets=True, bool allowIdlePackets=True, char const * enforceProtocolVersion)\n"
		"ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey, ArServerUserInfo userInfo=None, int rejecting=0, char const * rejectingString, bool debugLogging=False, char const * serverClientName, bool logPasswordFailureVerbosely=False, bool allowSlowPackets=True, bool allowIdlePackets=True)\n"
		"ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey, ArServerUserInfo userInfo=None, int rejecting=0, char const * rejectingString, bool debugLogging=False, char const * serverClientName, bool logPasswordFailureVerbosely=False, bool allowSlowPackets=True)\n"
		"ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey, ArServerUserInfo userInfo=None, int rejecting=0, char const * rejectingString, bool debugLogging=False, char const * serverClientName, bool logPasswordFailureVerbosely=False)\n"
		"ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey, ArServerUserInfo userInfo=None, int rejecting=0, char const * rejectingString, bool debugLogging=False, char const * serverClientName)\n"
		"ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey, ArServerUserInfo userInfo=None, int rejecting=0, char const * rejectingString, bool debugLogging=False)\n"
		"ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey, ArServerUserInfo userInfo=None, int rejecting=0, char const * rejectingString)\n"
		"ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey, ArServerUserInfo userInfo=None, int rejecting=0)\n"
		"ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey, ArServerUserInfo userInfo=None)\n"
		"new_ArServerClient(ArSocket tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > * sendUdpCallback, std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > * dataMap, char const * passwordKey, char const * serverKey) -> ArServerClient\n"
		""},
	 { (char *)"delete_ArServerClient", _wrap_delete_ArServerClient, METH_VARARGS, (char *)"delete_ArServerClient(ArServerClient self)"},
	 { (char *)"ArServerClient_tcpCallback", _wrap_ArServerClient_tcpCallback, METH_VARARGS, (char *)"ArServerClient_tcpCallback(ArServerClient self) -> bool"},
	 { (char *)"ArServerClient_slowPacketCallback", _wrap_ArServerClient_slowPacketCallback, METH_VARARGS, (char *)"ArServerClient_slowPacketCallback(ArServerClient self) -> bool"},
	 { (char *)"ArServerClient_idlePacketCallback", _wrap_ArServerClient_idlePacketCallback, METH_VARARGS, (char *)"ArServerClient_idlePacketCallback(ArServerClient self) -> bool"},
	 { (char *)"ArServerClient_setBackupTimeout", _wrap_ArServerClient_setBackupTimeout, METH_VARARGS, (char *)"ArServerClient_setBackupTimeout(ArServerClient self, double timeoutInMins)"},
	 { (char *)"ArServerClient_processPacket", _wrap_ArServerClient_processPacket, METH_VARARGS, (char *)"\n"
		"processPacket(ArNetPacket packet, bool tcp=True)\n"
		"ArServerClient_processPacket(ArServerClient self, ArNetPacket packet)\n"
		""},
	 { (char *)"ArServerClient_sendPacketTcp", _wrap_ArServerClient_sendPacketTcp, METH_VARARGS, (char *)"ArServerClient_sendPacketTcp(ArServerClient self, ArNetPacket packet) -> bool"},
	 { (char *)"ArServerClient_sendPacketUdp", _wrap_ArServerClient_sendPacketUdp, METH_VARARGS, (char *)"ArServerClient_sendPacketUdp(ArServerClient self, ArNetPacket packet) -> bool"},
	 { (char *)"ArServerClient_hasGroupAccess", _wrap_ArServerClient_hasGroupAccess, METH_VARARGS, (char *)"ArServerClient_hasGroupAccess(ArServerClient self, char const * group) -> bool"},
	 { (char *)"ArServerClient_broadcastPacketTcp", _wrap_ArServerClient_broadcastPacketTcp, METH_VARARGS, (char *)"ArServerClient_broadcastPacketTcp(ArServerClient self, ArNetPacket packet)"},
	 { (char *)"ArServerClient_broadcastPacketUdp", _wrap_ArServerClient_broadcastPacketUdp, METH_VARARGS, (char *)"ArServerClient_broadcastPacketUdp(ArServerClient self, ArNetPacket packet)"},
	 { (char *)"ArServerClient_logTracking", _wrap_ArServerClient_logTracking, METH_VARARGS, (char *)"ArServerClient_logTracking(ArServerClient self, bool terse)"},
	 { (char *)"ArServerClient_resetTracking", _wrap_ArServerClient_resetTracking, METH_VARARGS, (char *)"ArServerClient_resetTracking(ArServerClient self)"},
	 { (char *)"ArServerClient_getIPString", _wrap_ArServerClient_getIPString, METH_VARARGS, (char *)"ArServerClient_getIPString(ArServerClient self) -> char const *"},
	 { (char *)"ArServerClient_getIdentifier", _wrap_ArServerClient_getIdentifier, METH_VARARGS, (char *)"ArServerClient_getIdentifier(ArServerClient self) -> ArServerClientIdentifier"},
	 { (char *)"ArServerClient_setIdentifier", _wrap_ArServerClient_setIdentifier, METH_VARARGS, (char *)"ArServerClient_setIdentifier(ArServerClient self, ArServerClientIdentifier identifier)"},
	 { (char *)"ArServerClient_shutdown", _wrap_ArServerClient_shutdown, METH_VARARGS, (char *)"ArServerClient_shutdown(ArServerClient self)"},
	 { (char *)"ArServerClient_setUdpAddress", _wrap_ArServerClient_setUdpAddress, METH_VARARGS, (char *)"ArServerClient_setUdpAddress(ArServerClient self, sockaddr_in * sin)"},
	 { (char *)"ArServerClient_getUdpAddress", _wrap_ArServerClient_getUdpAddress, METH_VARARGS, (char *)"ArServerClient_getUdpAddress(ArServerClient self) -> sockaddr_in *"},
	 { (char *)"ArServerClient_getAuthKey", _wrap_ArServerClient_getAuthKey, METH_VARARGS, (char *)"ArServerClient_getAuthKey(ArServerClient self) -> long"},
	 { (char *)"ArServerClient_processAuthPacket", _wrap_ArServerClient_processAuthPacket, METH_VARARGS, (char *)"ArServerClient_processAuthPacket(ArServerClient self, ArNetPacket packet, sockaddr_in * sin)"},
	 { (char *)"ArServerClient_handleRequests", _wrap_ArServerClient_handleRequests, METH_VARARGS, (char *)"ArServerClient_handleRequests(ArServerClient self)"},
	 { (char *)"ArServerClient_getTcpSocket", _wrap_ArServerClient_getTcpSocket, METH_VARARGS, (char *)"ArServerClient_getTcpSocket(ArServerClient self) -> ArSocket"},
	 { (char *)"ArServerClient_forceDisconnect", _wrap_ArServerClient_forceDisconnect, METH_VARARGS, (char *)"ArServerClient_forceDisconnect(ArServerClient self, bool quiet)"},
	 { (char *)"ArServerClient_getFrequency", _wrap_ArServerClient_getFrequency, METH_VARARGS, (char *)"ArServerClient_getFrequency(ArServerClient self, ArTypes::UByte2 command) -> long"},
	 { (char *)"ArServerClient_useTcpOnly", _wrap_ArServerClient_useTcpOnly, METH_VARARGS, (char *)"ArServerClient_useTcpOnly(ArServerClient self)"},
	 { (char *)"ArServerClient_isTcpOnly", _wrap_ArServerClient_isTcpOnly, METH_VARARGS, (char *)"ArServerClient_isTcpOnly(ArServerClient self) -> bool"},
	 { (char *)"ArServerClient_getState", _wrap_ArServerClient_getState, METH_VARARGS, (char *)"ArServerClient_getState(ArServerClient self) -> ArServerClient::ServerState"},
	 { (char *)"ArServerClient_hasSlowPackets", _wrap_ArServerClient_hasSlowPackets, METH_VARARGS, (char *)"ArServerClient_hasSlowPackets(ArServerClient self) -> bool"},
	 { (char *)"ArServerClient_hasIdlePackets", _wrap_ArServerClient_hasIdlePackets, METH_VARARGS, (char *)"ArServerClient_hasIdlePackets(ArServerClient self) -> bool"},
	 { (char *)"ArServerClient_startRequestTransaction", _wrap_ArServerClient_startRequestTransaction, METH_VARARGS, (char *)"ArServerClient_startRequestTransaction(ArServerClient self)"},
	 { (char *)"ArServerClient_endRequestTransaction", _wrap_ArServerClient_endRequestTransaction, METH_VARARGS, (char *)"ArServerClient_endRequestTransaction(ArServerClient self) -> bool"},
	 { (char *)"ArServerClient_getRequestTransactionCount", _wrap_ArServerClient_getRequestTransactionCount, METH_VARARGS, (char *)"ArServerClient_getRequestTransactionCount(ArServerClient self) -> int"},
	 { (char *)"ArServerClient_findCommandFromName", _wrap_ArServerClient_findCommandFromName, METH_VARARGS, (char *)"ArServerClient_findCommandFromName(ArServerClient self, char const * commandName) -> unsigned int"},
	 { (char *)"ArServerClient_getCreationTime", _wrap_ArServerClient_getCreationTime, METH_VARARGS, (char *)"ArServerClient_getCreationTime(ArServerClient self) -> ArTime"},
	 { (char *)"ArServerClient_findCommandName", _wrap_ArServerClient_findCommandName, METH_VARARGS, (char *)"ArServerClient_findCommandName(ArServerClient self, unsigned int command) -> char const *"},
	 { (char *)"ArServerClient_swigregister", ArServerClient_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerClientIdentifier", _wrap_new_ArServerClientIdentifier, METH_VARARGS, (char *)"new_ArServerClientIdentifier() -> ArServerClientIdentifier"},
	 { (char *)"delete_ArServerClientIdentifier", _wrap_delete_ArServerClientIdentifier, METH_VARARGS, (char *)"delete_ArServerClientIdentifier(ArServerClientIdentifier self)"},
	 { (char *)"ArServerClientIdentifier_getIDString", _wrap_ArServerClientIdentifier_getIDString, METH_VARARGS, (char *)"ArServerClientIdentifier_getIDString(ArServerClientIdentifier self) -> char const *"},
	 { (char *)"ArServerClientIdentifier_setConnectionID", _wrap_ArServerClientIdentifier_setConnectionID, METH_VARARGS, (char *)"ArServerClientIdentifier_setConnectionID(ArServerClientIdentifier self, ArTypes::UByte4 idNum)"},
	 { (char *)"ArServerClientIdentifier_getConnectionID", _wrap_ArServerClientIdentifier_getConnectionID, METH_VARARGS, (char *)"ArServerClientIdentifier_getConnectionID(ArServerClientIdentifier self) -> ArTypes::UByte4"},
	 { (char *)"ArServerClientIdentifier_setSelfIdentifier", _wrap_ArServerClientIdentifier_setSelfIdentifier, METH_VARARGS, (char *)"ArServerClientIdentifier_setSelfIdentifier(ArServerClientIdentifier self, char const * selfIdentifier)"},
	 { (char *)"ArServerClientIdentifier_getSelfIdentifier", _wrap_ArServerClientIdentifier_getSelfIdentifier, METH_VARARGS, (char *)"ArServerClientIdentifier_getSelfIdentifier(ArServerClientIdentifier self) -> char const *"},
	 { (char *)"ArServerClientIdentifier_setHereGoal", _wrap_ArServerClientIdentifier_setHereGoal, METH_VARARGS, (char *)"ArServerClientIdentifier_setHereGoal(ArServerClientIdentifier self, char const * selfIdentifier)"},
	 { (char *)"ArServerClientIdentifier_getHereGoal", _wrap_ArServerClientIdentifier_getHereGoal, METH_VARARGS, (char *)"ArServerClientIdentifier_getHereGoal(ArServerClientIdentifier self) -> char const *"},
	 { (char *)"ArServerClientIdentifier_matches", _wrap_ArServerClientIdentifier_matches, METH_VARARGS, (char *)"ArServerClientIdentifier_matches(ArServerClientIdentifier self, ArServerClientIdentifier identifier, bool matchConnectionID) -> bool"},
	 { (char *)"ArServerClientIdentifier_rebuildIDString", _wrap_ArServerClientIdentifier_rebuildIDString, METH_VARARGS, (char *)"ArServerClientIdentifier_rebuildIDString(ArServerClientIdentifier self)"},
	 { (char *)"ArServerClientIdentifier_swigregister", ArServerClientIdentifier_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerClientData", _wrap_new_ArServerClientData, METH_VARARGS, (char *)"new_ArServerClientData(ArServerData * serverData, long mSecInterval, ArNetPacket packet) -> ArServerClientData"},
	 { (char *)"delete_ArServerClientData", _wrap_delete_ArServerClientData, METH_VARARGS, (char *)"delete_ArServerClientData(ArServerClientData self)"},
	 { (char *)"ArServerClientData_getServerData", _wrap_ArServerClientData_getServerData, METH_VARARGS, (char *)"ArServerClientData_getServerData(ArServerClientData self) -> ArServerData *"},
	 { (char *)"ArServerClientData_getMSec", _wrap_ArServerClientData_getMSec, METH_VARARGS, (char *)"ArServerClientData_getMSec(ArServerClientData self) -> long"},
	 { (char *)"ArServerClientData_getPacket", _wrap_ArServerClientData_getPacket, METH_VARARGS, (char *)"ArServerClientData_getPacket(ArServerClientData self) -> ArNetPacket"},
	 { (char *)"ArServerClientData_getLastSent", _wrap_ArServerClientData_getLastSent, METH_VARARGS, (char *)"ArServerClientData_getLastSent(ArServerClientData self) -> ArTime"},
	 { (char *)"ArServerClientData_setLastSentToNow", _wrap_ArServerClientData_setLastSentToNow, METH_VARARGS, (char *)"ArServerClientData_setLastSentToNow(ArServerClientData self)"},
	 { (char *)"ArServerClientData_setMSec", _wrap_ArServerClientData_setMSec, METH_VARARGS, (char *)"ArServerClientData_setMSec(ArServerClientData self, long mSec)"},
	 { (char *)"ArServerClientData_setPacket", _wrap_ArServerClientData_setPacket, METH_VARARGS, (char *)"ArServerClientData_setPacket(ArServerClientData self, ArNetPacket packet)"},
	 { (char *)"ArServerClientData_swigregister", ArServerClientData_swigregister, METH_VARARGS, NULL},
	 { (char *)"ArServerCommands_toString", _wrap_ArServerCommands_toString, METH_VARARGS, (char *)"ArServerCommands_toString(ArServerCommands::Type type) -> char const *"},
	 { (char *)"new_ArServerCommands", _wrap_new_ArServerCommands, METH_VARARGS, (char *)"new_ArServerCommands() -> ArServerCommands"},
	 { (char *)"delete_ArServerCommands", _wrap_delete_ArServerCommands, METH_VARARGS, (char *)"delete_ArServerCommands(ArServerCommands self)"},
	 { (char *)"ArServerCommands_swigregister", ArServerCommands_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerFileLister", _wrap_new_ArServerFileLister, METH_VARARGS, (char *)"\n"
		"ArServerFileLister(ArServerBase server, char const * topDir, char const * defaultUploadDownloadDir=None)\n"
		"new_ArServerFileLister(ArServerBase server, char const * topDir) -> ArServerFileLister\n"
		""},
	 { (char *)"delete_ArServerFileLister", _wrap_delete_ArServerFileLister, METH_VARARGS, (char *)"delete_ArServerFileLister(ArServerFileLister self)"},
	 { (char *)"ArServerFileLister_getDirListing", _wrap_ArServerFileLister_getDirListing, METH_VARARGS, (char *)"ArServerFileLister_getDirListing(ArServerFileLister self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerFileLister_getDirListingMultiplePackets", _wrap_ArServerFileLister_getDirListingMultiplePackets, METH_VARARGS, (char *)"ArServerFileLister_getDirListingMultiplePackets(ArServerFileLister self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerFileLister_getDefaultUploadDownloadDir", _wrap_ArServerFileLister_getDefaultUploadDownloadDir, METH_VARARGS, (char *)"ArServerFileLister_getDefaultUploadDownloadDir(ArServerFileLister self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerFileLister_swigregister", ArServerFileLister_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerFileToClient", _wrap_new_ArServerFileToClient, METH_VARARGS, (char *)"new_ArServerFileToClient(ArServerBase server, char const * topDir) -> ArServerFileToClient"},
	 { (char *)"delete_ArServerFileToClient", _wrap_delete_ArServerFileToClient, METH_VARARGS, (char *)"delete_ArServerFileToClient(ArServerFileToClient self)"},
	 { (char *)"ArServerFileToClient_getFile", _wrap_ArServerFileToClient_getFile, METH_VARARGS, (char *)"ArServerFileToClient_getFile(ArServerFileToClient self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerFileToClient_getFileWithTimestamp", _wrap_ArServerFileToClient_getFileWithTimestamp, METH_VARARGS, (char *)"ArServerFileToClient_getFileWithTimestamp(ArServerFileToClient self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerFileToClient_swigregister", ArServerFileToClient_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerFileFromClient", _wrap_new_ArServerFileFromClient, METH_VARARGS, (char *)"new_ArServerFileFromClient(ArServerBase server, char const * topDir, char const * tempDir) -> ArServerFileFromClient"},
	 { (char *)"delete_ArServerFileFromClient", _wrap_delete_ArServerFileFromClient, METH_VARARGS, (char *)"delete_ArServerFileFromClient(ArServerFileFromClient self)"},
	 { (char *)"ArServerFileFromClient_putFile", _wrap_ArServerFileFromClient_putFile, METH_VARARGS, (char *)"ArServerFileFromClient_putFile(ArServerFileFromClient self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerFileFromClient_putFileInterleaved", _wrap_ArServerFileFromClient_putFileInterleaved, METH_VARARGS, (char *)"ArServerFileFromClient_putFileInterleaved(ArServerFileFromClient self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerFileFromClient_putFileWithTimestamp", _wrap_ArServerFileFromClient_putFileWithTimestamp, METH_VARARGS, (char *)"ArServerFileFromClient_putFileWithTimestamp(ArServerFileFromClient self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerFileFromClient_putFileWithTimestampInterleaved", _wrap_ArServerFileFromClient_putFileWithTimestampInterleaved, METH_VARARGS, (char *)"ArServerFileFromClient_putFileWithTimestampInterleaved(ArServerFileFromClient self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerFileFromClient_addPreMoveCallback", _wrap_ArServerFileFromClient_addPreMoveCallback, METH_VARARGS, (char *)"\n"
		"addPreMoveCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerFileFromClient_addPreMoveCallback(ArServerFileFromClient self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerFileFromClient_remPreMoveCallback", _wrap_ArServerFileFromClient_remPreMoveCallback, METH_VARARGS, (char *)"ArServerFileFromClient_remPreMoveCallback(ArServerFileFromClient self, ArFunctor functor)"},
	 { (char *)"ArServerFileFromClient_addPostMoveCallback", _wrap_ArServerFileFromClient_addPostMoveCallback, METH_VARARGS, (char *)"\n"
		"addPostMoveCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerFileFromClient_addPostMoveCallback(ArServerFileFromClient self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerFileFromClient_remPostMoveCallback", _wrap_ArServerFileFromClient_remPostMoveCallback, METH_VARARGS, (char *)"ArServerFileFromClient_remPostMoveCallback(ArServerFileFromClient self, ArFunctor functor)"},
	 { (char *)"ArServerFileFromClient_getMovingFileName", _wrap_ArServerFileFromClient_getMovingFileName, METH_VARARGS, (char *)"ArServerFileFromClient_getMovingFileName(ArServerFileFromClient self) -> char const *"},
	 { (char *)"ArServerFileFromClient_swigregister", ArServerFileFromClient_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerDeleteFileOnServer", _wrap_new_ArServerDeleteFileOnServer, METH_VARARGS, (char *)"new_ArServerDeleteFileOnServer(ArServerBase server, char const * topDir) -> ArServerDeleteFileOnServer"},
	 { (char *)"delete_ArServerDeleteFileOnServer", _wrap_delete_ArServerDeleteFileOnServer, METH_VARARGS, (char *)"delete_ArServerDeleteFileOnServer(ArServerDeleteFileOnServer self)"},
	 { (char *)"ArServerDeleteFileOnServer_deleteFile", _wrap_ArServerDeleteFileOnServer_deleteFile, METH_VARARGS, (char *)"ArServerDeleteFileOnServer_deleteFile(ArServerDeleteFileOnServer self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerDeleteFileOnServer_addPreDeleteCallback", _wrap_ArServerDeleteFileOnServer_addPreDeleteCallback, METH_VARARGS, (char *)"\n"
		"addPreDeleteCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerDeleteFileOnServer_addPreDeleteCallback(ArServerDeleteFileOnServer self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerDeleteFileOnServer_remPreDeleteCallback", _wrap_ArServerDeleteFileOnServer_remPreDeleteCallback, METH_VARARGS, (char *)"ArServerDeleteFileOnServer_remPreDeleteCallback(ArServerDeleteFileOnServer self, ArFunctor functor)"},
	 { (char *)"ArServerDeleteFileOnServer_addPostDeleteCallback", _wrap_ArServerDeleteFileOnServer_addPostDeleteCallback, METH_VARARGS, (char *)"\n"
		"addPostDeleteCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerDeleteFileOnServer_addPostDeleteCallback(ArServerDeleteFileOnServer self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerDeleteFileOnServer_remPostDeleteCallback", _wrap_ArServerDeleteFileOnServer_remPostDeleteCallback, METH_VARARGS, (char *)"ArServerDeleteFileOnServer_remPostDeleteCallback(ArServerDeleteFileOnServer self, ArFunctor functor)"},
	 { (char *)"ArServerDeleteFileOnServer_getDeletingFileName", _wrap_ArServerDeleteFileOnServer_getDeletingFileName, METH_VARARGS, (char *)"ArServerDeleteFileOnServer_getDeletingFileName(ArServerDeleteFileOnServer self) -> char const *"},
	 { (char *)"ArServerDeleteFileOnServer_swigregister", ArServerDeleteFileOnServer_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerHandlerCamera", _wrap_new_ArServerHandlerCamera, METH_VARARGS, (char *)"\n"
		"ArServerHandlerCamera(char const * cameraName, ArServerBase server, ArRobot robot, ArPTZ camera, ArCameraCollection collection)\n"
		"new_ArServerHandlerCamera(ArServerBase server, ArRobot robot, ArPTZ camera) -> ArServerHandlerCamera\n"
		""},
	 { (char *)"delete_ArServerHandlerCamera", _wrap_delete_ArServerHandlerCamera, METH_VARARGS, (char *)"delete_ArServerHandlerCamera(ArServerHandlerCamera self)"},
	 { (char *)"ArServerHandlerCamera_setCameraAbs", _wrap_ArServerHandlerCamera_setCameraAbs, METH_VARARGS, (char *)"\n"
		"setCameraAbs(double pan, double tilt, double zoom, bool lockRobot=True)\n"
		"ArServerHandlerCamera_setCameraAbs(ArServerHandlerCamera self, double pan, double tilt, double zoom)\n"
		""},
	 { (char *)"ArServerHandlerCamera_setCameraRel", _wrap_ArServerHandlerCamera_setCameraRel, METH_VARARGS, (char *)"\n"
		"setCameraRel(double pan, double tilt, double zoom, bool lockRobot=True)\n"
		"ArServerHandlerCamera_setCameraRel(ArServerHandlerCamera self, double pan, double tilt, double zoom)\n"
		""},
	 { (char *)"ArServerHandlerCamera_setCameraPct", _wrap_ArServerHandlerCamera_setCameraPct, METH_VARARGS, (char *)"\n"
		"setCameraPct(double panPct, double tiltPct, bool lockRobot=True)\n"
		"ArServerHandlerCamera_setCameraPct(ArServerHandlerCamera self, double panPct, double tiltPct)\n"
		""},
	 { (char *)"ArServerHandlerCamera_resetCamera", _wrap_ArServerHandlerCamera_resetCamera, METH_VARARGS, (char *)"\n"
		"resetCamera(bool lockRobot=True)\n"
		"ArServerHandlerCamera_resetCamera(ArServerHandlerCamera self)\n"
		""},
	 { (char *)"ArServerHandlerCamera_cameraModeLookAtGoal", _wrap_ArServerHandlerCamera_cameraModeLookAtGoal, METH_VARARGS, (char *)"ArServerHandlerCamera_cameraModeLookAtGoal(ArServerHandlerCamera self)"},
	 { (char *)"ArServerHandlerCamera_cameraModeLookAtPoint", _wrap_ArServerHandlerCamera_cameraModeLookAtPoint, METH_VARARGS, (char *)"\n"
		"cameraModeLookAtPoint(ArPose pose, bool controlZoom=True)\n"
		"ArServerHandlerCamera_cameraModeLookAtPoint(ArServerHandlerCamera self, ArPose pose)\n"
		""},
	 { (char *)"ArServerHandlerCamera_cameraModeLookAtGoalSetGoal", _wrap_ArServerHandlerCamera_cameraModeLookAtGoalSetGoal, METH_VARARGS, (char *)"ArServerHandlerCamera_cameraModeLookAtGoalSetGoal(ArServerHandlerCamera self, ArPose pose)"},
	 { (char *)"ArServerHandlerCamera_cameraModeLookAtGoalClearGoal", _wrap_ArServerHandlerCamera_cameraModeLookAtGoalClearGoal, METH_VARARGS, (char *)"ArServerHandlerCamera_cameraModeLookAtGoalClearGoal(ArServerHandlerCamera self)"},
	 { (char *)"ArServerHandlerCamera_cameraModePosition", _wrap_ArServerHandlerCamera_cameraModePosition, METH_VARARGS, (char *)"ArServerHandlerCamera_cameraModePosition(ArServerHandlerCamera self)"},
	 { (char *)"ArServerHandlerCamera_getCameraName", _wrap_ArServerHandlerCamera_getCameraName, METH_VARARGS, (char *)"ArServerHandlerCamera_getCameraName(ArServerHandlerCamera self) -> char const *"},
	 { (char *)"ArServerHandlerCamera_addToCameraCollection", _wrap_ArServerHandlerCamera_addToCameraCollection, METH_VARARGS, (char *)"ArServerHandlerCamera_addToCameraCollection(ArServerHandlerCamera self, ArCameraCollection collection)"},
	 { (char *)"ArServerHandlerCamera_handleGetCameraData", _wrap_ArServerHandlerCamera_handleGetCameraData, METH_VARARGS, (char *)"ArServerHandlerCamera_handleGetCameraData(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_handleGetCameraInfo", _wrap_ArServerHandlerCamera_handleGetCameraInfo, METH_VARARGS, (char *)"ArServerHandlerCamera_handleGetCameraInfo(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_handleSetCameraAbs", _wrap_ArServerHandlerCamera_handleSetCameraAbs, METH_VARARGS, (char *)"ArServerHandlerCamera_handleSetCameraAbs(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_handleSetCameraPct", _wrap_ArServerHandlerCamera_handleSetCameraPct, METH_VARARGS, (char *)"ArServerHandlerCamera_handleSetCameraPct(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_handleSetCameraRel", _wrap_ArServerHandlerCamera_handleSetCameraRel, METH_VARARGS, (char *)"ArServerHandlerCamera_handleSetCameraRel(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_handleGetCameraModeList", _wrap_ArServerHandlerCamera_handleGetCameraModeList, METH_VARARGS, (char *)"ArServerHandlerCamera_handleGetCameraModeList(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_handleCameraModeUpdated", _wrap_ArServerHandlerCamera_handleCameraModeUpdated, METH_VARARGS, (char *)"ArServerHandlerCamera_handleCameraModeUpdated(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_handleSetCameraMode", _wrap_ArServerHandlerCamera_handleSetCameraMode, METH_VARARGS, (char *)"ArServerHandlerCamera_handleSetCameraMode(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_handleResetCamera", _wrap_ArServerHandlerCamera_handleResetCamera, METH_VARARGS, (char *)"ArServerHandlerCamera_handleResetCamera(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_camera", _wrap_ArServerHandlerCamera_camera, METH_VARARGS, (char *)"ArServerHandlerCamera_camera(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_cameraAbs", _wrap_ArServerHandlerCamera_cameraAbs, METH_VARARGS, (char *)"ArServerHandlerCamera_cameraAbs(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_cameraPct", _wrap_ArServerHandlerCamera_cameraPct, METH_VARARGS, (char *)"ArServerHandlerCamera_cameraPct(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_cameraUpdate", _wrap_ArServerHandlerCamera_cameraUpdate, METH_VARARGS, (char *)"ArServerHandlerCamera_cameraUpdate(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_cameraInfo", _wrap_ArServerHandlerCamera_cameraInfo, METH_VARARGS, (char *)"ArServerHandlerCamera_cameraInfo(ArServerHandlerCamera self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCamera_swigregister", ArServerHandlerCamera_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerHandlerCameraCollection", _wrap_new_ArServerHandlerCameraCollection, METH_VARARGS, (char *)"new_ArServerHandlerCameraCollection(ArServerBase server, ArCameraCollection cameraCollection) -> ArServerHandlerCameraCollection"},
	 { (char *)"delete_ArServerHandlerCameraCollection", _wrap_delete_ArServerHandlerCameraCollection, METH_VARARGS, (char *)"delete_ArServerHandlerCameraCollection(ArServerHandlerCameraCollection self)"},
	 { (char *)"ArServerHandlerCameraCollection_getCameraList", _wrap_ArServerHandlerCameraCollection_getCameraList, METH_VARARGS, (char *)"ArServerHandlerCameraCollection_getCameraList(ArServerHandlerCameraCollection self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCameraCollection_setParams", _wrap_ArServerHandlerCameraCollection_setParams, METH_VARARGS, (char *)"ArServerHandlerCameraCollection_setParams(ArServerHandlerCameraCollection self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCameraCollection_handleCameraCollectionModified", _wrap_ArServerHandlerCameraCollection_handleCameraCollectionModified, METH_VARARGS, (char *)"ArServerHandlerCameraCollection_handleCameraCollectionModified(ArServerHandlerCameraCollection self)"},
	 { (char *)"ArServerHandlerCameraCollection_swigregister", ArServerHandlerCameraCollection_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerHandlerCommMonitor", _wrap_new_ArServerHandlerCommMonitor, METH_VARARGS, (char *)"\n"
		"ArServerHandlerCommMonitor(ArServerBase server, int heartbeatInterval)\n"
		"new_ArServerHandlerCommMonitor(ArServerBase server) -> ArServerHandlerCommMonitor\n"
		""},
	 { (char *)"delete_ArServerHandlerCommMonitor", _wrap_delete_ArServerHandlerCommMonitor, METH_VARARGS, (char *)"delete_ArServerHandlerCommMonitor(ArServerHandlerCommMonitor self)"},
	 { (char *)"ArServerHandlerCommMonitor_handleGetHeartbeatInterval", _wrap_ArServerHandlerCommMonitor_handleGetHeartbeatInterval, METH_VARARGS, (char *)"ArServerHandlerCommMonitor_handleGetHeartbeatInterval(ArServerHandlerCommMonitor self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCommMonitor_handleAckCommTcp", _wrap_ArServerHandlerCommMonitor_handleAckCommTcp, METH_VARARGS, (char *)"ArServerHandlerCommMonitor_handleAckCommTcp(ArServerHandlerCommMonitor self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCommMonitor_handleAckCommUdp", _wrap_ArServerHandlerCommMonitor_handleAckCommUdp, METH_VARARGS, (char *)"ArServerHandlerCommMonitor_handleAckCommUdp(ArServerHandlerCommMonitor self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCommMonitor_cycleCallback", _wrap_ArServerHandlerCommMonitor_cycleCallback, METH_VARARGS, (char *)"ArServerHandlerCommMonitor_cycleCallback(ArServerHandlerCommMonitor self)"},
	 { (char *)"ArServerHandlerCommMonitor_swigregister", ArServerHandlerCommMonitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerHandlerCommands", _wrap_new_ArServerHandlerCommands, METH_VARARGS, (char *)"new_ArServerHandlerCommands(ArServerBase server) -> ArServerHandlerCommands"},
	 { (char *)"delete_ArServerHandlerCommands", _wrap_delete_ArServerHandlerCommands, METH_VARARGS, (char *)"delete_ArServerHandlerCommands(ArServerHandlerCommands self)"},
	 { (char *)"ArServerHandlerCommands_setTextServer", _wrap_ArServerHandlerCommands_setTextServer, METH_VARARGS, (char *)"ArServerHandlerCommands_setTextServer(ArServerHandlerCommands self, ArNetServer textServer)"},
	 { (char *)"ArServerHandlerCommands_addCommand", _wrap_ArServerHandlerCommands_addCommand, METH_VARARGS, (char *)"\n"
		"addCommand(char const * name, char const * description, ArFunctor functor, char const * commandGroup=None) -> bool\n"
		"ArServerHandlerCommands_addCommand(ArServerHandlerCommands self, char const * name, char const * description, ArFunctor functor) -> bool\n"
		""},
	 { (char *)"ArServerHandlerCommands_addStringCommand", _wrap_ArServerHandlerCommands_addStringCommand, METH_VARARGS, (char *)"\n"
		"addStringCommand(char const * name, char const * description, ArFunctor1< ArArgumentBuilder * > * functor, char const * commandGroup=None) -> bool\n"
		"ArServerHandlerCommands_addStringCommand(ArServerHandlerCommands self, char const * name, char const * description, ArFunctor1< ArArgumentBuilder * > * functor) -> bool\n"
		""},
	 { (char *)"ArServerHandlerCommands_setPrefix", _wrap_ArServerHandlerCommands_setPrefix, METH_VARARGS, (char *)"ArServerHandlerCommands_setPrefix(ArServerHandlerCommands self, char const * prefix)"},
	 { (char *)"ArServerHandlerCommands_getPrefix", _wrap_ArServerHandlerCommands_getPrefix, METH_VARARGS, (char *)"ArServerHandlerCommands_getPrefix(ArServerHandlerCommands self) -> char const *"},
	 { (char *)"ArServerHandlerCommands_netListCommands", _wrap_ArServerHandlerCommands_netListCommands, METH_VARARGS, (char *)"ArServerHandlerCommands_netListCommands(ArServerHandlerCommands self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCommands_netListStringCommands", _wrap_ArServerHandlerCommands_netListStringCommands, METH_VARARGS, (char *)"ArServerHandlerCommands_netListStringCommands(ArServerHandlerCommands self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerCommands_swigregister", ArServerHandlerCommands_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerHandlerConfig", _wrap_new_ArServerHandlerConfig, METH_VARARGS, (char *)"\n"
		"ArServerHandlerConfig(ArServerBase server, ArConfig config, char const * defaultFile=None, char const * defaultFileBaseDirectory=None, bool allowFactory=True, char const * robotName=None, bool preventChanges=False, char const * preventChangesString=None)\n"
		"ArServerHandlerConfig(ArServerBase server, ArConfig config, char const * defaultFile=None, char const * defaultFileBaseDirectory=None, bool allowFactory=True, char const * robotName=None, bool preventChanges=False)\n"
		"ArServerHandlerConfig(ArServerBase server, ArConfig config, char const * defaultFile=None, char const * defaultFileBaseDirectory=None, bool allowFactory=True, char const * robotName=None)\n"
		"ArServerHandlerConfig(ArServerBase server, ArConfig config, char const * defaultFile=None, char const * defaultFileBaseDirectory=None, bool allowFactory=True)\n"
		"ArServerHandlerConfig(ArServerBase server, ArConfig config, char const * defaultFile=None, char const * defaultFileBaseDirectory=None)\n"
		"ArServerHandlerConfig(ArServerBase server, ArConfig config, char const * defaultFile=None)\n"
		"new_ArServerHandlerConfig(ArServerBase server, ArConfig config) -> ArServerHandlerConfig\n"
		""},
	 { (char *)"delete_ArServerHandlerConfig", _wrap_delete_ArServerHandlerConfig, METH_VARARGS, (char *)"delete_ArServerHandlerConfig(ArServerHandlerConfig self)"},
	 { (char *)"ArServerHandlerConfig_reloadConfig", _wrap_ArServerHandlerConfig_reloadConfig, METH_VARARGS, (char *)"ArServerHandlerConfig_reloadConfig(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_getConfigBySections", _wrap_ArServerHandlerConfig_getConfigBySections, METH_VARARGS, (char *)"ArServerHandlerConfig_getConfigBySections(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_getConfigBySectionsV2", _wrap_ArServerHandlerConfig_getConfigBySectionsV2, METH_VARARGS, (char *)"ArServerHandlerConfig_getConfigBySectionsV2(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_getConfigBySectionsV3", _wrap_ArServerHandlerConfig_getConfigBySectionsV3, METH_VARARGS, (char *)"ArServerHandlerConfig_getConfigBySectionsV3(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_getConfigBySectionsV4", _wrap_ArServerHandlerConfig_getConfigBySectionsV4, METH_VARARGS, (char *)"ArServerHandlerConfig_getConfigBySectionsV4(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_getConfig", _wrap_ArServerHandlerConfig_getConfig, METH_VARARGS, (char *)"ArServerHandlerConfig_getConfig(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_setConfig", _wrap_ArServerHandlerConfig_setConfig, METH_VARARGS, (char *)"ArServerHandlerConfig_setConfig(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_setConfigParam", _wrap_ArServerHandlerConfig_setConfigParam, METH_VARARGS, (char *)"ArServerHandlerConfig_setConfigParam(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_setConfigBySections", _wrap_ArServerHandlerConfig_setConfigBySections, METH_VARARGS, (char *)"ArServerHandlerConfig_setConfigBySections(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_setConfigBySectionsV2", _wrap_ArServerHandlerConfig_setConfigBySectionsV2, METH_VARARGS, (char *)"ArServerHandlerConfig_setConfigBySectionsV2(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_getConfigDefaults", _wrap_ArServerHandlerConfig_getConfigDefaults, METH_VARARGS, (char *)"ArServerHandlerConfig_getConfigDefaults(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_getConfigSectionFlags", _wrap_ArServerHandlerConfig_getConfigSectionFlags, METH_VARARGS, (char *)"ArServerHandlerConfig_getConfigSectionFlags(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_getLastEditablePriority", _wrap_ArServerHandlerConfig_getLastEditablePriority, METH_VARARGS, (char *)"ArServerHandlerConfig_getLastEditablePriority(ArServerHandlerConfig self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerConfig_addPreWriteCallback", _wrap_ArServerHandlerConfig_addPreWriteCallback, METH_VARARGS, (char *)"\n"
		"addPreWriteCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerHandlerConfig_addPreWriteCallback(ArServerHandlerConfig self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerHandlerConfig_remPreWriteCallback", _wrap_ArServerHandlerConfig_remPreWriteCallback, METH_VARARGS, (char *)"ArServerHandlerConfig_remPreWriteCallback(ArServerHandlerConfig self, ArFunctor functor)"},
	 { (char *)"ArServerHandlerConfig_addPostWriteCallback", _wrap_ArServerHandlerConfig_addPostWriteCallback, METH_VARARGS, (char *)"\n"
		"addPostWriteCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerHandlerConfig_addPostWriteCallback(ArServerHandlerConfig self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerHandlerConfig_remPostWriteCallback", _wrap_ArServerHandlerConfig_remPostWriteCallback, METH_VARARGS, (char *)"ArServerHandlerConfig_remPostWriteCallback(ArServerHandlerConfig self, ArFunctor functor)"},
	 { (char *)"ArServerHandlerConfig_addConfigUpdatedCallback", _wrap_ArServerHandlerConfig_addConfigUpdatedCallback, METH_VARARGS, (char *)"\n"
		"addConfigUpdatedCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerHandlerConfig_addConfigUpdatedCallback(ArServerHandlerConfig self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerHandlerConfig_remConfigUpdatedCallback", _wrap_ArServerHandlerConfig_remConfigUpdatedCallback, METH_VARARGS, (char *)"ArServerHandlerConfig_remConfigUpdatedCallback(ArServerHandlerConfig self, ArFunctor functor)"},
	 { (char *)"ArServerHandlerConfig_restartIO", _wrap_ArServerHandlerConfig_restartIO, METH_VARARGS, (char *)"ArServerHandlerConfig_restartIO(ArServerHandlerConfig self, char const * reason)"},
	 { (char *)"ArServerHandlerConfig_restartSoftware", _wrap_ArServerHandlerConfig_restartSoftware, METH_VARARGS, (char *)"ArServerHandlerConfig_restartSoftware(ArServerHandlerConfig self, char const * reason)"},
	 { (char *)"ArServerHandlerConfig_restartHardware", _wrap_ArServerHandlerConfig_restartHardware, METH_VARARGS, (char *)"ArServerHandlerConfig_restartHardware(ArServerHandlerConfig self, char const * reason)"},
	 { (char *)"ArServerHandlerConfig_addRestartIOCB", _wrap_ArServerHandlerConfig_addRestartIOCB, METH_VARARGS, (char *)"\n"
		"addRestartIOCB(ArFunctor functor, int position=50)\n"
		"ArServerHandlerConfig_addRestartIOCB(ArServerHandlerConfig self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerHandlerConfig_remRestartIOCB", _wrap_ArServerHandlerConfig_remRestartIOCB, METH_VARARGS, (char *)"ArServerHandlerConfig_remRestartIOCB(ArServerHandlerConfig self, ArFunctor functor)"},
	 { (char *)"ArServerHandlerConfig_setRestartSoftwareCB", _wrap_ArServerHandlerConfig_setRestartSoftwareCB, METH_VARARGS, (char *)"ArServerHandlerConfig_setRestartSoftwareCB(ArServerHandlerConfig self, ArFunctor restartServerCB)"},
	 { (char *)"ArServerHandlerConfig_getRestartSoftwareCB", _wrap_ArServerHandlerConfig_getRestartSoftwareCB, METH_VARARGS, (char *)"ArServerHandlerConfig_getRestartSoftwareCB(ArServerHandlerConfig self) -> ArFunctor"},
	 { (char *)"ArServerHandlerConfig_setRestartHardwareCB", _wrap_ArServerHandlerConfig_setRestartHardwareCB, METH_VARARGS, (char *)"ArServerHandlerConfig_setRestartHardwareCB(ArServerHandlerConfig self, ArFunctor restartRobotCB)"},
	 { (char *)"ArServerHandlerConfig_getRestartHardwareCB", _wrap_ArServerHandlerConfig_getRestartHardwareCB, METH_VARARGS, (char *)"ArServerHandlerConfig_getRestartHardwareCB(ArServerHandlerConfig self) -> ArFunctor"},
	 { (char *)"ArServerHandlerConfig_lockConfig", _wrap_ArServerHandlerConfig_lockConfig, METH_VARARGS, (char *)"ArServerHandlerConfig_lockConfig(ArServerHandlerConfig self) -> int"},
	 { (char *)"ArServerHandlerConfig_tryLockConfig", _wrap_ArServerHandlerConfig_tryLockConfig, METH_VARARGS, (char *)"ArServerHandlerConfig_tryLockConfig(ArServerHandlerConfig self) -> int"},
	 { (char *)"ArServerHandlerConfig_unlockConfig", _wrap_ArServerHandlerConfig_unlockConfig, METH_VARARGS, (char *)"ArServerHandlerConfig_unlockConfig(ArServerHandlerConfig self) -> int"},
	 { (char *)"ArServerHandlerConfig_writeConfig", _wrap_ArServerHandlerConfig_writeConfig, METH_VARARGS, (char *)"ArServerHandlerConfig_writeConfig(ArServerHandlerConfig self) -> bool"},
	 { (char *)"ArServerHandlerConfig_configUpdated", _wrap_ArServerHandlerConfig_configUpdated, METH_VARARGS, (char *)"\n"
		"configUpdated(ArServerClient client=None) -> bool\n"
		"ArServerHandlerConfig_configUpdated(ArServerHandlerConfig self) -> bool\n"
		""},
	 { (char *)"ArServerHandlerConfig_setPreventChanges", _wrap_ArServerHandlerConfig_setPreventChanges, METH_VARARGS, (char *)"\n"
		"setPreventChanges(bool preventChanges=False, char const * preventChangesString=None)\n"
		"setPreventChanges(bool preventChanges=False)\n"
		"ArServerHandlerConfig_setPreventChanges(ArServerHandlerConfig self)\n"
		""},
	 { (char *)"ArServerHandlerConfig_loadDefaultsFromFile", _wrap_ArServerHandlerConfig_loadDefaultsFromFile, METH_VARARGS, (char *)"ArServerHandlerConfig_loadDefaultsFromFile(ArServerHandlerConfig self) -> bool"},
	 { (char *)"ArServerHandlerConfig_loadDefaultsFromPacket", _wrap_ArServerHandlerConfig_loadDefaultsFromPacket, METH_VARARGS, (char *)"ArServerHandlerConfig_loadDefaultsFromPacket(ArServerHandlerConfig self, ArNetPacket packet) -> bool"},
	 { (char *)"ArServerHandlerConfig_createEmptyConfigDefaults", _wrap_ArServerHandlerConfig_createEmptyConfigDefaults, METH_VARARGS, (char *)"ArServerHandlerConfig_createEmptyConfigDefaults(ArServerHandlerConfig self)"},
	 { (char *)"ArServerHandlerConfig_setAllowFactory", _wrap_ArServerHandlerConfig_setAllowFactory, METH_VARARGS, (char *)"ArServerHandlerConfig_setAllowFactory(ArServerHandlerConfig self, bool allowFactory)"},
	 { (char *)"ArServerHandlerConfig_getAllowFactory", _wrap_ArServerHandlerConfig_getAllowFactory, METH_VARARGS, (char *)"ArServerHandlerConfig_getAllowFactory(ArServerHandlerConfig self) -> bool"},
	 { (char *)"ArServerHandlerConfig_swigregister", ArServerHandlerConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerHandlerMap", _wrap_new_ArServerHandlerMap, METH_VARARGS, (char *)"\n"
		"ArServerHandlerMap(ArServerBase server, ArMapInterface arMap=None, ArServerHandlerMap::DataToSend dataToSend)\n"
		"ArServerHandlerMap(ArServerBase server, ArMapInterface arMap=None)\n"
		"new_ArServerHandlerMap(ArServerBase server) -> ArServerHandlerMap\n"
		""},
	 { (char *)"delete_ArServerHandlerMap", _wrap_delete_ArServerHandlerMap, METH_VARARGS, (char *)"delete_ArServerHandlerMap(ArServerHandlerMap self)"},
	 { (char *)"ArServerHandlerMap_loadMap", _wrap_ArServerHandlerMap_loadMap, METH_VARARGS, (char *)"ArServerHandlerMap_loadMap(ArServerHandlerMap self, char const * mapFile) -> bool"},
	 { (char *)"ArServerHandlerMap_useMap", _wrap_ArServerHandlerMap_useMap, METH_VARARGS, (char *)"\n"
		"useMap(ArMapInterface mapObj, bool takeOwnershipOfMap=False)\n"
		"ArServerHandlerMap_useMap(ArServerHandlerMap self, ArMapInterface mapObj)\n"
		""},
	 { (char *)"ArServerHandlerMap_getMap", _wrap_ArServerHandlerMap_getMap, METH_VARARGS, (char *)"ArServerHandlerMap_getMap(ArServerHandlerMap self) -> ArMapInterface"},
	 { (char *)"ArServerHandlerMap_serverGetMapId", _wrap_ArServerHandlerMap_serverGetMapId, METH_VARARGS, (char *)"ArServerHandlerMap_serverGetMapId(ArServerHandlerMap self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerMap_serverGetMapName", _wrap_ArServerHandlerMap_serverGetMapName, METH_VARARGS, (char *)"ArServerHandlerMap_serverGetMapName(ArServerHandlerMap self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerMap_serverGetMap", _wrap_ArServerHandlerMap_serverGetMap, METH_VARARGS, (char *)"ArServerHandlerMap_serverGetMap(ArServerHandlerMap self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerMap_serverGetMapBinary", _wrap_ArServerHandlerMap_serverGetMapBinary, METH_VARARGS, (char *)"ArServerHandlerMap_serverGetMapBinary(ArServerHandlerMap self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerMap_serverGetMapMultiScans", _wrap_ArServerHandlerMap_serverGetMapMultiScans, METH_VARARGS, (char *)"ArServerHandlerMap_serverGetMapMultiScans(ArServerHandlerMap self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerMap_serverGetMapWithMaxCategory", _wrap_ArServerHandlerMap_serverGetMapWithMaxCategory, METH_VARARGS, (char *)"ArServerHandlerMap_serverGetMapWithMaxCategory(ArServerHandlerMap self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerMap_serverGetGoals", _wrap_ArServerHandlerMap_serverGetGoals, METH_VARARGS, (char *)"ArServerHandlerMap_serverGetGoals(ArServerHandlerMap self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerMap_setDataToSend", _wrap_ArServerHandlerMap_setDataToSend, METH_VARARGS, (char *)"ArServerHandlerMap_setDataToSend(ArServerHandlerMap self, ArServerHandlerMap::DataToSend dataToSend)"},
	 { (char *)"ArServerHandlerMap_getDataToSend", _wrap_ArServerHandlerMap_getDataToSend, METH_VARARGS, (char *)"ArServerHandlerMap_getDataToSend(ArServerHandlerMap self) -> ArServerHandlerMap::DataToSend"},
	 { (char *)"ArServerHandlerMap_swigregister", ArServerHandlerMap_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerHandlerMapping", _wrap_new_ArServerHandlerMapping, METH_VARARGS, (char *)"\n"
		"ArServerHandlerMapping(ArServerBase server, ArRobot robot, ArLaser laser, char const * baseDirectory, char const * tempDirectory, bool useReflectorValues=False, ArLaser laser2=None, char const * sickSuffix=None, char const * sick2Suffix=None, std::list< ArLaser *,std::allocator< ArLaser * > > * extraLasers=None)\n"
		"ArServerHandlerMapping(ArServerBase server, ArRobot robot, ArLaser laser, char const * baseDirectory, char const * tempDirectory, bool useReflectorValues=False, ArLaser laser2=None, char const * sickSuffix=None, char const * sick2Suffix=None)\n"
		"ArServerHandlerMapping(ArServerBase server, ArRobot robot, ArLaser laser, char const * baseDirectory, char const * tempDirectory, bool useReflectorValues=False, ArLaser laser2=None, char const * sickSuffix=None)\n"
		"ArServerHandlerMapping(ArServerBase server, ArRobot robot, ArLaser laser, char const * baseDirectory, char const * tempDirectory, bool useReflectorValues=False, ArLaser laser2=None)\n"
		"ArServerHandlerMapping(ArServerBase server, ArRobot robot, ArLaser laser, char const * baseDirectory, char const * tempDirectory, bool useReflectorValues=False)\n"
		"ArServerHandlerMapping(ArServerBase server, ArRobot robot, ArLaser laser, char const * baseDirectory, char const * tempDirectory)\n"
		"ArServerHandlerMapping(ArServerBase server, ArRobot robot, ArLaser laser, char const * baseDirectory)\n"
		"new_ArServerHandlerMapping(ArServerBase server, ArRobot robot, ArLaser laser) -> ArServerHandlerMapping\n"
		""},
	 { (char *)"delete_ArServerHandlerMapping", _wrap_delete_ArServerHandlerMapping, METH_VARARGS, (char *)"delete_ArServerHandlerMapping(ArServerHandlerMapping self)"},
	 { (char *)"ArServerHandlerMapping_serverMappingStart", _wrap_ArServerHandlerMapping_serverMappingStart, METH_VARARGS, (char *)"ArServerHandlerMapping_serverMappingStart(ArServerHandlerMapping self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerMapping_serverMappingEnd", _wrap_ArServerHandlerMapping_serverMappingEnd, METH_VARARGS, (char *)"ArServerHandlerMapping_serverMappingEnd(ArServerHandlerMapping self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerMapping_serverMappingStatus", _wrap_ArServerHandlerMapping_serverMappingStatus, METH_VARARGS, (char *)"ArServerHandlerMapping_serverMappingStatus(ArServerHandlerMapping self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerHandlerMapping_isMapping", _wrap_ArServerHandlerMapping_isMapping, METH_VARARGS, (char *)"ArServerHandlerMapping_isMapping(ArServerHandlerMapping self) -> bool"},
	 { (char *)"ArServerHandlerMapping_forceReading", _wrap_ArServerHandlerMapping_forceReading, METH_VARARGS, (char *)"ArServerHandlerMapping_forceReading(ArServerHandlerMapping self)"},
	 { (char *)"ArServerHandlerMapping_getFileName", _wrap_ArServerHandlerMapping_getFileName, METH_VARARGS, (char *)"ArServerHandlerMapping_getFileName(ArServerHandlerMapping self) -> char const *"},
	 { (char *)"ArServerHandlerMapping_getMapName", _wrap_ArServerHandlerMapping_getMapName, METH_VARARGS, (char *)"ArServerHandlerMapping_getMapName(ArServerHandlerMapping self) -> char const *"},
	 { (char *)"ArServerHandlerMapping_addSimpleCommands", _wrap_ArServerHandlerMapping_addSimpleCommands, METH_VARARGS, (char *)"ArServerHandlerMapping_addSimpleCommands(ArServerHandlerMapping self, ArServerHandlerCommands handlerCommands)"},
	 { (char *)"ArServerHandlerMapping_simpleLoopStart", _wrap_ArServerHandlerMapping_simpleLoopStart, METH_VARARGS, (char *)"ArServerHandlerMapping_simpleLoopStart(ArServerHandlerMapping self, ArArgumentBuilder arg)"},
	 { (char *)"ArServerHandlerMapping_simpleLoopEnd", _wrap_ArServerHandlerMapping_simpleLoopEnd, METH_VARARGS, (char *)"ArServerHandlerMapping_simpleLoopEnd(ArServerHandlerMapping self, ArArgumentBuilder arg)"},
	 { (char *)"ArServerHandlerMapping_addStringForStartOfLogs", _wrap_ArServerHandlerMapping_addStringForStartOfLogs, METH_VARARGS, (char *)"\n"
		"addStringForStartOfLogs(char const * str, ArListPos::Pos position)\n"
		"ArServerHandlerMapping_addStringForStartOfLogs(ArServerHandlerMapping self, char const * str)\n"
		""},
	 { (char *)"ArServerHandlerMapping_remStringForStartOfLogs", _wrap_ArServerHandlerMapping_remStringForStartOfLogs, METH_VARARGS, (char *)"ArServerHandlerMapping_remStringForStartOfLogs(ArServerHandlerMapping self, char const * str)"},
	 { (char *)"ArServerHandlerMapping_addTagToLog", _wrap_ArServerHandlerMapping_addTagToLog, METH_VARARGS, (char *)"ArServerHandlerMapping_addTagToLog(ArServerHandlerMapping self, char const * str)"},
	 { (char *)"ArServerHandlerMapping_addInfoToLog", _wrap_ArServerHandlerMapping_addInfoToLog, METH_VARARGS, (char *)"ArServerHandlerMapping_addInfoToLog(ArServerHandlerMapping self, char const * str)"},
	 { (char *)"ArServerHandlerMapping_addLocationData", _wrap_ArServerHandlerMapping_addLocationData, METH_VARARGS, (char *)"ArServerHandlerMapping_addLocationData(ArServerHandlerMapping self, char const * name, ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > * functor) -> bool"},
	 { (char *)"ArServerHandlerMapping_addMappingStartCallback", _wrap_ArServerHandlerMapping_addMappingStartCallback, METH_VARARGS, (char *)"\n"
		"addMappingStartCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerHandlerMapping_addMappingStartCallback(ArServerHandlerMapping self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerHandlerMapping_remMappingStartCallback", _wrap_ArServerHandlerMapping_remMappingStartCallback, METH_VARARGS, (char *)"ArServerHandlerMapping_remMappingStartCallback(ArServerHandlerMapping self, ArFunctor functor)"},
	 { (char *)"ArServerHandlerMapping_addMappingBegunCallback", _wrap_ArServerHandlerMapping_addMappingBegunCallback, METH_VARARGS, (char *)"\n"
		"addMappingBegunCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerHandlerMapping_addMappingBegunCallback(ArServerHandlerMapping self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerHandlerMapping_remMappingBegunCallback", _wrap_ArServerHandlerMapping_remMappingBegunCallback, METH_VARARGS, (char *)"ArServerHandlerMapping_remMappingBegunCallback(ArServerHandlerMapping self, ArFunctor functor)"},
	 { (char *)"ArServerHandlerMapping_addMappingEndCallback", _wrap_ArServerHandlerMapping_addMappingEndCallback, METH_VARARGS, (char *)"\n"
		"addMappingEndCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerHandlerMapping_addMappingEndCallback(ArServerHandlerMapping self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerHandlerMapping_remMappingEndCallback", _wrap_ArServerHandlerMapping_remMappingEndCallback, METH_VARARGS, (char *)"ArServerHandlerMapping_remMappingEndCallback(ArServerHandlerMapping self, ArFunctor functor)"},
	 { (char *)"ArServerHandlerMapping_addMappingEndedCallback", _wrap_ArServerHandlerMapping_addMappingEndedCallback, METH_VARARGS, (char *)"\n"
		"addMappingEndedCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerHandlerMapping_addMappingEndedCallback(ArServerHandlerMapping self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerHandlerMapping_remMappingEndedCallback", _wrap_ArServerHandlerMapping_remMappingEndedCallback, METH_VARARGS, (char *)"ArServerHandlerMapping_remMappingEndedCallback(ArServerHandlerMapping self, ArFunctor functor)"},
	 { (char *)"ArServerHandlerMapping_addPreMoveCallback", _wrap_ArServerHandlerMapping_addPreMoveCallback, METH_VARARGS, (char *)"\n"
		"addPreMoveCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerHandlerMapping_addPreMoveCallback(ArServerHandlerMapping self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerHandlerMapping_remPreMoveCallback", _wrap_ArServerHandlerMapping_remPreMoveCallback, METH_VARARGS, (char *)"ArServerHandlerMapping_remPreMoveCallback(ArServerHandlerMapping self, ArFunctor functor)"},
	 { (char *)"ArServerHandlerMapping_addPostMoveCallback", _wrap_ArServerHandlerMapping_addPostMoveCallback, METH_VARARGS, (char *)"\n"
		"addPostMoveCallback(ArFunctor functor, ArListPos::Pos position)\n"
		"ArServerHandlerMapping_addPostMoveCallback(ArServerHandlerMapping self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerHandlerMapping_remPostMoveCallback", _wrap_ArServerHandlerMapping_remPostMoveCallback, METH_VARARGS, (char *)"ArServerHandlerMapping_remPostMoveCallback(ArServerHandlerMapping self, ArFunctor functor)"},
	 { (char *)"ArServerHandlerMapping_packetHandler", _wrap_ArServerHandlerMapping_packetHandler, METH_VARARGS, (char *)"ArServerHandlerMapping_packetHandler(ArServerHandlerMapping self, ArRobotPacket packet) -> bool"},
	 { (char *)"ArServerHandlerMapping_getLocationDataMap", _wrap_ArServerHandlerMapping_getLocationDataMap, METH_VARARGS, (char *)"ArServerHandlerMapping_getLocationDataMap(ArServerHandlerMapping self) -> std::map< std::string,ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > *,ArStrCaseCmpOp,std::allocator< std::pair< std::string const,ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > * > > > const *"},
	 { (char *)"ArServerHandlerMapping_addStringsForStartOfLogToMap", _wrap_ArServerHandlerMapping_addStringsForStartOfLogToMap, METH_VARARGS, (char *)"ArServerHandlerMapping_addStringsForStartOfLogToMap(ArServerHandlerMapping self, ArMap arMap)"},
	 { (char *)"ArServerHandlerMapping_getZipFile", _wrap_ArServerHandlerMapping_getZipFile, METH_VARARGS, (char *)"ArServerHandlerMapping_getZipFile(ArServerHandlerMapping self) -> ArZippable *"},
	 { (char *)"ArServerHandlerMapping_getSnapshotZipFile", _wrap_ArServerHandlerMapping_getSnapshotZipFile, METH_VARARGS, (char *)"ArServerHandlerMapping_getSnapshotZipFile(ArServerHandlerMapping self) -> ArZippable *"},
	 { (char *)"ArServerHandlerMapping_setZipFile", _wrap_ArServerHandlerMapping_setZipFile, METH_VARARGS, (char *)"ArServerHandlerMapping_setZipFile(ArServerHandlerMapping self, ArZippable * zipFile)"},
	 { (char *)"ArServerHandlerMapping_setSnapshotZipFile", _wrap_ArServerHandlerMapping_setSnapshotZipFile, METH_VARARGS, (char *)"ArServerHandlerMapping_setSnapshotZipFile(ArServerHandlerMapping self, ArZippable * zipFile)"},
	 { (char *)"ArServerHandlerMapping_swigregister", ArServerHandlerMapping_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerInfoDrawings", _wrap_new_ArServerInfoDrawings, METH_VARARGS, (char *)"new_ArServerInfoDrawings(ArServerBase server) -> ArServerInfoDrawings"},
	 { (char *)"delete_ArServerInfoDrawings", _wrap_delete_ArServerInfoDrawings, METH_VARARGS, (char *)"delete_ArServerInfoDrawings(ArServerInfoDrawings self)"},
	 { (char *)"ArServerInfoDrawings_addDrawing", _wrap_ArServerInfoDrawings_addDrawing, METH_VARARGS, (char *)"ArServerInfoDrawings_addDrawing(ArServerInfoDrawings self, ArDrawingData drawingData, char const * name, ArFunctor2< ArServerClient *,ArNetPacket * > * functor) -> bool"},
	 { (char *)"ArServerInfoDrawings_addRangeDevice", _wrap_ArServerInfoDrawings_addRangeDevice, METH_VARARGS, (char *)"ArServerInfoDrawings_addRangeDevice(ArServerInfoDrawings self, ArRangeDevice rangeDevice) -> bool"},
	 { (char *)"ArServerInfoDrawings_addRobotsRangeDevices", _wrap_ArServerInfoDrawings_addRobotsRangeDevices, METH_VARARGS, (char *)"ArServerInfoDrawings_addRobotsRangeDevices(ArServerInfoDrawings self, ArRobot robot) -> bool"},
	 { (char *)"ArServerInfoDrawings_netListDrawings", _wrap_ArServerInfoDrawings_netListDrawings, METH_VARARGS, (char *)"ArServerInfoDrawings_netListDrawings(ArServerInfoDrawings self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoDrawings_netGetDrawingList", _wrap_ArServerInfoDrawings_netGetDrawingList, METH_VARARGS, (char *)"ArServerInfoDrawings_netGetDrawingList(ArServerInfoDrawings self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoDrawings_netRangeDeviceCurrent", _wrap_ArServerInfoDrawings_netRangeDeviceCurrent, METH_VARARGS, (char *)"ArServerInfoDrawings_netRangeDeviceCurrent(ArServerInfoDrawings self, ArServerClient client, ArNetPacket packet, ArRangeDevice device)"},
	 { (char *)"ArServerInfoDrawings_netRangeDeviceCumulative", _wrap_ArServerInfoDrawings_netRangeDeviceCumulative, METH_VARARGS, (char *)"ArServerInfoDrawings_netRangeDeviceCumulative(ArServerInfoDrawings self, ArServerClient client, ArNetPacket packet, ArRangeDevice device)"},
	 { (char *)"ArServerInfoDrawings_internalGetDrawingData", _wrap_ArServerInfoDrawings_internalGetDrawingData, METH_VARARGS, (char *)"ArServerInfoDrawings_internalGetDrawingData(ArServerInfoDrawings self, char const * name) -> ArDrawingData"},
	 { (char *)"ArServerInfoDrawings_internalGetDrawingCallback", _wrap_ArServerInfoDrawings_internalGetDrawingCallback, METH_VARARGS, (char *)"ArServerInfoDrawings_internalGetDrawingCallback(ArServerInfoDrawings self, char const * name) -> ArFunctor2< ArServerClient *,ArNetPacket * > *"},
	 { (char *)"ArServerInfoDrawings_swigregister", ArServerInfoDrawings_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerInfoRobot", _wrap_new_ArServerInfoRobot, METH_VARARGS, (char *)"new_ArServerInfoRobot(ArServerBase server, ArRobot robot) -> ArServerInfoRobot"},
	 { (char *)"delete_ArServerInfoRobot", _wrap_delete_ArServerInfoRobot, METH_VARARGS, (char *)"delete_ArServerInfoRobot(ArServerInfoRobot self)"},
	 { (char *)"ArServerInfoRobot_update", _wrap_ArServerInfoRobot_update, METH_VARARGS, (char *)"ArServerInfoRobot_update(ArServerInfoRobot self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoRobot_updateNumbers", _wrap_ArServerInfoRobot_updateNumbers, METH_VARARGS, (char *)"ArServerInfoRobot_updateNumbers(ArServerInfoRobot self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoRobot_updateStrings", _wrap_ArServerInfoRobot_updateStrings, METH_VARARGS, (char *)"ArServerInfoRobot_updateStrings(ArServerInfoRobot self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoRobot_batteryInfo", _wrap_ArServerInfoRobot_batteryInfo, METH_VARARGS, (char *)"ArServerInfoRobot_batteryInfo(ArServerInfoRobot self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoRobot_physicalInfo", _wrap_ArServerInfoRobot_physicalInfo, METH_VARARGS, (char *)"ArServerInfoRobot_physicalInfo(ArServerInfoRobot self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoRobot_activityTimeInfo", _wrap_ArServerInfoRobot_activityTimeInfo, METH_VARARGS, (char *)"ArServerInfoRobot_activityTimeInfo(ArServerInfoRobot self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoRobot_swigregister", ArServerInfoRobot_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerInfoSensor", _wrap_new_ArServerInfoSensor, METH_VARARGS, (char *)"new_ArServerInfoSensor(ArServerBase server, ArRobot robot) -> ArServerInfoSensor"},
	 { (char *)"delete_ArServerInfoSensor", _wrap_delete_ArServerInfoSensor, METH_VARARGS, (char *)"delete_ArServerInfoSensor(ArServerInfoSensor self)"},
	 { (char *)"ArServerInfoSensor_getSensorList", _wrap_ArServerInfoSensor_getSensorList, METH_VARARGS, (char *)"ArServerInfoSensor_getSensorList(ArServerInfoSensor self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoSensor_getSensorCurrent", _wrap_ArServerInfoSensor_getSensorCurrent, METH_VARARGS, (char *)"ArServerInfoSensor_getSensorCurrent(ArServerInfoSensor self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoSensor_getSensorCumulative", _wrap_ArServerInfoSensor_getSensorCumulative, METH_VARARGS, (char *)"ArServerInfoSensor_getSensorCumulative(ArServerInfoSensor self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoSensor_swigregister", ArServerInfoSensor_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerInfoStrings", _wrap_new_ArServerInfoStrings, METH_VARARGS, (char *)"new_ArServerInfoStrings(ArServerBase server) -> ArServerInfoStrings"},
	 { (char *)"delete_ArServerInfoStrings", _wrap_delete_ArServerInfoStrings, METH_VARARGS, (char *)"delete_ArServerInfoStrings(ArServerInfoStrings self)"},
	 { (char *)"ArServerInfoStrings_netGetStringsInfo", _wrap_ArServerInfoStrings_netGetStringsInfo, METH_VARARGS, (char *)"ArServerInfoStrings_netGetStringsInfo(ArServerInfoStrings self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoStrings_netGetStrings", _wrap_ArServerInfoStrings_netGetStrings, METH_VARARGS, (char *)"ArServerInfoStrings_netGetStrings(ArServerInfoStrings self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerInfoStrings_addString", _wrap_ArServerInfoStrings_addString, METH_VARARGS, (char *)"ArServerInfoStrings_addString(ArServerInfoStrings self, char const * name, ArTypes::UByte2 maxLen, ArFunctor2< char *,ArTypes::UByte2 > * functor)"},
	 { (char *)"ArServerInfoStrings_getAddStringFunctor", _wrap_ArServerInfoStrings_getAddStringFunctor, METH_VARARGS, (char *)"ArServerInfoStrings_getAddStringFunctor(ArServerInfoStrings self) -> ArFunctor3< char const *,ArTypes::UByte2,ArFunctor2< char *,ArTypes::UByte2 > * > *"},
	 { (char *)"ArServerInfoStrings_internalGetStringInfoHolder", _wrap_ArServerInfoStrings_internalGetStringInfoHolder, METH_VARARGS, (char *)"ArServerInfoStrings_internalGetStringInfoHolder(ArServerInfoStrings self, char const * name) -> ArStringInfoHolder"},
	 { (char *)"ArServerInfoStrings_swigregister", ArServerInfoStrings_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerModeDrive", _wrap_new_ArServerModeDrive, METH_VARARGS, (char *)"\n"
		"ArServerModeDrive(ArServerBase server, ArRobot robot, bool takeControlOnJoystick=False)\n"
		"new_ArServerModeDrive(ArServerBase server, ArRobot robot) -> ArServerModeDrive\n"
		""},
	 { (char *)"delete_ArServerModeDrive", _wrap_delete_ArServerModeDrive, METH_VARARGS, (char *)"delete_ArServerModeDrive(ArServerModeDrive self)"},
	 { (char *)"ArServerModeDrive_activate", _wrap_ArServerModeDrive_activate, METH_VARARGS, (char *)"ArServerModeDrive_activate(ArServerModeDrive self)"},
	 { (char *)"ArServerModeDrive_deactivate", _wrap_ArServerModeDrive_deactivate, METH_VARARGS, (char *)"ArServerModeDrive_deactivate(ArServerModeDrive self)"},
	 { (char *)"ArServerModeDrive_addControlCommands", _wrap_ArServerModeDrive_addControlCommands, METH_VARARGS, (char *)"ArServerModeDrive_addControlCommands(ArServerModeDrive self, ArServerHandlerCommands handlerCommands)"},
	 { (char *)"ArServerModeDrive_driveJoystick", _wrap_ArServerModeDrive_driveJoystick, METH_VARARGS, (char *)"\n"
		"driveJoystick(double vel, double rotVel, bool isActivating=True)\n"
		"ArServerModeDrive_driveJoystick(ArServerModeDrive self, double vel, double rotVel)\n"
		""},
	 { (char *)"ArServerModeDrive_serverDriveJoystick", _wrap_ArServerModeDrive_serverDriveJoystick, METH_VARARGS, (char *)"ArServerModeDrive_serverDriveJoystick(ArServerModeDrive self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerModeDrive_userTask", _wrap_ArServerModeDrive_userTask, METH_VARARGS, (char *)"ArServerModeDrive_userTask(ArServerModeDrive self)"},
	 { (char *)"ArServerModeDrive_setThrottleParams", _wrap_ArServerModeDrive_setThrottleParams, METH_VARARGS, (char *)"ArServerModeDrive_setThrottleParams(ArServerModeDrive self, int lowSpeed, int highSpeed)"},
	 { (char *)"ArServerModeDrive_getActionGroup", _wrap_ArServerModeDrive_getActionGroup, METH_VARARGS, (char *)"ArServerModeDrive_getActionGroup(ArServerModeDrive self) -> ArActionGroup"},
	 { (char *)"ArServerModeDrive_setSafeDriving", _wrap_ArServerModeDrive_setSafeDriving, METH_VARARGS, (char *)"ArServerModeDrive_setSafeDriving(ArServerModeDrive self, bool safe)"},
	 { (char *)"ArServerModeDrive_getSafeDriving", _wrap_ArServerModeDrive_getSafeDriving, METH_VARARGS, (char *)"ArServerModeDrive_getSafeDriving(ArServerModeDrive self) -> bool"},
	 { (char *)"ArServerModeDrive_setExtraUnsafeAction", _wrap_ArServerModeDrive_setExtraUnsafeAction, METH_VARARGS, (char *)"ArServerModeDrive_setExtraUnsafeAction(ArServerModeDrive self, ArAction action)"},
	 { (char *)"ArServerModeDrive_swigregister", ArServerModeDrive_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerModeIdle", _wrap_new_ArServerModeIdle, METH_VARARGS, (char *)"new_ArServerModeIdle(ArServerBase server, ArRobot robot) -> ArServerModeIdle"},
	 { (char *)"delete_ArServerModeIdle", _wrap_delete_ArServerModeIdle, METH_VARARGS, (char *)"delete_ArServerModeIdle(ArServerModeIdle self)"},
	 { (char *)"ArServerModeIdle_activate", _wrap_ArServerModeIdle_activate, METH_VARARGS, (char *)"ArServerModeIdle_activate(ArServerModeIdle self)"},
	 { (char *)"ArServerModeIdle_deactivate", _wrap_ArServerModeIdle_deactivate, METH_VARARGS, (char *)"ArServerModeIdle_deactivate(ArServerModeIdle self)"},
	 { (char *)"ArServerModeIdle_userTask", _wrap_ArServerModeIdle_userTask, METH_VARARGS, (char *)"ArServerModeIdle_userTask(ArServerModeIdle self)"},
	 { (char *)"ArServerModeIdle_setModeInterrupted", _wrap_ArServerModeIdle_setModeInterrupted, METH_VARARGS, (char *)"ArServerModeIdle_setModeInterrupted(ArServerModeIdle self, ArServerMode modeInterrupted)"},
	 { (char *)"ArServerModeIdle_getModeInterrupted", _wrap_ArServerModeIdle_getModeInterrupted, METH_VARARGS, (char *)"ArServerModeIdle_getModeInterrupted(ArServerModeIdle self) -> ArServerMode"},
	 { (char *)"ArServerModeIdle_getActionGroup", _wrap_ArServerModeIdle_getActionGroup, METH_VARARGS, (char *)"ArServerModeIdle_getActionGroup(ArServerModeIdle self) -> ArActionGroup"},
	 { (char *)"ArServerModeIdle_addToConfig", _wrap_ArServerModeIdle_addToConfig, METH_VARARGS, (char *)"\n"
		"addToConfig(ArConfig config, char const * section)\n"
		"ArServerModeIdle_addToConfig(ArServerModeIdle self, ArConfig config)\n"
		""},
	 { (char *)"ArServerModeIdle_setUseLocationDependentDevices", _wrap_ArServerModeIdle_setUseLocationDependentDevices, METH_VARARGS, (char *)"\n"
		"setUseLocationDependentDevices(bool useLocationDependentDevices, bool internal=False)\n"
		"ArServerModeIdle_setUseLocationDependentDevices(ArServerModeIdle self, bool useLocationDependentDevices)\n"
		""},
	 { (char *)"ArServerModeIdle_getUseLocationDependentDevices", _wrap_ArServerModeIdle_getUseLocationDependentDevices, METH_VARARGS, (char *)"ArServerModeIdle_getUseLocationDependentDevices(ArServerModeIdle self) -> bool"},
	 { (char *)"ArServerModeIdle_swigregister", ArServerModeIdle_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerModeRatioDrive", _wrap_new_ArServerModeRatioDrive, METH_VARARGS, (char *)"\n"
		"ArServerModeRatioDrive(ArServerBase server, ArRobot robot, bool takeControlOnJoystick=True, bool useComputerJoystick=True, bool useRobotJoystick=True, bool useServerCommands=True, char const * name, bool robotJoystickOverridesLocks=True)\n"
		"ArServerModeRatioDrive(ArServerBase server, ArRobot robot, bool takeControlOnJoystick=True, bool useComputerJoystick=True, bool useRobotJoystick=True, bool useServerCommands=True, char const * name)\n"
		"ArServerModeRatioDrive(ArServerBase server, ArRobot robot, bool takeControlOnJoystick=True, bool useComputerJoystick=True, bool useRobotJoystick=True, bool useServerCommands=True)\n"
		"ArServerModeRatioDrive(ArServerBase server, ArRobot robot, bool takeControlOnJoystick=True, bool useComputerJoystick=True, bool useRobotJoystick=True)\n"
		"ArServerModeRatioDrive(ArServerBase server, ArRobot robot, bool takeControlOnJoystick=True, bool useComputerJoystick=True)\n"
		"ArServerModeRatioDrive(ArServerBase server, ArRobot robot, bool takeControlOnJoystick=True)\n"
		"new_ArServerModeRatioDrive(ArServerBase server, ArRobot robot) -> ArServerModeRatioDrive\n"
		""},
	 { (char *)"delete_ArServerModeRatioDrive", _wrap_delete_ArServerModeRatioDrive, METH_VARARGS, (char *)"delete_ArServerModeRatioDrive(ArServerModeRatioDrive self)"},
	 { (char *)"ArServerModeRatioDrive_activate", _wrap_ArServerModeRatioDrive_activate, METH_VARARGS, (char *)"ArServerModeRatioDrive_activate(ArServerModeRatioDrive self)"},
	 { (char *)"ArServerModeRatioDrive_deactivate", _wrap_ArServerModeRatioDrive_deactivate, METH_VARARGS, (char *)"ArServerModeRatioDrive_deactivate(ArServerModeRatioDrive self)"},
	 { (char *)"ArServerModeRatioDrive_addControlCommands", _wrap_ArServerModeRatioDrive_addControlCommands, METH_VARARGS, (char *)"ArServerModeRatioDrive_addControlCommands(ArServerModeRatioDrive self, ArServerHandlerCommands handlerCommands)"},
	 { (char *)"ArServerModeRatioDrive_ratioDrive", _wrap_ArServerModeRatioDrive_ratioDrive, METH_VARARGS, (char *)"\n"
		"ratioDrive(double transRatio, double rotRatio, double throttleRatio, bool isActivating=False, double latRatio=0)\n"
		"ratioDrive(double transRatio, double rotRatio, double throttleRatio, bool isActivating=False)\n"
		"ArServerModeRatioDrive_ratioDrive(ArServerModeRatioDrive self, double transRatio, double rotRatio, double throttleRatio)\n"
		""},
	 { (char *)"ArServerModeRatioDrive_addToConfig", _wrap_ArServerModeRatioDrive_addToConfig, METH_VARARGS, (char *)"ArServerModeRatioDrive_addToConfig(ArServerModeRatioDrive self, ArConfig config, char const * section)"},
	 { (char *)"ArServerModeRatioDrive_userTask", _wrap_ArServerModeRatioDrive_userTask, METH_VARARGS, (char *)"ArServerModeRatioDrive_userTask(ArServerModeRatioDrive self)"},
	 { (char *)"ArServerModeRatioDrive_getActionGroup", _wrap_ArServerModeRatioDrive_getActionGroup, METH_VARARGS, (char *)"ArServerModeRatioDrive_getActionGroup(ArServerModeRatioDrive self) -> ArActionGroup"},
	 { (char *)"ArServerModeRatioDrive_getActionRatioInput", _wrap_ArServerModeRatioDrive_getActionRatioInput, METH_VARARGS, (char *)"ArServerModeRatioDrive_getActionRatioInput(ArServerModeRatioDrive self) -> ArActionRatioInput"},
	 { (char *)"ArServerModeRatioDrive_setSafeDriving", _wrap_ArServerModeRatioDrive_setSafeDriving, METH_VARARGS, (char *)"\n"
		"setSafeDriving(bool safe, bool internal=False)\n"
		"ArServerModeRatioDrive_setSafeDriving(ArServerModeRatioDrive self, bool safe)\n"
		""},
	 { (char *)"ArServerModeRatioDrive_getSafeDriving", _wrap_ArServerModeRatioDrive_getSafeDriving, METH_VARARGS, (char *)"ArServerModeRatioDrive_getSafeDriving(ArServerModeRatioDrive self) -> bool"},
	 { (char *)"ArServerModeRatioDrive_setUseLocationDependentDevices", _wrap_ArServerModeRatioDrive_setUseLocationDependentDevices, METH_VARARGS, (char *)"\n"
		"setUseLocationDependentDevices(bool useLocationDependentDevices, bool internal=False)\n"
		"ArServerModeRatioDrive_setUseLocationDependentDevices(ArServerModeRatioDrive self, bool useLocationDependentDevices)\n"
		""},
	 { (char *)"ArServerModeRatioDrive_getUseLocationDependentDevices", _wrap_ArServerModeRatioDrive_getUseLocationDependentDevices, METH_VARARGS, (char *)"ArServerModeRatioDrive_getUseLocationDependentDevices(ArServerModeRatioDrive self) -> bool"},
	 { (char *)"ArServerModeRatioDrive_addSafeDrivingCallback", _wrap_ArServerModeRatioDrive_addSafeDrivingCallback, METH_VARARGS, (char *)"\n"
		"addSafeDrivingCallback(ArFunctor functor, int position=50)\n"
		"ArServerModeRatioDrive_addSafeDrivingCallback(ArServerModeRatioDrive self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerModeRatioDrive_remSafeDrivingCallback", _wrap_ArServerModeRatioDrive_remSafeDrivingCallback, METH_VARARGS, (char *)"ArServerModeRatioDrive_remSafeDrivingCallback(ArServerModeRatioDrive self, ArFunctor functor)"},
	 { (char *)"ArServerModeRatioDrive_addUnsafeDrivingCallback", _wrap_ArServerModeRatioDrive_addUnsafeDrivingCallback, METH_VARARGS, (char *)"\n"
		"addUnsafeDrivingCallback(ArFunctor functor, int position=50)\n"
		"ArServerModeRatioDrive_addUnsafeDrivingCallback(ArServerModeRatioDrive self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerModeRatioDrive_remUnsafeDrivingCallback", _wrap_ArServerModeRatioDrive_remUnsafeDrivingCallback, METH_VARARGS, (char *)"ArServerModeRatioDrive_remUnsafeDrivingCallback(ArServerModeRatioDrive self, ArFunctor functor)"},
	 { (char *)"ArServerModeRatioDrive_addDrivingBackwardsCallback", _wrap_ArServerModeRatioDrive_addDrivingBackwardsCallback, METH_VARARGS, (char *)"\n"
		"addDrivingBackwardsCallback(ArFunctor functor, int position=50)\n"
		"ArServerModeRatioDrive_addDrivingBackwardsCallback(ArServerModeRatioDrive self, ArFunctor functor)\n"
		""},
	 { (char *)"ArServerModeRatioDrive_remDrivingBackwardsCallback", _wrap_ArServerModeRatioDrive_remDrivingBackwardsCallback, METH_VARARGS, (char *)"ArServerModeRatioDrive_remDrivingBackwardsCallback(ArServerModeRatioDrive self, ArFunctor functor)"},
	 { (char *)"ArServerModeRatioDrive_swigregister", ArServerModeRatioDrive_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerModeStop", _wrap_new_ArServerModeStop, METH_VARARGS, (char *)"\n"
		"ArServerModeStop(ArServerBase server, ArRobot robot, bool defunct=False)\n"
		"new_ArServerModeStop(ArServerBase server, ArRobot robot) -> ArServerModeStop\n"
		""},
	 { (char *)"delete_ArServerModeStop", _wrap_delete_ArServerModeStop, METH_VARARGS, (char *)"delete_ArServerModeStop(ArServerModeStop self)"},
	 { (char *)"ArServerModeStop_activate", _wrap_ArServerModeStop_activate, METH_VARARGS, (char *)"ArServerModeStop_activate(ArServerModeStop self)"},
	 { (char *)"ArServerModeStop_deactivate", _wrap_ArServerModeStop_deactivate, METH_VARARGS, (char *)"ArServerModeStop_deactivate(ArServerModeStop self)"},
	 { (char *)"ArServerModeStop_stop", _wrap_ArServerModeStop_stop, METH_VARARGS, (char *)"ArServerModeStop_stop(ArServerModeStop self)"},
	 { (char *)"ArServerModeStop_netStop", _wrap_ArServerModeStop_netStop, METH_VARARGS, (char *)"ArServerModeStop_netStop(ArServerModeStop self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerModeStop_userTask", _wrap_ArServerModeStop_userTask, METH_VARARGS, (char *)"ArServerModeStop_userTask(ArServerModeStop self)"},
	 { (char *)"ArServerModeStop_checkDefault", _wrap_ArServerModeStop_checkDefault, METH_VARARGS, (char *)"ArServerModeStop_checkDefault(ArServerModeStop self)"},
	 { (char *)"ArServerModeStop_getActionGroup", _wrap_ArServerModeStop_getActionGroup, METH_VARARGS, (char *)"ArServerModeStop_getActionGroup(ArServerModeStop self) -> ArActionGroup"},
	 { (char *)"ArServerModeStop_addToConfig", _wrap_ArServerModeStop_addToConfig, METH_VARARGS, (char *)"\n"
		"addToConfig(ArConfig config, char const * section)\n"
		"ArServerModeStop_addToConfig(ArServerModeStop self, ArConfig config)\n"
		""},
	 { (char *)"ArServerModeStop_setUseLocationDependentDevices", _wrap_ArServerModeStop_setUseLocationDependentDevices, METH_VARARGS, (char *)"\n"
		"setUseLocationDependentDevices(bool useLocationDependentDevices, bool internal=False)\n"
		"ArServerModeStop_setUseLocationDependentDevices(ArServerModeStop self, bool useLocationDependentDevices)\n"
		""},
	 { (char *)"ArServerModeStop_getUseLocationDependentDevices", _wrap_ArServerModeStop_getUseLocationDependentDevices, METH_VARARGS, (char *)"ArServerModeStop_getUseLocationDependentDevices(ArServerModeStop self) -> bool"},
	 { (char *)"ArServerModeStop_swigregister", ArServerModeStop_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerModeWander", _wrap_new_ArServerModeWander, METH_VARARGS, (char *)"new_ArServerModeWander(ArServerBase server, ArRobot robot) -> ArServerModeWander"},
	 { (char *)"delete_ArServerModeWander", _wrap_delete_ArServerModeWander, METH_VARARGS, (char *)"delete_ArServerModeWander(ArServerModeWander self)"},
	 { (char *)"ArServerModeWander_activate", _wrap_ArServerModeWander_activate, METH_VARARGS, (char *)"ArServerModeWander_activate(ArServerModeWander self)"},
	 { (char *)"ArServerModeWander_deactivate", _wrap_ArServerModeWander_deactivate, METH_VARARGS, (char *)"ArServerModeWander_deactivate(ArServerModeWander self)"},
	 { (char *)"ArServerModeWander_wander", _wrap_ArServerModeWander_wander, METH_VARARGS, (char *)"ArServerModeWander_wander(ArServerModeWander self)"},
	 { (char *)"ArServerModeWander_netWander", _wrap_ArServerModeWander_netWander, METH_VARARGS, (char *)"ArServerModeWander_netWander(ArServerModeWander self, ArServerClient client, ArNetPacket packet)"},
	 { (char *)"ArServerModeWander_userTask", _wrap_ArServerModeWander_userTask, METH_VARARGS, (char *)"ArServerModeWander_userTask(ArServerModeWander self)"},
	 { (char *)"ArServerModeWander_checkDefault", _wrap_ArServerModeWander_checkDefault, METH_VARARGS, (char *)"ArServerModeWander_checkDefault(ArServerModeWander self)"},
	 { (char *)"ArServerModeWander_getActionGroup", _wrap_ArServerModeWander_getActionGroup, METH_VARARGS, (char *)"ArServerModeWander_getActionGroup(ArServerModeWander self) -> ArActionGroup"},
	 { (char *)"ArServerModeWander_swigregister", ArServerModeWander_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerSimpleComUC", _wrap_new_ArServerSimpleComUC, METH_VARARGS, (char *)"new_ArServerSimpleComUC(ArServerHandlerCommands handlerCommands, ArRobot robot) -> ArServerSimpleComUC"},
	 { (char *)"delete_ArServerSimpleComUC", _wrap_delete_ArServerSimpleComUC, METH_VARARGS, (char *)"delete_ArServerSimpleComUC(ArServerSimpleComUC self)"},
	 { (char *)"ArServerSimpleComUC_command", _wrap_ArServerSimpleComUC_command, METH_VARARGS, (char *)"ArServerSimpleComUC_command(ArServerSimpleComUC self, ArArgumentBuilder arg)"},
	 { (char *)"ArServerSimpleComUC_motionCommand", _wrap_ArServerSimpleComUC_motionCommand, METH_VARARGS, (char *)"ArServerSimpleComUC_motionCommand(ArServerSimpleComUC self, ArArgumentBuilder arg)"},
	 { (char *)"ArServerSimpleComUC_swigregister", ArServerSimpleComUC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerSimpleComMovementLogging", _wrap_new_ArServerSimpleComMovementLogging, METH_VARARGS, (char *)"\n"
		"ArServerSimpleComMovementLogging(ArServerHandlerCommands handlerCommands, ArRobot robot, ArServerHandlerPopup * popupHandler=None)\n"
		"new_ArServerSimpleComMovementLogging(ArServerHandlerCommands handlerCommands, ArRobot robot) -> ArServerSimpleComMovementLogging\n"
		""},
	 { (char *)"delete_ArServerSimpleComMovementLogging", _wrap_delete_ArServerSimpleComMovementLogging, METH_VARARGS, (char *)"delete_ArServerSimpleComMovementLogging(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_logMovementSentEnable", _wrap_ArServerSimpleComMovementLogging_logMovementSentEnable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_logMovementSentEnable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_logMovementSentDisable", _wrap_ArServerSimpleComMovementLogging_logMovementSentDisable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_logMovementSentDisable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_logMovementReceivedEnable", _wrap_ArServerSimpleComMovementLogging_logMovementReceivedEnable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_logMovementReceivedEnable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_logMovementReceivedDisable", _wrap_ArServerSimpleComMovementLogging_logMovementReceivedDisable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_logMovementReceivedDisable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_logVelocitiesReceivedEnable", _wrap_ArServerSimpleComMovementLogging_logVelocitiesReceivedEnable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_logVelocitiesReceivedEnable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_logVelocitiesReceivedDisable", _wrap_ArServerSimpleComMovementLogging_logVelocitiesReceivedDisable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_logVelocitiesReceivedDisable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_packetsReceivedTrackingEnable", _wrap_ArServerSimpleComMovementLogging_packetsReceivedTrackingEnable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_packetsReceivedTrackingEnable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_packetsReceivedTrackingDisable", _wrap_ArServerSimpleComMovementLogging_packetsReceivedTrackingDisable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_packetsReceivedTrackingDisable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_packetsSentTrackingEnable", _wrap_ArServerSimpleComMovementLogging_packetsSentTrackingEnable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_packetsSentTrackingEnable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_packetsSentTrackingDisable", _wrap_ArServerSimpleComMovementLogging_packetsSentTrackingDisable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_packetsSentTrackingDisable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_logActionsEnable", _wrap_ArServerSimpleComMovementLogging_logActionsEnable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_logActionsEnable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_logActionsDisable", _wrap_ArServerSimpleComMovementLogging_logActionsDisable, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_logActionsDisable(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_logActions", _wrap_ArServerSimpleComMovementLogging_logActions, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_logActions(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_popupMovementParams", _wrap_ArServerSimpleComMovementLogging_popupMovementParams, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_popupMovementParams(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_resetOdometer", _wrap_ArServerSimpleComMovementLogging_resetOdometer, METH_VARARGS, (char *)"ArServerSimpleComMovementLogging_resetOdometer(ArServerSimpleComMovementLogging self)"},
	 { (char *)"ArServerSimpleComMovementLogging_swigregister", ArServerSimpleComMovementLogging_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerSimpleComGyro", _wrap_new_ArServerSimpleComGyro, METH_VARARGS, (char *)"new_ArServerSimpleComGyro(ArServerHandlerCommands handlerCommands, ArRobot robot, ArAnalogGyro gyro) -> ArServerSimpleComGyro"},
	 { (char *)"delete_ArServerSimpleComGyro", _wrap_delete_ArServerSimpleComGyro, METH_VARARGS, (char *)"delete_ArServerSimpleComGyro(ArServerSimpleComGyro self)"},
	 { (char *)"ArServerSimpleComGyro_gyroEnable", _wrap_ArServerSimpleComGyro_gyroEnable, METH_VARARGS, (char *)"ArServerSimpleComGyro_gyroEnable(ArServerSimpleComGyro self)"},
	 { (char *)"ArServerSimpleComGyro_gyroDisable", _wrap_ArServerSimpleComGyro_gyroDisable, METH_VARARGS, (char *)"ArServerSimpleComGyro_gyroDisable(ArServerSimpleComGyro self)"},
	 { (char *)"ArServerSimpleComGyro_swigregister", ArServerSimpleComGyro_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerSimpleComLogRobotConfig", _wrap_new_ArServerSimpleComLogRobotConfig, METH_VARARGS, (char *)"\n"
		"ArServerSimpleComLogRobotConfig(ArServerHandlerCommands commands, ArRobot robot, ArServerHandlerPopup * popupHandler=None)\n"
		"new_ArServerSimpleComLogRobotConfig(ArServerHandlerCommands commands, ArRobot robot) -> ArServerSimpleComLogRobotConfig\n"
		""},
	 { (char *)"ArServerSimpleComLogRobotConfig_logConfig", _wrap_ArServerSimpleComLogRobotConfig_logConfig, METH_VARARGS, (char *)"ArServerSimpleComLogRobotConfig_logConfig(ArServerSimpleComLogRobotConfig self)"},
	 { (char *)"ArServerSimpleComLogRobotConfig_logMovementConfig", _wrap_ArServerSimpleComLogRobotConfig_logMovementConfig, METH_VARARGS, (char *)"ArServerSimpleComLogRobotConfig_logMovementConfig(ArServerSimpleComLogRobotConfig self)"},
	 { (char *)"ArServerSimpleComLogRobotConfig_logOrigConfig", _wrap_ArServerSimpleComLogRobotConfig_logOrigConfig, METH_VARARGS, (char *)"ArServerSimpleComLogRobotConfig_logOrigConfig(ArServerSimpleComLogRobotConfig self)"},
	 { (char *)"ArServerSimpleComLogRobotConfig_popupConfig", _wrap_ArServerSimpleComLogRobotConfig_popupConfig, METH_VARARGS, (char *)"ArServerSimpleComLogRobotConfig_popupConfig(ArServerSimpleComLogRobotConfig self)"},
	 { (char *)"ArServerSimpleComLogRobotConfig_popupOrigConfig", _wrap_ArServerSimpleComLogRobotConfig_popupOrigConfig, METH_VARARGS, (char *)"ArServerSimpleComLogRobotConfig_popupOrigConfig(ArServerSimpleComLogRobotConfig self)"},
	 { (char *)"ArServerSimpleComLogRobotConfig_popupMovementConfig", _wrap_ArServerSimpleComLogRobotConfig_popupMovementConfig, METH_VARARGS, (char *)"ArServerSimpleComLogRobotConfig_popupMovementConfig(ArServerSimpleComLogRobotConfig self)"},
	 { (char *)"delete_ArServerSimpleComLogRobotConfig", _wrap_delete_ArServerSimpleComLogRobotConfig, METH_VARARGS, (char *)"delete_ArServerSimpleComLogRobotConfig(ArServerSimpleComLogRobotConfig self)"},
	 { (char *)"ArServerSimpleComLogRobotConfig_swigregister", ArServerSimpleComLogRobotConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerSimpleComLogActions", _wrap_new_ArServerSimpleComLogActions, METH_VARARGS, (char *)"new_ArServerSimpleComLogActions(ArServerHandlerCommands commands, ArRobot robot) -> ArServerSimpleComLogActions"},
	 { (char *)"ArServerSimpleComLogActions_logActions", _wrap_ArServerSimpleComLogActions_logActions, METH_VARARGS, (char *)"ArServerSimpleComLogActions_logActions(ArServerSimpleComLogActions self)"},
	 { (char *)"delete_ArServerSimpleComLogActions", _wrap_delete_ArServerSimpleComLogActions, METH_VARARGS, (char *)"delete_ArServerSimpleComLogActions(ArServerSimpleComLogActions self)"},
	 { (char *)"ArServerSimpleComLogActions_swigregister", ArServerSimpleComLogActions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerSimpleServerCommands", _wrap_new_ArServerSimpleServerCommands, METH_VARARGS, (char *)"\n"
		"ArServerSimpleServerCommands(ArServerHandlerCommands commands, ArServerBase server, bool addLogConnections=True)\n"
		"new_ArServerSimpleServerCommands(ArServerHandlerCommands commands, ArServerBase server) -> ArServerSimpleServerCommands\n"
		""},
	 { (char *)"delete_ArServerSimpleServerCommands", _wrap_delete_ArServerSimpleServerCommands, METH_VARARGS, (char *)"delete_ArServerSimpleServerCommands(ArServerSimpleServerCommands self)"},
	 { (char *)"ArServerSimpleServerCommands_logTerseTracking", _wrap_ArServerSimpleServerCommands_logTerseTracking, METH_VARARGS, (char *)"ArServerSimpleServerCommands_logTerseTracking(ArServerSimpleServerCommands self)"},
	 { (char *)"ArServerSimpleServerCommands_logVerboseTracking", _wrap_ArServerSimpleServerCommands_logVerboseTracking, METH_VARARGS, (char *)"ArServerSimpleServerCommands_logVerboseTracking(ArServerSimpleServerCommands self)"},
	 { (char *)"ArServerSimpleServerCommands_resetTracking", _wrap_ArServerSimpleServerCommands_resetTracking, METH_VARARGS, (char *)"ArServerSimpleServerCommands_resetTracking(ArServerSimpleServerCommands self)"},
	 { (char *)"ArServerSimpleServerCommands_logConnections", _wrap_ArServerSimpleServerCommands_logConnections, METH_VARARGS, (char *)"ArServerSimpleServerCommands_logConnections(ArServerSimpleServerCommands self)"},
	 { (char *)"ArServerSimpleServerCommands_swigregister", ArServerSimpleServerCommands_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerSimplePopup", _wrap_new_ArServerSimplePopup, METH_VARARGS, (char *)"new_ArServerSimplePopup(ArServerHandlerCommands commands, ArServerHandlerPopup * popupHandler) -> ArServerSimplePopup"},
	 { (char *)"delete_ArServerSimplePopup", _wrap_delete_ArServerSimplePopup, METH_VARARGS, (char *)"delete_ArServerSimplePopup(ArServerSimplePopup self)"},
	 { (char *)"ArServerSimplePopup_simplePopup", _wrap_ArServerSimplePopup_simplePopup, METH_VARARGS, (char *)"ArServerSimplePopup_simplePopup(ArServerSimplePopup self, ArArgumentBuilder arg)"},
	 { (char *)"ArServerSimplePopup_swigregister", ArServerSimplePopup_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerSimpleLogRobotDebugPackets", _wrap_new_ArServerSimpleLogRobotDebugPackets, METH_VARARGS, (char *)"\n"
		"ArServerSimpleLogRobotDebugPackets(ArServerHandlerCommands commands, ArRobot robot, char const * baseDirectory)\n"
		"new_ArServerSimpleLogRobotDebugPackets(ArServerHandlerCommands commands, ArRobot robot) -> ArServerSimpleLogRobotDebugPackets\n"
		""},
	 { (char *)"delete_ArServerSimpleLogRobotDebugPackets", _wrap_delete_ArServerSimpleLogRobotDebugPackets, METH_VARARGS, (char *)"delete_ArServerSimpleLogRobotDebugPackets(ArServerSimpleLogRobotDebugPackets self)"},
	 { (char *)"ArServerSimpleLogRobotDebugPackets_startLogging", _wrap_ArServerSimpleLogRobotDebugPackets_startLogging, METH_VARARGS, (char *)"\n"
		"startLogging(char const * fileName) -> bool\n"
		"ArServerSimpleLogRobotDebugPackets_startLogging(ArServerSimpleLogRobotDebugPackets self) -> bool\n"
		""},
	 { (char *)"ArServerSimpleLogRobotDebugPackets_stopLogging", _wrap_ArServerSimpleLogRobotDebugPackets_stopLogging, METH_VARARGS, (char *)"ArServerSimpleLogRobotDebugPackets_stopLogging(ArServerSimpleLogRobotDebugPackets self) -> bool"},
	 { (char *)"ArServerSimpleLogRobotDebugPackets_packetHandler", _wrap_ArServerSimpleLogRobotDebugPackets_packetHandler, METH_VARARGS, (char *)"ArServerSimpleLogRobotDebugPackets_packetHandler(ArServerSimpleLogRobotDebugPackets self, ArRobotPacket packet) -> bool"},
	 { (char *)"ArServerSimpleLogRobotDebugPackets_addToInfoGroup", _wrap_ArServerSimpleLogRobotDebugPackets_addToInfoGroup, METH_VARARGS, (char *)"\n"
		"addToInfoGroup(ArStringInfoGroup infoGroup, char const * name, int whichVal, char const * format)\n"
		"ArServerSimpleLogRobotDebugPackets_addToInfoGroup(ArServerSimpleLogRobotDebugPackets self, ArStringInfoGroup infoGroup, char const * name, int whichVal)\n"
		""},
	 { (char *)"ArServerSimpleLogRobotDebugPackets_getNumValues", _wrap_ArServerSimpleLogRobotDebugPackets_getNumValues, METH_VARARGS, (char *)"ArServerSimpleLogRobotDebugPackets_getNumValues(ArServerSimpleLogRobotDebugPackets self) -> int"},
	 { (char *)"ArServerSimpleLogRobotDebugPackets_getValue", _wrap_ArServerSimpleLogRobotDebugPackets_getValue, METH_VARARGS, (char *)"ArServerSimpleLogRobotDebugPackets_getValue(ArServerSimpleLogRobotDebugPackets self, int whichVal) -> int"},
	 { (char *)"ArServerSimpleLogRobotDebugPackets_swigregister", ArServerSimpleLogRobotDebugPackets_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerSimpleConnectionTester", _wrap_new_ArServerSimpleConnectionTester, METH_VARARGS, (char *)"new_ArServerSimpleConnectionTester(ArServerHandlerCommands handlerCommands, ArRobot robot) -> ArServerSimpleConnectionTester"},
	 { (char *)"delete_ArServerSimpleConnectionTester", _wrap_delete_ArServerSimpleConnectionTester, METH_VARARGS, (char *)"delete_ArServerSimpleConnectionTester(ArServerSimpleConnectionTester self)"},
	 { (char *)"ArServerSimpleConnectionTester_connectionTestStart", _wrap_ArServerSimpleConnectionTester_connectionTestStart, METH_VARARGS, (char *)"ArServerSimpleConnectionTester_connectionTestStart(ArServerSimpleConnectionTester self)"},
	 { (char *)"ArServerSimpleConnectionTester_connectionTestStop", _wrap_ArServerSimpleConnectionTester_connectionTestStop, METH_VARARGS, (char *)"ArServerSimpleConnectionTester_connectionTestStop(ArServerSimpleConnectionTester self)"},
	 { (char *)"ArServerSimpleConnectionTester_swigregister", ArServerSimpleConnectionTester_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerSimpleOpener", _wrap_new_ArServerSimpleOpener, METH_VARARGS, (char *)"\n"
		"ArServerSimpleOpener(ArArgumentParser parser, char const * prefix, bool addAriaCallbacks=True)\n"
		"ArServerSimpleOpener(ArArgumentParser parser, char const * prefix)\n"
		"new_ArServerSimpleOpener(ArArgumentParser parser) -> ArServerSimpleOpener\n"
		""},
	 { (char *)"delete_ArServerSimpleOpener", _wrap_delete_ArServerSimpleOpener, METH_VARARGS, (char *)"delete_ArServerSimpleOpener(ArServerSimpleOpener self)"},
	 { (char *)"ArServerSimpleOpener_open", _wrap_ArServerSimpleOpener_open, METH_VARARGS, (char *)"\n"
		"open(ArServerBase server, char const * baseDirectory, int secondsToTryFor=240) -> bool\n"
		"open(ArServerBase server, char const * baseDirectory) -> bool\n"
		"ArServerSimpleOpener_open(ArServerSimpleOpener self, ArServerBase server) -> bool\n"
		""},
	 { (char *)"ArServerSimpleOpener_parseArgs", _wrap_ArServerSimpleOpener_parseArgs, METH_VARARGS, (char *)"\n"
		"parseArgs() -> bool\n"
		"ArServerSimpleOpener_parseArgs(ArServerSimpleOpener self, ArArgumentParser parser) -> bool\n"
		""},
	 { (char *)"ArServerSimpleOpener_logOptions", _wrap_ArServerSimpleOpener_logOptions, METH_VARARGS, (char *)"ArServerSimpleOpener_logOptions(ArServerSimpleOpener self)"},
	 { (char *)"ArServerSimpleOpener_checkAndLog", _wrap_ArServerSimpleOpener_checkAndLog, METH_VARARGS, (char *)"ArServerSimpleOpener_checkAndLog(ArServerSimpleOpener self) -> bool"},
	 { (char *)"ArServerSimpleOpener_wasUserFileBad", _wrap_ArServerSimpleOpener_wasUserFileBad, METH_VARARGS, (char *)"ArServerSimpleOpener_wasUserFileBad(ArServerSimpleOpener self) -> bool"},
	 { (char *)"ArServerSimpleOpener_didOpenFail", _wrap_ArServerSimpleOpener_didOpenFail, METH_VARARGS, (char *)"ArServerSimpleOpener_didOpenFail(ArServerSimpleOpener self) -> bool"},
	 { (char *)"ArServerSimpleOpener_getPort", _wrap_ArServerSimpleOpener_getPort, METH_VARARGS, (char *)"ArServerSimpleOpener_getPort(ArServerSimpleOpener self) -> int"},
	 { (char *)"ArServerSimpleOpener_setDefaultPort", _wrap_ArServerSimpleOpener_setDefaultPort, METH_VARARGS, (char *)"ArServerSimpleOpener_setDefaultPort(ArServerSimpleOpener self, int port)"},
	 { (char *)"ArServerSimpleOpener_parseFile", _wrap_ArServerSimpleOpener_parseFile, METH_VARARGS, (char *)"ArServerSimpleOpener_parseFile(ArServerSimpleOpener self, char const * fileName) -> bool"},
	 { (char *)"ArServerSimpleOpener_setServerTcpOnly", _wrap_ArServerSimpleOpener_setServerTcpOnly, METH_VARARGS, (char *)"ArServerSimpleOpener_setServerTcpOnly(ArServerSimpleOpener self, bool serverTcpOnly)"},
	 { (char *)"ArServerSimpleOpener_getServerKey", _wrap_ArServerSimpleOpener_getServerKey, METH_VARARGS, (char *)"ArServerSimpleOpener_getServerKey(ArServerSimpleOpener self) -> char const *"},
	 { (char *)"ArServerSimpleOpener_swigregister", ArServerSimpleOpener_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArServerUserInfo", _wrap_new_ArServerUserInfo, METH_VARARGS, (char *)"\n"
		"ArServerUserInfo(char const * baseDirectory=None)\n"
		"new_ArServerUserInfo() -> ArServerUserInfo\n"
		""},
	 { (char *)"delete_ArServerUserInfo", _wrap_delete_ArServerUserInfo, METH_VARARGS, (char *)"delete_ArServerUserInfo(ArServerUserInfo self)"},
	 { (char *)"ArServerUserInfo_readFile", _wrap_ArServerUserInfo_readFile, METH_VARARGS, (char *)"ArServerUserInfo_readFile(ArServerUserInfo self, char const * fileName) -> bool"},
	 { (char *)"ArServerUserInfo_setBaseDirectory", _wrap_ArServerUserInfo_setBaseDirectory, METH_VARARGS, (char *)"ArServerUserInfo_setBaseDirectory(ArServerUserInfo self, char const * baseDirectory)"},
	 { (char *)"ArServerUserInfo_matchUserPassword", _wrap_ArServerUserInfo_matchUserPassword, METH_VARARGS, (char *)"\n"
		"matchUserPassword(char const * user, unsigned char [16] password, char const * passwordKey, char const * serverKey, bool logFailureVerbosely=False) -> bool\n"
		"ArServerUserInfo_matchUserPassword(ArServerUserInfo self, char const * user, unsigned char [16] password, char const * passwordKey, char const * serverKey) -> bool\n"
		""},
	 { (char *)"ArServerUserInfo_doNotUse", _wrap_ArServerUserInfo_doNotUse, METH_VARARGS, (char *)"ArServerUserInfo_doNotUse(ArServerUserInfo self) -> bool"},
	 { (char *)"ArServerUserInfo_getUsersGroups", _wrap_ArServerUserInfo_getUsersGroups, METH_VARARGS, (char *)"ArServerUserInfo_getUsersGroups(ArServerUserInfo self, char const * user) -> std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > >"},
	 { (char *)"ArServerUserInfo_logUsers", _wrap_ArServerUserInfo_logUsers, METH_VARARGS, (char *)"ArServerUserInfo_logUsers(ArServerUserInfo self)"},
	 { (char *)"ArServerUserInfo_swigregister", ArServerUserInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArClientHandlerRobotUpdate", _wrap_new_ArClientHandlerRobotUpdate, METH_VARARGS, (char *)"new_ArClientHandlerRobotUpdate(ArClientBase client) -> ArClientHandlerRobotUpdate"},
	 { (char *)"delete_ArClientHandlerRobotUpdate", _wrap_delete_ArClientHandlerRobotUpdate, METH_VARARGS, (char *)"delete_ArClientHandlerRobotUpdate(ArClientHandlerRobotUpdate self)"},
	 { (char *)"ArClientHandlerRobotUpdate_requestUpdates", _wrap_ArClientHandlerRobotUpdate_requestUpdates, METH_VARARGS, (char *)"\n"
		"requestUpdates(int freq=100)\n"
		"ArClientHandlerRobotUpdate_requestUpdates(ArClientHandlerRobotUpdate self)\n"
		""},
	 { (char *)"ArClientHandlerRobotUpdate_stopUpdates", _wrap_ArClientHandlerRobotUpdate_stopUpdates, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_stopUpdates(ArClientHandlerRobotUpdate self)"},
	 { (char *)"ArClientHandlerRobotUpdate_addStatusChangedCB", _wrap_ArClientHandlerRobotUpdate_addStatusChangedCB, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_addStatusChangedCB(ArClientHandlerRobotUpdate self, ArFunctor2< char const *,char const * > * cb)"},
	 { (char *)"ArClientHandlerRobotUpdate_remStatusChangedCB", _wrap_ArClientHandlerRobotUpdate_remStatusChangedCB, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_remStatusChangedCB(ArClientHandlerRobotUpdate self, ArFunctor2< char const *,char const * > * cb)"},
	 { (char *)"ArClientHandlerRobotUpdate_addModeChangedCB", _wrap_ArClientHandlerRobotUpdate_addModeChangedCB, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_addModeChangedCB(ArClientHandlerRobotUpdate self, ArFunctor1_CString cb)"},
	 { (char *)"ArClientHandlerRobotUpdate_remModeChangedCB", _wrap_ArClientHandlerRobotUpdate_remModeChangedCB, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_remModeChangedCB(ArClientHandlerRobotUpdate self, ArFunctor1_CString cb)"},
	 { (char *)"ArClientHandlerRobotUpdate_lock", _wrap_ArClientHandlerRobotUpdate_lock, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_lock(ArClientHandlerRobotUpdate self)"},
	 { (char *)"ArClientHandlerRobotUpdate_unlock", _wrap_ArClientHandlerRobotUpdate_unlock, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_unlock(ArClientHandlerRobotUpdate self)"},
	 { (char *)"ArClientHandlerRobotUpdate_getX", _wrap_ArClientHandlerRobotUpdate_getX, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getX(ArClientHandlerRobotUpdate self) -> double"},
	 { (char *)"ArClientHandlerRobotUpdate_getY", _wrap_ArClientHandlerRobotUpdate_getY, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getY(ArClientHandlerRobotUpdate self) -> double"},
	 { (char *)"ArClientHandlerRobotUpdate_getTh", _wrap_ArClientHandlerRobotUpdate_getTh, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getTh(ArClientHandlerRobotUpdate self) -> double"},
	 { (char *)"ArClientHandlerRobotUpdate_getPose", _wrap_ArClientHandlerRobotUpdate_getPose, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getPose(ArClientHandlerRobotUpdate self) -> ArPose"},
	 { (char *)"ArClientHandlerRobotUpdate_getVel", _wrap_ArClientHandlerRobotUpdate_getVel, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getVel(ArClientHandlerRobotUpdate self) -> double"},
	 { (char *)"ArClientHandlerRobotUpdate_getRotVel", _wrap_ArClientHandlerRobotUpdate_getRotVel, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getRotVel(ArClientHandlerRobotUpdate self) -> double"},
	 { (char *)"ArClientHandlerRobotUpdate_getLatVel", _wrap_ArClientHandlerRobotUpdate_getLatVel, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getLatVel(ArClientHandlerRobotUpdate self) -> double"},
	 { (char *)"ArClientHandlerRobotUpdate_haveStateOfCharge", _wrap_ArClientHandlerRobotUpdate_haveStateOfCharge, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_haveStateOfCharge(ArClientHandlerRobotUpdate self) -> bool"},
	 { (char *)"ArClientHandlerRobotUpdate_getStateOfCharge", _wrap_ArClientHandlerRobotUpdate_getStateOfCharge, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getStateOfCharge(ArClientHandlerRobotUpdate self) -> double"},
	 { (char *)"ArClientHandlerRobotUpdate_haveVoltage", _wrap_ArClientHandlerRobotUpdate_haveVoltage, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_haveVoltage(ArClientHandlerRobotUpdate self) -> bool"},
	 { (char *)"ArClientHandlerRobotUpdate_getVoltage", _wrap_ArClientHandlerRobotUpdate_getVoltage, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getVoltage(ArClientHandlerRobotUpdate self) -> double"},
	 { (char *)"ArClientHandlerRobotUpdate_getTemperature", _wrap_ArClientHandlerRobotUpdate_getTemperature, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getTemperature(ArClientHandlerRobotUpdate self) -> double"},
	 { (char *)"ArClientHandlerRobotUpdate_getStatus", _wrap_ArClientHandlerRobotUpdate_getStatus, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getStatus(ArClientHandlerRobotUpdate self) -> char const *"},
	 { (char *)"ArClientHandlerRobotUpdate_getMode", _wrap_ArClientHandlerRobotUpdate_getMode, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_getMode(ArClientHandlerRobotUpdate self) -> char const *"},
	 { (char *)"ArClientHandlerRobotUpdate_waitForStatus", _wrap_ArClientHandlerRobotUpdate_waitForStatus, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_waitForStatus(ArClientHandlerRobotUpdate self, char const * status, long timeout) -> bool"},
	 { (char *)"ArClientHandlerRobotUpdate_waitForMode", _wrap_ArClientHandlerRobotUpdate_waitForMode, METH_VARARGS, (char *)"ArClientHandlerRobotUpdate_waitForMode(ArClientHandlerRobotUpdate self, char const * mode, long timeout) -> bool"},
	 { (char *)"ArClientHandlerRobotUpdate_swigregister", ArClientHandlerRobotUpdate_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_ArFunctor1T_char_const_p_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *)  ((ArFunctor1< char const * > *) x));
}
static void *_p_ArPyFunctorTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *)  ((ArPyFunctor *) x));
}
static void *_p_ArPyFunctor1_StringTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *) (ArFunctor1< char const * > *) ((ArPyFunctor1_String *) x));
}
static void *_p_ArRetFunctorT_double_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *)  ((ArRetFunctor< double > *) x));
}
static void *_p_ArRetFunctor1T_double_ArPoseWithTime_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *) (ArRetFunctor< double > *) ((ArRetFunctor1< double,ArPoseWithTime > *) x));
}
static void *_p_ArRetFunctorT_bool_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *)  ((ArRetFunctor< bool > *) x));
}
static void *_p_ArRetFunctor1T_bool_ArArgumentBuilder_p_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *) (ArRetFunctor< bool > *) ((ArRetFunctor1< bool,ArArgumentBuilder * > *) x));
}
static void *_p_ArRetFunctor1T_bool_ArArgumentBuilder_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *) (ArRetFunctor< bool > *) ((ArRetFunctor1< bool,ArArgumentBuilder > *) x));
}
static void *_p_ArRetFunctor1T_bool_ArRobotPacket_p_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *) (ArRetFunctor< bool > *) ((ArRetFunctor1< bool,ArRobotPacket * > *) x));
}
static void *_p_ArFunctor1T_ArRobotPacket_p_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *)  ((ArFunctor1< ArRobotPacket * > *) x));
}
static void *_p_ArRetFunctor1T_void_p_void_p_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *) (ArRetFunctor< void * > *) ((ArRetFunctor1< void *,void * > *) x));
}
static void *_p_ArRetFunctorT_void_p_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *)  ((ArRetFunctor< void * > *) x));
}
static void *_p_ArRetFunctorT_int_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *)  ((ArRetFunctor< int > *) x));
}
static void *_p_ArFunctor1T_int_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *)  ((ArFunctor1< int > *) x));
}
static void *_p_ArPyRetFunctor_BoolTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *) (ArRetFunctor< bool > *) ((ArPyRetFunctor_Bool *) x));
}
static void *_p_ArRetFunctorT_unsigned_int_tTo_p_ArFunctor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArFunctor *)  ((ArRetFunctor< unsigned int > *) x));
}
static void *_p_ArServerModeIdleTo_p_ArServerMode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArServerMode *)  ((ArServerModeIdle *) x));
}
static void *_p_ArServerModeRatioDriveTo_p_ArServerMode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArServerMode *)  ((ArServerModeRatioDrive *) x));
}
static void *_p_ArServerModeStopTo_p_ArServerMode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArServerMode *)  ((ArServerModeStop *) x));
}
static void *_p_ArServerModeWanderTo_p_ArServerMode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArServerMode *)  ((ArServerModeWander *) x));
}
static void *_p_ArServerModeDriveTo_p_ArServerMode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArServerMode *)  ((ArServerModeDrive *) x));
}
static void *_p_ArRecurrentTaskTo_p_ArASyncTask(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArASyncTask *)  ((ArRecurrentTask *) x));
}
static void *_p_ArServerBaseTo_p_ArASyncTask(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArASyncTask *)  ((ArServerBase *) x));
}
static void *_p_ArFunctorASyncTaskTo_p_ArASyncTask(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArASyncTask *)  ((ArFunctorASyncTask *) x));
}
static void *_p_ArSignalHandlerTo_p_ArASyncTask(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArASyncTask *)  ((ArSignalHandler *) x));
}
static void *_p_ArSyncLoopTo_p_ArASyncTask(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArASyncTask *)  ((ArSyncLoop *) x));
}
static void *_p_ArClientBaseTo_p_ArASyncTask(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArASyncTask *)  ((ArClientBase *) x));
}
static void *_p_ArSoundsQueueTo_p_ArASyncTask(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArASyncTask *)  ((ArSoundsQueue *) x));
}
static void *_p_ArConfigArg_BoolTo_p_ArConfigArg(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArConfigArg *)  ((ArConfigArg_Bool *) x));
}
static void *_p_ArConfigArg_DoubleTo_p_ArConfigArg(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArConfigArg *)  ((ArConfigArg_Double *) x));
}
static void *_p_ArConfigArg_StringTo_p_ArConfigArg(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArConfigArg *)  ((ArConfigArg_String *) x));
}
static void *_p_ArConfigArg_IntTo_p_ArConfigArg(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArConfigArg *)  ((ArConfigArg_Int *) x));
}
static void *_p_ArLaserTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *) (ArRangeDeviceThreaded *) ((ArLaser *) x));
}
static void *_p_ArLaserFilterTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *) (ArRangeDeviceThreaded *)(ArLaser *) ((ArLaserFilter *) x));
}
static void *_p_ArSimulatedLaserTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *) (ArRangeDeviceThreaded *)(ArLaser *) ((ArSimulatedLaser *) x));
}
static void *_p_ArRangeDeviceThreadedTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *)  ((ArRangeDeviceThreaded *) x));
}
static void *_p_ArIRsTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *)  ((ArIRs *) x));
}
static void *_p_ArUrgTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *) (ArRangeDeviceThreaded *)(ArLaser *) ((ArUrg *) x));
}
static void *_p_ArIrrfDeviceTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *)  ((ArIrrfDevice *) x));
}
static void *_p_ArLaserReflectorDeviceTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *)  ((ArLaserReflectorDevice *) x));
}
static void *_p_ArSonarDeviceTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *)  ((ArSonarDevice *) x));
}
static void *_p_ArBumpersTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *)  ((ArBumpers *) x));
}
static void *_p_ArForbiddenRangeDeviceTo_p_ArRangeDevice(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArRangeDevice *)  ((ArForbiddenRangeDevice *) x));
}
static void *_p_ArActionInputTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionInput *) x));
}
static void *_p_ArActionAvoidSideTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionAvoidSide *) x));
}
static void *_p_ArActionLimiterTableSensorTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionLimiterTableSensor *) x));
}
static void *_p_ArActionStopTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionStop *) x));
}
static void *_p_ArActionDeceleratingLimiterTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionDeceleratingLimiter *) x));
}
static void *_p_ArActionMovementParametersTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionMovementParameters *) x));
}
static void *_p_ArActionRatioInputTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionRatioInput *) x));
}
static void *_p_ArActionKeydriveTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionKeydrive *) x));
}
static void *_p_ArActionJoydriveTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionJoydrive *) x));
}
static void *_p_ArActionRobotJoydriveTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionRobotJoydrive *) x));
}
static void *_p_ArActionBumpersTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionBumpers *) x));
}
static void *_p_ArActionLimiterForwardsTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionLimiterForwards *) x));
}
static void *_p_ArActionTurnTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionTurn *) x));
}
static void *_p_ArActionConstantVelocityTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionConstantVelocity *) x));
}
static void *_p_ArActionLimiterBackwardsTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionLimiterBackwards *) x));
}
static void *_p_ArActionGotoStraightTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionGotoStraight *) x));
}
static void *_p_ArActionTriangleDriveToTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionTriangleDriveTo *) x));
}
static void *_p_ArActionColorFollowTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionColorFollow *) x));
}
static void *_p_ArActionAvoidFrontTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionAvoidFront *) x));
}
static void *_p_ArActionIRsTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionIRs *) x));
}
static void *_p_ArActionGotoTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionGoto *) x));
}
static void *_p_ArActionStallRecoverTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionStallRecover *) x));
}
static void *_p_ArActionDriveDistanceTo_p_ArAction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArAction *)  ((ArActionDriveDistance *) x));
}
static void *_p_ArPos2DTo_p_ArPose(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArPose *)  ((ArPos2D *) x));
}
static void *_p_ArPoseWithTimeTo_p_ArPose(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArPose *)  ((ArPoseWithTime *) x));
}
static void *_p_ArRobotParamsTo_p_ArConfig(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArConfig *)  ((ArRobotParams *) x));
}
static void *_p_ArCameraParameterSourceTo_p_ArCameraCollectionItem(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArCameraCollectionItem *)  ((ArCameraParameterSource *) x));
}
static void *_p_ArHybridForwarderVideoTo_p_ArCameraCollectionItem(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArCameraCollectionItem *)  ((ArHybridForwarderVideo *) x));
}
static void *_p_ArServerHandlerCameraTo_p_ArCameraCollectionItem(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArCameraCollectionItem *)  ((ArServerHandlerCamera *) x));
}
static void *_p_ArMapTo_p_ArMapInterface(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArMapInterface *)  ((ArMap *) x));
}
static void *_p_ArRobotPacketTo_p_ArBasePacket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArBasePacket *)  ((ArRobotPacket *) x));
}
static void *_p_ArRVisionPacketTo_p_ArBasePacket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArBasePacket *)  ((ArRVisionPacket *) x));
}
static void *_p_ArVCC4PacketTo_p_ArBasePacket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArBasePacket *)  ((ArVCC4Packet *) x));
}
static void *_p_ArNetPacketTo_p_ArBasePacket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArBasePacket *)  ((ArNetPacket *) x));
}
static void *_p_ArAMPTUPacketTo_p_ArBasePacket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArBasePacket *)  ((ArAMPTUPacket *) x));
}
static void *_p_ArDPPTUPacketTo_p_ArBasePacket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArBasePacket *)  ((ArDPPTUPacket *) x));
}
static void *_p_ArSonyPacketTo_p_ArBasePacket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArBasePacket *)  ((ArSonyPacket *) x));
}
static void *_p_ArSonyPTZTo_p_ArPTZ(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArPTZ *)  ((ArSonyPTZ *) x));
}
static void *_p_ArAMPTUTo_p_ArPTZ(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArPTZ *)  ((ArAMPTU *) x));
}
static void *_p_ArDPPTUTo_p_ArPTZ(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArPTZ *)  ((ArDPPTU *) x));
}
static void *_p_ArRVisionPTZTo_p_ArPTZ(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArPTZ *)  ((ArRVisionPTZ *) x));
}
static void *_p_ArVCC4To_p_ArPTZ(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArPTZ *)  ((ArVCC4 *) x));
}
static void *_p_ArActionGroupTeleopTo_p_ArActionGroup(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArActionGroup *)  ((ArActionGroupTeleop *) x));
}
static void *_p_ArActionGroupUnguardedTeleopTo_p_ArActionGroup(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArActionGroup *)  ((ArActionGroupUnguardedTeleop *) x));
}
static void *_p_ArActionGroupWanderTo_p_ArActionGroup(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArActionGroup *)  ((ArActionGroupWander *) x));
}
static void *_p_ArActionGroupRatioDriveTo_p_ArActionGroup(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArActionGroup *)  ((ArActionGroupRatioDrive *) x));
}
static void *_p_ArActionGroupInputTo_p_ArActionGroup(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArActionGroup *)  ((ArActionGroupInput *) x));
}
static void *_p_ArActionGroupStopTo_p_ArActionGroup(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArActionGroup *)  ((ArActionGroupStop *) x));
}
static void *_p_ArActionGroupColorFollowTo_p_ArActionGroup(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArActionGroup *)  ((ArActionGroupColorFollow *) x));
}
static void *_p_ArActionGroupRatioDriveUnsafeTo_p_ArActionGroup(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArActionGroup *)  ((ArActionGroupRatioDriveUnsafe *) x));
}
static void *_p_ArLaserFilterTo_p_ArLaser(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArLaser *)  ((ArLaserFilter *) x));
}
static void *_p_ArSimulatedLaserTo_p_ArLaser(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArLaser *)  ((ArSimulatedLaser *) x));
}
static void *_p_ArUrgTo_p_ArLaser(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArLaser *)  ((ArUrg *) x));
}
static void *_p_ArRecurrentTaskTo_p_ArThread(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArThread *) (ArASyncTask *) ((ArRecurrentTask *) x));
}
static void *_p_ArServerBaseTo_p_ArThread(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArThread *) (ArASyncTask *) ((ArServerBase *) x));
}
static void *_p_ArASyncTaskTo_p_ArThread(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArThread *)  ((ArASyncTask *) x));
}
static void *_p_ArFunctorASyncTaskTo_p_ArThread(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArThread *) (ArASyncTask *) ((ArFunctorASyncTask *) x));
}
static void *_p_ArSignalHandlerTo_p_ArThread(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArThread *) (ArASyncTask *) ((ArSignalHandler *) x));
}
static void *_p_ArSyncLoopTo_p_ArThread(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArThread *) (ArASyncTask *) ((ArSyncLoop *) x));
}
static void *_p_ArClientBaseTo_p_ArThread(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArThread *) (ArASyncTask *) ((ArClientBase *) x));
}
static void *_p_ArSoundsQueueTo_p_ArThread(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ArThread *) (ArASyncTask *) ((ArSoundsQueue *) x));
}
static swig_type_info _swigt__p_ActionMap = {"_p_ActionMap", "ActionMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArASyncTask = {"_p_ArASyncTask", "ArASyncTask *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArRecurrentTask = {"_p_ArRecurrentTask", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArFunctorASyncTask = {"_p_ArFunctorASyncTask", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArSignalHandler = {"_p_ArSignalHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArSyncLoop = {"_p_ArSyncLoop", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArSoundsQueue = {"_p_ArSoundsQueue", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArAction = {"_p_ArAction", "ArAction *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArActionInput = {"_p_ArActionInput", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionLimiterTableSensor = {"_p_ArActionLimiterTableSensor", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionAvoidSide = {"_p_ArActionAvoidSide", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionStop = {"_p_ArActionStop", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionMovementParameters = {"_p_ArActionMovementParameters", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionDeceleratingLimiter = {"_p_ArActionDeceleratingLimiter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionKeydrive = {"_p_ArActionKeydrive", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionJoydrive = {"_p_ArActionJoydrive", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionRobotJoydrive = {"_p_ArActionRobotJoydrive", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionBumpers = {"_p_ArActionBumpers", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionLimiterForwards = {"_p_ArActionLimiterForwards", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionTurn = {"_p_ArActionTurn", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionConstantVelocity = {"_p_ArActionConstantVelocity", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionLimiterBackwards = {"_p_ArActionLimiterBackwards", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionGotoStraight = {"_p_ArActionGotoStraight", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionTriangleDriveTo = {"_p_ArActionTriangleDriveTo", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionColorFollow = {"_p_ArActionColorFollow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionAvoidFront = {"_p_ArActionAvoidFront", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionIRs = {"_p_ArActionIRs", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionGoto = {"_p_ArActionGoto", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionStallRecover = {"_p_ArActionStallRecover", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionDriveDistance = {"_p_ArActionDriveDistance", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionGroup = {"_p_ArActionGroup", "ArActionGroup *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArActionGroupTeleop = {"_p_ArActionGroupTeleop", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionGroupUnguardedTeleop = {"_p_ArActionGroupUnguardedTeleop", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionGroupWander = {"_p_ArActionGroupWander", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionGroupRatioDrive = {"_p_ArActionGroupRatioDrive", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionGroupInput = {"_p_ArActionGroupInput", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionGroupStop = {"_p_ArActionGroupStop", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionGroupColorFollow = {"_p_ArActionGroupColorFollow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionGroupRatioDriveUnsafe = {"_p_ArActionGroupRatioDriveUnsafe", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArActionRatioInput = {"_p_ArActionRatioInput", "ArActionRatioInput *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArAnalogGyro = {"_p_ArAnalogGyro", "ArAnalogGyro *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArArgumentBuilder = {"_p_ArArgumentBuilder", "ArArgumentBuilder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArArgumentParser = {"_p_ArArgumentParser", "ArArgumentParser *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArBasePacket = {"_p_ArBasePacket", "ArBasePacket *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArRVisionPacket = {"_p_ArRVisionPacket", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArVCC4Packet = {"_p_ArVCC4Packet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArAMPTUPacket = {"_p_ArAMPTUPacket", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArDPPTUPacket = {"_p_ArDPPTUPacket", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArSonyPacket = {"_p_ArSonyPacket", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArCameraCollection = {"_p_ArCameraCollection", "ArCameraCollection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArCameraCollectionItem = {"_p_ArCameraCollectionItem", "ArCameraCollectionItem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArCameraParameterSource = {"_p_ArCameraParameterSource", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArClientArg = {"_p_ArClientArg", "ArClientArg *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArClientBase = {"_p_ArClientBase", "ArClientBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArClientCommands = {"_p_ArClientCommands", "ArClientCommands *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArClientDeleteFileOnServer = {"_p_ArClientDeleteFileOnServer", "ArClientDeleteFileOnServer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArClientFileFromClient = {"_p_ArClientFileFromClient", "ArClientFileFromClient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArClientFileLister = {"_p_ArClientFileLister", "ArClientFileLister *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArClientFileListerItem = {"_p_ArClientFileListerItem", "ArClientFileListerItem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArClientFileToClient = {"_p_ArClientFileToClient", "ArClientFileToClient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArClientHandlerConfig = {"_p_ArClientHandlerConfig", "ArClientHandlerConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArClientHandlerRobotUpdate = {"_p_ArClientHandlerRobotUpdate", "ArClientHandlerRobotUpdate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArClientSimpleConnector = {"_p_ArClientSimpleConnector", "ArClientSimpleConnector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArConfig = {"_p_ArConfig", "ArConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArRobotParams = {"_p_ArRobotParams", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArConfigArg = {"_p_ArConfigArg", "ArConfigArg *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArConfigArg_Bool = {"_p_ArConfigArg_Bool", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArConfigArg_Double = {"_p_ArConfigArg_Double", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArConfigArg_String = {"_p_ArConfigArg_String", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArConfigArg_Int = {"_p_ArConfigArg_Int", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArDrawingData = {"_p_ArDrawingData", "ArDrawingData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArFunctor = {"_p_ArFunctor", "ArFunctor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArRetFunctor1T_bool_ArRobotPacket_p_t = {"_p_ArRetFunctor1T_bool_ArRobotPacket_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArFunctor1T_ArRobotPacket_p_t = {"_p_ArFunctor1T_ArRobotPacket_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArPyFunctor = {"_p_ArPyFunctor", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRetFunctorT_double_t = {"_p_ArRetFunctorT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRetFunctor1T_double_ArPoseWithTime_t = {"_p_ArRetFunctor1T_double_ArPoseWithTime_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArPyFunctor1_String = {"_p_ArPyFunctor1_String", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRetFunctor1T_bool_ArArgumentBuilder_t = {"_p_ArRetFunctor1T_bool_ArArgumentBuilder_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArFunctor1T_char_const_p_t = {"_p_ArFunctor1T_char_const_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRetFunctor1T_void_p_void_p_t = {"_p_ArRetFunctor1T_void_p_void_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRetFunctorT_void_p_t = {"_p_ArRetFunctorT_void_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRetFunctorT_bool_t = {"_p_ArRetFunctorT_bool_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRetFunctorT_int_t = {"_p_ArRetFunctorT_int_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRetFunctorT_unsigned_int_t = {"_p_ArRetFunctorT_unsigned_int_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArPyRetFunctor_Bool = {"_p_ArPyRetFunctor_Bool", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRetFunctor1T_bool_ArArgumentBuilder_p_t = {"_p_ArRetFunctor1T_bool_ArArgumentBuilder_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArFunctor1T_ArArgumentBuilder_p_t = {"_p_ArFunctor1T_ArArgumentBuilder_p_t", "ArFunctor1< ArArgumentBuilder * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArFunctor1T_ArNetPacket_p_t = {"_p_ArFunctor1T_ArNetPacket_p_t", "ArFunctor1< ArNetPacket * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArFunctor1T_ArServerClient_p_t = {"_p_ArFunctor1T_ArServerClient_p_t", "ArFunctor1< ArServerClient * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArFunctor1T_int_t = {"_p_ArFunctor1T_int_t", "ArFunctor1< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArFunctor2T_ArNetPacket_p_sockaddr_in_p_t = {"_p_ArFunctor2T_ArNetPacket_p_sockaddr_in_p_t", "ArFunctor2< ArNetPacket *,sockaddr_in * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArFunctor2T_ArServerClient_p_ArNetPacket_p_t = {"_p_ArFunctor2T_ArServerClient_p_ArNetPacket_p_t", "ArFunctor2< ArServerClient *,ArNetPacket * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArFunctor2T_char_const_p_char_const_p_t = {"_p_ArFunctor2T_char_const_p_char_const_p_t", "ArFunctor2< char const *,char const * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArFunctor2T_char_p_unsigned_short_t = {"_p_ArFunctor2T_char_p_unsigned_short_t", "ArFunctor2< char *,unsigned short > *|ArFunctor2< char *,ArTypes::UByte2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArFunctor2T_long_unsigned_int_t = {"_p_ArFunctor2T_long_unsigned_int_t", "ArFunctor2< long,unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArFunctor3T_char_const_p_unsigned_short_ArFunctor2T_char_p_unsigned_short_t_p_t = {"_p_ArFunctor3T_char_const_p_unsigned_short_ArFunctor2T_char_p_unsigned_short_t_p_t", "ArFunctor3< char const *,ArTypes::UByte2,ArFunctor2< char *,ArTypes::UByte2 > * > *|ArFunctor3< char const *,unsigned short,ArFunctor2< char *,unsigned short > * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArHybridForwarderVideo = {"_p_ArHybridForwarderVideo", "ArHybridForwarderVideo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArLaser = {"_p_ArLaser", "ArLaser *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArLaserFilter = {"_p_ArLaserFilter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArSimulatedLaser = {"_p_ArSimulatedLaser", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArUrg = {"_p_ArUrg", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArLaserLogger = {"_p_ArLaserLogger", "ArLaserLogger *|ArSickLogger *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArMap = {"_p_ArMap", "ArMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArMapInterface = {"_p_ArMapInterface", "ArMapInterface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArNetPacket = {"_p_ArNetPacket", "ArNetPacket *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArNetPacketReceiverTcp = {"_p_ArNetPacketReceiverTcp", "ArNetPacketReceiverTcp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArNetPacketReceiverUdp = {"_p_ArNetPacketReceiverUdp", "ArNetPacketReceiverUdp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArNetPacketSenderTcp = {"_p_ArNetPacketSenderTcp", "ArNetPacketSenderTcp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArNetServer = {"_p_ArNetServer", "ArNetServer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArPTZ = {"_p_ArPTZ", "ArPTZ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArSonyPTZ = {"_p_ArSonyPTZ", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArAMPTU = {"_p_ArAMPTU", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArDPPTU = {"_p_ArDPPTU", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRVisionPTZ = {"_p_ArRVisionPTZ", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArVCC4 = {"_p_ArVCC4", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArPose = {"_p_ArPose", "ArPose *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArPos2D = {"_p_ArPos2D", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArPoseWithTime = {"_p_ArPoseWithTime", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRangeDevice = {"_p_ArRangeDevice", "ArRangeDevice *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArRangeDeviceThreaded = {"_p_ArRangeDeviceThreaded", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArIRs = {"_p_ArIRs", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArIrrfDevice = {"_p_ArIrrfDevice", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArLaserReflectorDevice = {"_p_ArLaserReflectorDevice", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArSonarDevice = {"_p_ArSonarDevice", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArBumpers = {"_p_ArBumpers", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArForbiddenRangeDevice = {"_p_ArForbiddenRangeDevice", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t = {"_p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t", "ArRetFunctor2< bool,ArNetPacket *,sockaddr_in * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArRetFunctor2T_bool_ArServerClient_p_ArNetPacket_p_t = {"_p_ArRetFunctor2T_bool_ArServerClient_p_ArNetPacket_p_t", "ArRetFunctor2< bool,ArServerClient *,ArNetPacket * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t = {"_p_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t", "ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArRobot = {"_p_ArRobot", "ArRobot *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArRobotPacket = {"_p_ArRobotPacket", "ArRobotPacket *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerBase = {"_p_ArServerBase", "ArServerBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerClient = {"_p_ArServerClient", "ArServerClient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerClientData = {"_p_ArServerClientData", "ArServerClientData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerClientIdentifier = {"_p_ArServerClientIdentifier", "ArServerClientIdentifier *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerCommands = {"_p_ArServerCommands", "ArServerCommands *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerData = {"_p_ArServerData", "ArServerData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerDeleteFileOnServer = {"_p_ArServerDeleteFileOnServer", "ArServerDeleteFileOnServer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerFileFromClient = {"_p_ArServerFileFromClient", "ArServerFileFromClient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerFileLister = {"_p_ArServerFileLister", "ArServerFileLister *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerFileToClient = {"_p_ArServerFileToClient", "ArServerFileToClient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerHandlerCamera = {"_p_ArServerHandlerCamera", "ArServerHandlerCamera *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerHandlerCameraCollection = {"_p_ArServerHandlerCameraCollection", "ArServerHandlerCameraCollection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerHandlerCommMonitor = {"_p_ArServerHandlerCommMonitor", "ArServerHandlerCommMonitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerHandlerCommands = {"_p_ArServerHandlerCommands", "ArServerHandlerCommands *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerHandlerConfig = {"_p_ArServerHandlerConfig", "ArServerHandlerConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerHandlerMap = {"_p_ArServerHandlerMap", "ArServerHandlerMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerHandlerMapping = {"_p_ArServerHandlerMapping", "ArServerHandlerMapping *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerHandlerPopup = {"_p_ArServerHandlerPopup", "ArServerHandlerPopup *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerInfoDrawings = {"_p_ArServerInfoDrawings", "ArServerInfoDrawings *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerInfoRobot = {"_p_ArServerInfoRobot", "ArServerInfoRobot *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerInfoSensor = {"_p_ArServerInfoSensor", "ArServerInfoSensor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerInfoStrings = {"_p_ArServerInfoStrings", "ArServerInfoStrings *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerMode = {"_p_ArServerMode", "ArServerMode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerModeDrive = {"_p_ArServerModeDrive", "ArServerModeDrive *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerModeIdle = {"_p_ArServerModeIdle", "ArServerModeIdle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerModeRatioDrive = {"_p_ArServerModeRatioDrive", "ArServerModeRatioDrive *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerModeStop = {"_p_ArServerModeStop", "ArServerModeStop *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerModeWander = {"_p_ArServerModeWander", "ArServerModeWander *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerSimpleComGyro = {"_p_ArServerSimpleComGyro", "ArServerSimpleComGyro *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerSimpleComLogActions = {"_p_ArServerSimpleComLogActions", "ArServerSimpleComLogActions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerSimpleComLogRobotConfig = {"_p_ArServerSimpleComLogRobotConfig", "ArServerSimpleComLogRobotConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerSimpleComMovementLogging = {"_p_ArServerSimpleComMovementLogging", "ArServerSimpleComMovementLogging *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerSimpleComUC = {"_p_ArServerSimpleComUC", "ArServerSimpleComUC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerSimpleConnectionTester = {"_p_ArServerSimpleConnectionTester", "ArServerSimpleConnectionTester *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerSimpleLogRobotDebugPackets = {"_p_ArServerSimpleLogRobotDebugPackets", "ArServerSimpleLogRobotDebugPackets *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerSimpleOpener = {"_p_ArServerSimpleOpener", "ArServerSimpleOpener *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerSimplePopup = {"_p_ArServerSimplePopup", "ArServerSimplePopup *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerSimpleServerCommands = {"_p_ArServerSimpleServerCommands", "ArServerSimpleServerCommands *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArServerUserInfo = {"_p_ArServerUserInfo", "ArServerUserInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArSocket = {"_p_ArSocket", "ArSocket *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArStringInfoGroup = {"_p_ArStringInfoGroup", "ArStringInfoGroup *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArStringInfoHolder = {"_p_ArStringInfoHolder", "ArStringInfoHolder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArThread = {"_p_ArThread", "ArThread *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArTime = {"_p_ArTime", "ArTime *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArZippable = {"_p_ArZippable", "ArZippable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Byte = {"_p_Byte", "Byte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Byte2 = {"_p_Byte2", "Byte2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Byte4 = {"_p_Byte4", "Byte4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Byte8 = {"_p_Byte8", "Byte8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CondType = {"_p_CondType", "CondType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FixType = {"_p_FixType", "FixType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GPSType = {"_p_GPSType", "GPSType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Handler = {"_p_Handler", "Handler *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HandlerMap = {"_p_HandlerMap", "HandlerMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_InterruptItemFunctor = {"_p_InterruptItemFunctor", "InterruptItemFunctor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LogLevel = {"_p_LogLevel", "LogLevel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LogType = {"_p_LogType", "LogType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MapType = {"_p_MapType", "MapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MessageVector = {"_p_MessageVector", "MessageVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MutexType = {"_p_MutexType", "MutexType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PacketType = {"_p_PacketType", "PacketType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlayItemFunctor = {"_p_PlayItemFunctor", "PlayItemFunctor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlaybackConditionFunctor = {"_p_PlaybackConditionFunctor", "PlaybackConditionFunctor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Pos = {"_p_Pos", "Pos *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SigHandleMethod = {"_p_SigHandleMethod", "SigHandleMethod *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Signal = {"_p_Signal", "Signal *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_State = {"_p_State", "State *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Status = {"_p_Status", "Status *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_StatusType = {"_p_StatusType", "StatusType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ThreadType = {"_p_ThreadType", "ThreadType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Type = {"_p_Type", "Type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UByte = {"_p_UByte", "UByte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UByte2 = {"_p_UByte2", "UByte2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UByte4 = {"_p_UByte4", "UByte4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UByte8 = {"_p_UByte8", "UByte8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WaitState = {"_p_WaitState", "WaitState *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_reference = {"_p_const_reference", "const_reference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_in_addr = {"_p_in_addr", "in_addr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_key_type = {"_p_key_type", "key_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapped_type = {"_p_mapped_type", "mapped_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_md5_state_s = {"_p_md5_state_s", "md5_state_s *|md5_state_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_reference = {"_p_reference", "reference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sockaddr_in = {"_p_sockaddr_in", "sockaddr_in *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_ArClientFileListerItem_std__allocatorT_ArClientFileListerItem_t_t = {"_p_std__listT_ArClientFileListerItem_std__allocatorT_ArClientFileListerItem_t_t", "std::list< ArClientFileListerItem,std::allocator< ArClientFileListerItem > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_ArConfigArg_p_std__allocatorT_ArConfigArg_p_t_t = {"_p_std__listT_ArConfigArg_p_std__allocatorT_ArConfigArg_p_t_t", "std::list< ArConfigArg *,std::allocator< ArConfigArg * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_ArLaser_p_std__allocatorT_ArLaser_p_t_t = {"_p_std__listT_ArLaser_p_std__allocatorT_ArLaser_p_t_t", "std::list< ArLaser *,std::allocator< ArLaser * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_int_std__string_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__string_t_t_t = {"_p_std__mapT_int_std__string_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__string_t_t_t", "ArStrMap *|std::map< int,std::string,std::less< int >,std::allocator< std::pair< int const,std::string > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_std__string_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_ArStrCaseCmpOp_std__allocatorT_std__pairT_std__string_const_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_t_t_t = {"_p_std__mapT_std__string_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_ArStrCaseCmpOp_std__allocatorT_std__pairT_std__string_const_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_t_t_t", "std::map< std::string,ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > *,ArStrCaseCmpOp,std::allocator< std::pair< std::string const,ArRetFunctor3< int,ArTime,ArPose *,ArPoseWithTime * > * > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_unsigned_int_ArClientData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArClientData_p_t_t_t = {"_p_std__mapT_unsigned_int_ArClientData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArClientData_p_t_t_t", "std::map< unsigned int,ArClientData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArClientData * > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t = {"_p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t", "std::map< unsigned int,ArServerData *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,ArServerData * > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_std__string_ArStrCaseCmpOp_std__allocatorT_std__string_t_t = {"_p_std__setT_std__string_ArStrCaseCmpOp_std__allocatorT_std__string_t_t", "std::set< std::string,ArStrCaseCmpOp,std::allocator< std::string > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_time_t = {"_p_time_t", "time_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|md5_byte_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *|md5_word_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_ActionMap,
  &_swigt__p_ArAMPTU,
  &_swigt__p_ArAMPTUPacket,
  &_swigt__p_ArASyncTask,
  &_swigt__p_ArAction,
  &_swigt__p_ArActionAvoidFront,
  &_swigt__p_ArActionAvoidSide,
  &_swigt__p_ArActionBumpers,
  &_swigt__p_ArActionColorFollow,
  &_swigt__p_ArActionConstantVelocity,
  &_swigt__p_ArActionDeceleratingLimiter,
  &_swigt__p_ArActionDriveDistance,
  &_swigt__p_ArActionGoto,
  &_swigt__p_ArActionGotoStraight,
  &_swigt__p_ArActionGroup,
  &_swigt__p_ArActionGroupColorFollow,
  &_swigt__p_ArActionGroupInput,
  &_swigt__p_ArActionGroupRatioDrive,
  &_swigt__p_ArActionGroupRatioDriveUnsafe,
  &_swigt__p_ArActionGroupStop,
  &_swigt__p_ArActionGroupTeleop,
  &_swigt__p_ArActionGroupUnguardedTeleop,
  &_swigt__p_ArActionGroupWander,
  &_swigt__p_ArActionIRs,
  &_swigt__p_ArActionInput,
  &_swigt__p_ArActionJoydrive,
  &_swigt__p_ArActionKeydrive,
  &_swigt__p_ArActionLimiterBackwards,
  &_swigt__p_ArActionLimiterForwards,
  &_swigt__p_ArActionLimiterTableSensor,
  &_swigt__p_ArActionMovementParameters,
  &_swigt__p_ArActionRatioInput,
  &_swigt__p_ArActionRobotJoydrive,
  &_swigt__p_ArActionStallRecover,
  &_swigt__p_ArActionStop,
  &_swigt__p_ArActionTriangleDriveTo,
  &_swigt__p_ArActionTurn,
  &_swigt__p_ArAnalogGyro,
  &_swigt__p_ArArgumentBuilder,
  &_swigt__p_ArArgumentParser,
  &_swigt__p_ArBasePacket,
  &_swigt__p_ArBumpers,
  &_swigt__p_ArCameraCollection,
  &_swigt__p_ArCameraCollectionItem,
  &_swigt__p_ArCameraParameterSource,
  &_swigt__p_ArClientArg,
  &_swigt__p_ArClientBase,
  &_swigt__p_ArClientCommands,
  &_swigt__p_ArClientDeleteFileOnServer,
  &_swigt__p_ArClientFileFromClient,
  &_swigt__p_ArClientFileLister,
  &_swigt__p_ArClientFileListerItem,
  &_swigt__p_ArClientFileToClient,
  &_swigt__p_ArClientHandlerConfig,
  &_swigt__p_ArClientHandlerRobotUpdate,
  &_swigt__p_ArClientSimpleConnector,
  &_swigt__p_ArConfig,
  &_swigt__p_ArConfigArg,
  &_swigt__p_ArConfigArg_Bool,
  &_swigt__p_ArConfigArg_Double,
  &_swigt__p_ArConfigArg_Int,
  &_swigt__p_ArConfigArg_String,
  &_swigt__p_ArDPPTU,
  &_swigt__p_ArDPPTUPacket,
  &_swigt__p_ArDrawingData,
  &_swigt__p_ArForbiddenRangeDevice,
  &_swigt__p_ArFunctor,
  &_swigt__p_ArFunctor1T_ArArgumentBuilder_p_t,
  &_swigt__p_ArFunctor1T_ArNetPacket_p_t,
  &_swigt__p_ArFunctor1T_ArRobotPacket_p_t,
  &_swigt__p_ArFunctor1T_ArServerClient_p_t,
  &_swigt__p_ArFunctor1T_char_const_p_t,
  &_swigt__p_ArFunctor1T_int_t,
  &_swigt__p_ArFunctor2T_ArNetPacket_p_sockaddr_in_p_t,
  &_swigt__p_ArFunctor2T_ArServerClient_p_ArNetPacket_p_t,
  &_swigt__p_ArFunctor2T_char_const_p_char_const_p_t,
  &_swigt__p_ArFunctor2T_char_p_unsigned_short_t,
  &_swigt__p_ArFunctor2T_long_unsigned_int_t,
  &_swigt__p_ArFunctor3T_char_const_p_unsigned_short_ArFunctor2T_char_p_unsigned_short_t_p_t,
  &_swigt__p_ArFunctorASyncTask,
  &_swigt__p_ArHybridForwarderVideo,
  &_swigt__p_ArIRs,
  &_swigt__p_ArIrrfDevice,
  &_swigt__p_ArLaser,
  &_swigt__p_ArLaserFilter,
  &_swigt__p_ArLaserLogger,
  &_swigt__p_ArLaserReflectorDevice,
  &_swigt__p_ArMap,
  &_swigt__p_ArMapInterface,
  &_swigt__p_ArNetPacket,
  &_swigt__p_ArNetPacketReceiverTcp,
  &_swigt__p_ArNetPacketReceiverUdp,
  &_swigt__p_ArNetPacketSenderTcp,
  &_swigt__p_ArNetServer,
  &_swigt__p_ArPTZ,
  &_swigt__p_ArPos2D,
  &_swigt__p_ArPose,
  &_swigt__p_ArPoseWithTime,
  &_swigt__p_ArPyFunctor,
  &_swigt__p_ArPyFunctor1_String,
  &_swigt__p_ArPyRetFunctor_Bool,
  &_swigt__p_ArRVisionPTZ,
  &_swigt__p_ArRVisionPacket,
  &_swigt__p_ArRangeDevice,
  &_swigt__p_ArRangeDeviceThreaded,
  &_swigt__p_ArRecurrentTask,
  &_swigt__p_ArRetFunctor1T_bool_ArArgumentBuilder_p_t,
  &_swigt__p_ArRetFunctor1T_bool_ArArgumentBuilder_t,
  &_swigt__p_ArRetFunctor1T_bool_ArRobotPacket_p_t,
  &_swigt__p_ArRetFunctor1T_double_ArPoseWithTime_t,
  &_swigt__p_ArRetFunctor1T_void_p_void_p_t,
  &_swigt__p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t,
  &_swigt__p_ArRetFunctor2T_bool_ArServerClient_p_ArNetPacket_p_t,
  &_swigt__p_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t,
  &_swigt__p_ArRetFunctorT_bool_t,
  &_swigt__p_ArRetFunctorT_double_t,
  &_swigt__p_ArRetFunctorT_int_t,
  &_swigt__p_ArRetFunctorT_unsigned_int_t,
  &_swigt__p_ArRetFunctorT_void_p_t,
  &_swigt__p_ArRobot,
  &_swigt__p_ArRobotPacket,
  &_swigt__p_ArRobotParams,
  &_swigt__p_ArServerBase,
  &_swigt__p_ArServerClient,
  &_swigt__p_ArServerClientData,
  &_swigt__p_ArServerClientIdentifier,
  &_swigt__p_ArServerCommands,
  &_swigt__p_ArServerData,
  &_swigt__p_ArServerDeleteFileOnServer,
  &_swigt__p_ArServerFileFromClient,
  &_swigt__p_ArServerFileLister,
  &_swigt__p_ArServerFileToClient,
  &_swigt__p_ArServerHandlerCamera,
  &_swigt__p_ArServerHandlerCameraCollection,
  &_swigt__p_ArServerHandlerCommMonitor,
  &_swigt__p_ArServerHandlerCommands,
  &_swigt__p_ArServerHandlerConfig,
  &_swigt__p_ArServerHandlerMap,
  &_swigt__p_ArServerHandlerMapping,
  &_swigt__p_ArServerHandlerPopup,
  &_swigt__p_ArServerInfoDrawings,
  &_swigt__p_ArServerInfoRobot,
  &_swigt__p_ArServerInfoSensor,
  &_swigt__p_ArServerInfoStrings,
  &_swigt__p_ArServerMode,
  &_swigt__p_ArServerModeDrive,
  &_swigt__p_ArServerModeIdle,
  &_swigt__p_ArServerModeRatioDrive,
  &_swigt__p_ArServerModeStop,
  &_swigt__p_ArServerModeWander,
  &_swigt__p_ArServerSimpleComGyro,
  &_swigt__p_ArServerSimpleComLogActions,
  &_swigt__p_ArServerSimpleComLogRobotConfig,
  &_swigt__p_ArServerSimpleComMovementLogging,
  &_swigt__p_ArServerSimpleComUC,
  &_swigt__p_ArServerSimpleConnectionTester,
  &_swigt__p_ArServerSimpleLogRobotDebugPackets,
  &_swigt__p_ArServerSimpleOpener,
  &_swigt__p_ArServerSimplePopup,
  &_swigt__p_ArServerSimpleServerCommands,
  &_swigt__p_ArServerUserInfo,
  &_swigt__p_ArSignalHandler,
  &_swigt__p_ArSimulatedLaser,
  &_swigt__p_ArSocket,
  &_swigt__p_ArSonarDevice,
  &_swigt__p_ArSonyPTZ,
  &_swigt__p_ArSonyPacket,
  &_swigt__p_ArSoundsQueue,
  &_swigt__p_ArStringInfoGroup,
  &_swigt__p_ArStringInfoHolder,
  &_swigt__p_ArSyncLoop,
  &_swigt__p_ArThread,
  &_swigt__p_ArTime,
  &_swigt__p_ArUrg,
  &_swigt__p_ArVCC4,
  &_swigt__p_ArVCC4Packet,
  &_swigt__p_ArZippable,
  &_swigt__p_Byte,
  &_swigt__p_Byte2,
  &_swigt__p_Byte4,
  &_swigt__p_Byte8,
  &_swigt__p_CondType,
  &_swigt__p_FixType,
  &_swigt__p_GPSType,
  &_swigt__p_Handler,
  &_swigt__p_HandlerMap,
  &_swigt__p_InterruptItemFunctor,
  &_swigt__p_LogLevel,
  &_swigt__p_LogType,
  &_swigt__p_MapType,
  &_swigt__p_MessageVector,
  &_swigt__p_MutexType,
  &_swigt__p_PacketType,
  &_swigt__p_PlayItemFunctor,
  &_swigt__p_PlaybackConditionFunctor,
  &_swigt__p_Pos,
  &_swigt__p_SigHandleMethod,
  &_swigt__p_Signal,
  &_swigt__p_State,
  &_swigt__p_Status,
  &_swigt__p_StatusType,
  &_swigt__p_ThreadType,
  &_swigt__p_Type,
  &_swigt__p_UByte,
  &_swigt__p_UByte2,
  &_swigt__p_UByte4,
  &_swigt__p_UByte8,
  &_swigt__p_WaitState,
  &_swigt__p_allocator_type,
  &_swigt__p_char,
  &_swigt__p_const_reference,
  &_swigt__p_difference_type,
  &_swigt__p_in_addr,
  &_swigt__p_key_type,
  &_swigt__p_mapped_type,
  &_swigt__p_md5_state_s,
  &_swigt__p_reference,
  &_swigt__p_size_type,
  &_swigt__p_sockaddr_in,
  &_swigt__p_std__listT_ArClientFileListerItem_std__allocatorT_ArClientFileListerItem_t_t,
  &_swigt__p_std__listT_ArConfigArg_p_std__allocatorT_ArConfigArg_p_t_t,
  &_swigt__p_std__listT_ArLaser_p_std__allocatorT_ArLaser_p_t_t,
  &_swigt__p_std__mapT_int_std__string_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__string_t_t_t,
  &_swigt__p_std__mapT_std__string_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_ArStrCaseCmpOp_std__allocatorT_std__pairT_std__string_const_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_t_t_t,
  &_swigt__p_std__mapT_unsigned_int_ArClientData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArClientData_p_t_t_t,
  &_swigt__p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t,
  &_swigt__p_std__setT_std__string_ArStrCaseCmpOp_std__allocatorT_std__string_t_t,
  &_swigt__p_std__string,
  &_swigt__p_time_t,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_value_type,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_ActionMap[] = {  {&_swigt__p_ActionMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRecurrentTask[] = {{&_swigt__p_ArRecurrentTask, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctorASyncTask[] = {{&_swigt__p_ArFunctorASyncTask, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArSignalHandler[] = {{&_swigt__p_ArSignalHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArSyncLoop[] = {{&_swigt__p_ArSyncLoop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArSoundsQueue[] = {{&_swigt__p_ArSoundsQueue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArASyncTask[] = {  {&_swigt__p_ArRecurrentTask, _p_ArRecurrentTaskTo_p_ArASyncTask, 0, 0},  {&_swigt__p_ArServerBase, _p_ArServerBaseTo_p_ArASyncTask, 0, 0},  {&_swigt__p_ArASyncTask, 0, 0, 0},  {&_swigt__p_ArFunctorASyncTask, _p_ArFunctorASyncTaskTo_p_ArASyncTask, 0, 0},  {&_swigt__p_ArSignalHandler, _p_ArSignalHandlerTo_p_ArASyncTask, 0, 0},  {&_swigt__p_ArSyncLoop, _p_ArSyncLoopTo_p_ArASyncTask, 0, 0},  {&_swigt__p_ArClientBase, _p_ArClientBaseTo_p_ArASyncTask, 0, 0},  {&_swigt__p_ArSoundsQueue, _p_ArSoundsQueueTo_p_ArASyncTask, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionInput[] = {{&_swigt__p_ArActionInput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionLimiterTableSensor[] = {{&_swigt__p_ArActionLimiterTableSensor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionAvoidSide[] = {{&_swigt__p_ArActionAvoidSide, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionStop[] = {{&_swigt__p_ArActionStop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionMovementParameters[] = {{&_swigt__p_ArActionMovementParameters, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionDeceleratingLimiter[] = {{&_swigt__p_ArActionDeceleratingLimiter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionKeydrive[] = {{&_swigt__p_ArActionKeydrive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionJoydrive[] = {{&_swigt__p_ArActionJoydrive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionRobotJoydrive[] = {{&_swigt__p_ArActionRobotJoydrive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionBumpers[] = {{&_swigt__p_ArActionBumpers, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionLimiterForwards[] = {{&_swigt__p_ArActionLimiterForwards, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionTurn[] = {{&_swigt__p_ArActionTurn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionConstantVelocity[] = {{&_swigt__p_ArActionConstantVelocity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionLimiterBackwards[] = {{&_swigt__p_ArActionLimiterBackwards, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGotoStraight[] = {{&_swigt__p_ArActionGotoStraight, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionTriangleDriveTo[] = {{&_swigt__p_ArActionTriangleDriveTo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionColorFollow[] = {{&_swigt__p_ArActionColorFollow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionAvoidFront[] = {{&_swigt__p_ArActionAvoidFront, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionIRs[] = {{&_swigt__p_ArActionIRs, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGoto[] = {{&_swigt__p_ArActionGoto, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionStallRecover[] = {{&_swigt__p_ArActionStallRecover, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionDriveDistance[] = {{&_swigt__p_ArActionDriveDistance, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArAction[] = {  {&_swigt__p_ArActionInput, _p_ArActionInputTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionLimiterTableSensor, _p_ArActionLimiterTableSensorTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionAvoidSide, _p_ArActionAvoidSideTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionStop, _p_ArActionStopTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionMovementParameters, _p_ArActionMovementParametersTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionDeceleratingLimiter, _p_ArActionDeceleratingLimiterTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionRatioInput, _p_ArActionRatioInputTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionKeydrive, _p_ArActionKeydriveTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionJoydrive, _p_ArActionJoydriveTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionRobotJoydrive, _p_ArActionRobotJoydriveTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionBumpers, _p_ArActionBumpersTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionLimiterForwards, _p_ArActionLimiterForwardsTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionTurn, _p_ArActionTurnTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionConstantVelocity, _p_ArActionConstantVelocityTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionLimiterBackwards, _p_ArActionLimiterBackwardsTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionGotoStraight, _p_ArActionGotoStraightTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionTriangleDriveTo, _p_ArActionTriangleDriveToTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionColorFollow, _p_ArActionColorFollowTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionAvoidFront, _p_ArActionAvoidFrontTo_p_ArAction, 0, 0},  {&_swigt__p_ArAction, 0, 0, 0},  {&_swigt__p_ArActionIRs, _p_ArActionIRsTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionGoto, _p_ArActionGotoTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionStallRecover, _p_ArActionStallRecoverTo_p_ArAction, 0, 0},  {&_swigt__p_ArActionDriveDistance, _p_ArActionDriveDistanceTo_p_ArAction, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGroupTeleop[] = {{&_swigt__p_ArActionGroupTeleop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGroupUnguardedTeleop[] = {{&_swigt__p_ArActionGroupUnguardedTeleop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGroupWander[] = {{&_swigt__p_ArActionGroupWander, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGroupRatioDrive[] = {{&_swigt__p_ArActionGroupRatioDrive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGroupInput[] = {{&_swigt__p_ArActionGroupInput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGroupStop[] = {{&_swigt__p_ArActionGroupStop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGroupColorFollow[] = {{&_swigt__p_ArActionGroupColorFollow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGroupRatioDriveUnsafe[] = {{&_swigt__p_ArActionGroupRatioDriveUnsafe, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionGroup[] = {  {&_swigt__p_ArActionGroupTeleop, _p_ArActionGroupTeleopTo_p_ArActionGroup, 0, 0},  {&_swigt__p_ArActionGroupUnguardedTeleop, _p_ArActionGroupUnguardedTeleopTo_p_ArActionGroup, 0, 0},  {&_swigt__p_ArActionGroupWander, _p_ArActionGroupWanderTo_p_ArActionGroup, 0, 0},  {&_swigt__p_ArActionGroupRatioDrive, _p_ArActionGroupRatioDriveTo_p_ArActionGroup, 0, 0},  {&_swigt__p_ArActionGroup, 0, 0, 0},  {&_swigt__p_ArActionGroupInput, _p_ArActionGroupInputTo_p_ArActionGroup, 0, 0},  {&_swigt__p_ArActionGroupStop, _p_ArActionGroupStopTo_p_ArActionGroup, 0, 0},  {&_swigt__p_ArActionGroupColorFollow, _p_ArActionGroupColorFollowTo_p_ArActionGroup, 0, 0},  {&_swigt__p_ArActionGroupRatioDriveUnsafe, _p_ArActionGroupRatioDriveUnsafeTo_p_ArActionGroup, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArActionRatioInput[] = {  {&_swigt__p_ArActionRatioInput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArAnalogGyro[] = {  {&_swigt__p_ArAnalogGyro, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArArgumentBuilder[] = {  {&_swigt__p_ArArgumentBuilder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArArgumentParser[] = {  {&_swigt__p_ArArgumentParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRVisionPacket[] = {{&_swigt__p_ArRVisionPacket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArVCC4Packet[] = {{&_swigt__p_ArVCC4Packet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArAMPTUPacket[] = {{&_swigt__p_ArAMPTUPacket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArDPPTUPacket[] = {{&_swigt__p_ArDPPTUPacket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArSonyPacket[] = {{&_swigt__p_ArSonyPacket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArBasePacket[] = {  {&_swigt__p_ArRobotPacket, _p_ArRobotPacketTo_p_ArBasePacket, 0, 0},  {&_swigt__p_ArRVisionPacket, _p_ArRVisionPacketTo_p_ArBasePacket, 0, 0},  {&_swigt__p_ArVCC4Packet, _p_ArVCC4PacketTo_p_ArBasePacket, 0, 0},  {&_swigt__p_ArNetPacket, _p_ArNetPacketTo_p_ArBasePacket, 0, 0},  {&_swigt__p_ArBasePacket, 0, 0, 0},  {&_swigt__p_ArAMPTUPacket, _p_ArAMPTUPacketTo_p_ArBasePacket, 0, 0},  {&_swigt__p_ArDPPTUPacket, _p_ArDPPTUPacketTo_p_ArBasePacket, 0, 0},  {&_swigt__p_ArSonyPacket, _p_ArSonyPacketTo_p_ArBasePacket, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArCameraCollection[] = {  {&_swigt__p_ArCameraCollection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArCameraParameterSource[] = {{&_swigt__p_ArCameraParameterSource, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArCameraCollectionItem[] = {  {&_swigt__p_ArCameraCollectionItem, 0, 0, 0},  {&_swigt__p_ArCameraParameterSource, _p_ArCameraParameterSourceTo_p_ArCameraCollectionItem, 0, 0},  {&_swigt__p_ArHybridForwarderVideo, _p_ArHybridForwarderVideoTo_p_ArCameraCollectionItem, 0, 0},  {&_swigt__p_ArServerHandlerCamera, _p_ArServerHandlerCameraTo_p_ArCameraCollectionItem, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientArg[] = {  {&_swigt__p_ArClientArg, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientBase[] = {  {&_swigt__p_ArClientBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientCommands[] = {  {&_swigt__p_ArClientCommands, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientDeleteFileOnServer[] = {  {&_swigt__p_ArClientDeleteFileOnServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientFileFromClient[] = {  {&_swigt__p_ArClientFileFromClient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientFileLister[] = {  {&_swigt__p_ArClientFileLister, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientFileListerItem[] = {  {&_swigt__p_ArClientFileListerItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientFileToClient[] = {  {&_swigt__p_ArClientFileToClient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientHandlerConfig[] = {  {&_swigt__p_ArClientHandlerConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientHandlerRobotUpdate[] = {  {&_swigt__p_ArClientHandlerRobotUpdate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArClientSimpleConnector[] = {  {&_swigt__p_ArClientSimpleConnector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRobotParams[] = {{&_swigt__p_ArRobotParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArConfig[] = {  {&_swigt__p_ArRobotParams, _p_ArRobotParamsTo_p_ArConfig, 0, 0},  {&_swigt__p_ArConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArConfigArg_Bool[] = {{&_swigt__p_ArConfigArg_Bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArConfigArg_Double[] = {{&_swigt__p_ArConfigArg_Double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArConfigArg_String[] = {{&_swigt__p_ArConfigArg_String, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArConfigArg_Int[] = {{&_swigt__p_ArConfigArg_Int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArConfigArg[] = {  {&_swigt__p_ArConfigArg, 0, 0, 0},  {&_swigt__p_ArConfigArg_Bool, _p_ArConfigArg_BoolTo_p_ArConfigArg, 0, 0},  {&_swigt__p_ArConfigArg_Double, _p_ArConfigArg_DoubleTo_p_ArConfigArg, 0, 0},  {&_swigt__p_ArConfigArg_String, _p_ArConfigArg_StringTo_p_ArConfigArg, 0, 0},  {&_swigt__p_ArConfigArg_Int, _p_ArConfigArg_IntTo_p_ArConfigArg, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArDrawingData[] = {  {&_swigt__p_ArDrawingData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctor1T_bool_ArRobotPacket_p_t[] = {{&_swigt__p_ArRetFunctor1T_bool_ArRobotPacket_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor1T_ArRobotPacket_p_t[] = {{&_swigt__p_ArFunctor1T_ArRobotPacket_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArPyFunctor[] = {{&_swigt__p_ArPyFunctor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctorT_double_t[] = {{&_swigt__p_ArRetFunctorT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctor1T_double_ArPoseWithTime_t[] = {{&_swigt__p_ArRetFunctor1T_double_ArPoseWithTime_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArPyFunctor1_String[] = {{&_swigt__p_ArPyFunctor1_String, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctor1T_bool_ArArgumentBuilder_t[] = {{&_swigt__p_ArRetFunctor1T_bool_ArArgumentBuilder_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor1T_char_const_p_t[] = {{&_swigt__p_ArFunctor1T_char_const_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctor1T_void_p_void_p_t[] = {{&_swigt__p_ArRetFunctor1T_void_p_void_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctorT_void_p_t[] = {{&_swigt__p_ArRetFunctorT_void_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctorT_bool_t[] = {{&_swigt__p_ArRetFunctorT_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctorT_int_t[] = {{&_swigt__p_ArRetFunctorT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctorT_unsigned_int_t[] = {{&_swigt__p_ArRetFunctorT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArPyRetFunctor_Bool[] = {{&_swigt__p_ArPyRetFunctor_Bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctor1T_bool_ArArgumentBuilder_p_t[] = {{&_swigt__p_ArRetFunctor1T_bool_ArArgumentBuilder_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor[] = {  {&_swigt__p_ArRetFunctor1T_bool_ArRobotPacket_p_t, _p_ArRetFunctor1T_bool_ArRobotPacket_p_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArFunctor1T_ArRobotPacket_p_t, _p_ArFunctor1T_ArRobotPacket_p_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArPyFunctor, _p_ArPyFunctorTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArFunctor, 0, 0, 0},  {&_swigt__p_ArRetFunctorT_double_t, _p_ArRetFunctorT_double_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArRetFunctor1T_double_ArPoseWithTime_t, _p_ArRetFunctor1T_double_ArPoseWithTime_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArPyFunctor1_String, _p_ArPyFunctor1_StringTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArRetFunctor1T_bool_ArArgumentBuilder_t, _p_ArRetFunctor1T_bool_ArArgumentBuilder_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArFunctor1T_char_const_p_t, _p_ArFunctor1T_char_const_p_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArRetFunctor1T_void_p_void_p_t, _p_ArRetFunctor1T_void_p_void_p_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArRetFunctorT_void_p_t, _p_ArRetFunctorT_void_p_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArRetFunctorT_bool_t, _p_ArRetFunctorT_bool_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArFunctor1T_int_t, _p_ArFunctor1T_int_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArRetFunctorT_int_t, _p_ArRetFunctorT_int_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArRetFunctorT_unsigned_int_t, _p_ArRetFunctorT_unsigned_int_tTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArPyRetFunctor_Bool, _p_ArPyRetFunctor_BoolTo_p_ArFunctor, 0, 0},  {&_swigt__p_ArRetFunctor1T_bool_ArArgumentBuilder_p_t, _p_ArRetFunctor1T_bool_ArArgumentBuilder_p_tTo_p_ArFunctor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor1T_ArArgumentBuilder_p_t[] = {  {&_swigt__p_ArFunctor1T_ArArgumentBuilder_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor1T_ArNetPacket_p_t[] = {  {&_swigt__p_ArFunctor1T_ArNetPacket_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor1T_ArServerClient_p_t[] = {  {&_swigt__p_ArFunctor1T_ArServerClient_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor1T_int_t[] = {  {&_swigt__p_ArFunctor1T_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor2T_ArNetPacket_p_sockaddr_in_p_t[] = {  {&_swigt__p_ArFunctor2T_ArNetPacket_p_sockaddr_in_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor2T_ArServerClient_p_ArNetPacket_p_t[] = {  {&_swigt__p_ArFunctor2T_ArServerClient_p_ArNetPacket_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor2T_char_const_p_char_const_p_t[] = {  {&_swigt__p_ArFunctor2T_char_const_p_char_const_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor2T_char_p_unsigned_short_t[] = {  {&_swigt__p_ArFunctor2T_char_p_unsigned_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor2T_long_unsigned_int_t[] = {  {&_swigt__p_ArFunctor2T_long_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArFunctor3T_char_const_p_unsigned_short_ArFunctor2T_char_p_unsigned_short_t_p_t[] = {  {&_swigt__p_ArFunctor3T_char_const_p_unsigned_short_ArFunctor2T_char_p_unsigned_short_t_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArHybridForwarderVideo[] = {  {&_swigt__p_ArHybridForwarderVideo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArLaserFilter[] = {{&_swigt__p_ArLaserFilter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArSimulatedLaser[] = {{&_swigt__p_ArSimulatedLaser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArUrg[] = {{&_swigt__p_ArUrg, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArLaser[] = {  {&_swigt__p_ArLaser, 0, 0, 0},  {&_swigt__p_ArLaserFilter, _p_ArLaserFilterTo_p_ArLaser, 0, 0},  {&_swigt__p_ArSimulatedLaser, _p_ArSimulatedLaserTo_p_ArLaser, 0, 0},  {&_swigt__p_ArUrg, _p_ArUrgTo_p_ArLaser, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArLaserLogger[] = {  {&_swigt__p_ArLaserLogger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArMap[] = {  {&_swigt__p_ArMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArMapInterface[] = {  {&_swigt__p_ArMapInterface, 0, 0, 0},  {&_swigt__p_ArMap, _p_ArMapTo_p_ArMapInterface, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArNetPacket[] = {  {&_swigt__p_ArNetPacket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArNetPacketReceiverTcp[] = {  {&_swigt__p_ArNetPacketReceiverTcp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArNetPacketReceiverUdp[] = {  {&_swigt__p_ArNetPacketReceiverUdp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArNetPacketSenderTcp[] = {  {&_swigt__p_ArNetPacketSenderTcp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArNetServer[] = {  {&_swigt__p_ArNetServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArSonyPTZ[] = {{&_swigt__p_ArSonyPTZ, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArAMPTU[] = {{&_swigt__p_ArAMPTU, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArDPPTU[] = {{&_swigt__p_ArDPPTU, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRVisionPTZ[] = {{&_swigt__p_ArRVisionPTZ, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArVCC4[] = {{&_swigt__p_ArVCC4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArPTZ[] = {  {&_swigt__p_ArPTZ, 0, 0, 0},  {&_swigt__p_ArSonyPTZ, _p_ArSonyPTZTo_p_ArPTZ, 0, 0},  {&_swigt__p_ArAMPTU, _p_ArAMPTUTo_p_ArPTZ, 0, 0},  {&_swigt__p_ArDPPTU, _p_ArDPPTUTo_p_ArPTZ, 0, 0},  {&_swigt__p_ArRVisionPTZ, _p_ArRVisionPTZTo_p_ArPTZ, 0, 0},  {&_swigt__p_ArVCC4, _p_ArVCC4To_p_ArPTZ, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArPos2D[] = {{&_swigt__p_ArPos2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArPoseWithTime[] = {{&_swigt__p_ArPoseWithTime, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArPose[] = {  {&_swigt__p_ArPose, 0, 0, 0},  {&_swigt__p_ArPos2D, _p_ArPos2DTo_p_ArPose, 0, 0},  {&_swigt__p_ArPoseWithTime, _p_ArPoseWithTimeTo_p_ArPose, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRangeDeviceThreaded[] = {{&_swigt__p_ArRangeDeviceThreaded, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArIRs[] = {{&_swigt__p_ArIRs, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArIrrfDevice[] = {{&_swigt__p_ArIrrfDevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArLaserReflectorDevice[] = {{&_swigt__p_ArLaserReflectorDevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArSonarDevice[] = {{&_swigt__p_ArSonarDevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArBumpers[] = {{&_swigt__p_ArBumpers, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArForbiddenRangeDevice[] = {{&_swigt__p_ArForbiddenRangeDevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRangeDevice[] = {  {&_swigt__p_ArLaser, _p_ArLaserTo_p_ArRangeDevice, 0, 0},  {&_swigt__p_ArLaserFilter, _p_ArLaserFilterTo_p_ArRangeDevice, 0, 0},  {&_swigt__p_ArSimulatedLaser, _p_ArSimulatedLaserTo_p_ArRangeDevice, 0, 0},  {&_swigt__p_ArUrg, _p_ArUrgTo_p_ArRangeDevice, 0, 0},  {&_swigt__p_ArRangeDeviceThreaded, _p_ArRangeDeviceThreadedTo_p_ArRangeDevice, 0, 0},  {&_swigt__p_ArIRs, _p_ArIRsTo_p_ArRangeDevice, 0, 0},  {&_swigt__p_ArIrrfDevice, _p_ArIrrfDeviceTo_p_ArRangeDevice, 0, 0},  {&_swigt__p_ArLaserReflectorDevice, _p_ArLaserReflectorDeviceTo_p_ArRangeDevice, 0, 0},  {&_swigt__p_ArSonarDevice, _p_ArSonarDeviceTo_p_ArRangeDevice, 0, 0},  {&_swigt__p_ArRangeDevice, 0, 0, 0},  {&_swigt__p_ArBumpers, _p_ArBumpersTo_p_ArRangeDevice, 0, 0},  {&_swigt__p_ArForbiddenRangeDevice, _p_ArForbiddenRangeDeviceTo_p_ArRangeDevice, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t[] = {  {&_swigt__p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctor2T_bool_ArServerClient_p_ArNetPacket_p_t[] = {  {&_swigt__p_ArRetFunctor2T_bool_ArServerClient_p_ArNetPacket_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t[] = {  {&_swigt__p_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRobot[] = {  {&_swigt__p_ArRobot, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArRobotPacket[] = {  {&_swigt__p_ArRobotPacket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerBase[] = {  {&_swigt__p_ArServerBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerClient[] = {  {&_swigt__p_ArServerClient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerClientData[] = {  {&_swigt__p_ArServerClientData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerClientIdentifier[] = {  {&_swigt__p_ArServerClientIdentifier, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerCommands[] = {  {&_swigt__p_ArServerCommands, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerData[] = {  {&_swigt__p_ArServerData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerDeleteFileOnServer[] = {  {&_swigt__p_ArServerDeleteFileOnServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerFileFromClient[] = {  {&_swigt__p_ArServerFileFromClient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerFileLister[] = {  {&_swigt__p_ArServerFileLister, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerFileToClient[] = {  {&_swigt__p_ArServerFileToClient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerHandlerCamera[] = {  {&_swigt__p_ArServerHandlerCamera, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerHandlerCameraCollection[] = {  {&_swigt__p_ArServerHandlerCameraCollection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerHandlerCommMonitor[] = {  {&_swigt__p_ArServerHandlerCommMonitor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerHandlerCommands[] = {  {&_swigt__p_ArServerHandlerCommands, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerHandlerConfig[] = {  {&_swigt__p_ArServerHandlerConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerHandlerMap[] = {  {&_swigt__p_ArServerHandlerMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerHandlerMapping[] = {  {&_swigt__p_ArServerHandlerMapping, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerHandlerPopup[] = {  {&_swigt__p_ArServerHandlerPopup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerInfoDrawings[] = {  {&_swigt__p_ArServerInfoDrawings, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerInfoRobot[] = {  {&_swigt__p_ArServerInfoRobot, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerInfoSensor[] = {  {&_swigt__p_ArServerInfoSensor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerInfoStrings[] = {  {&_swigt__p_ArServerInfoStrings, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerMode[] = {  {&_swigt__p_ArServerMode, 0, 0, 0},  {&_swigt__p_ArServerModeIdle, _p_ArServerModeIdleTo_p_ArServerMode, 0, 0},  {&_swigt__p_ArServerModeRatioDrive, _p_ArServerModeRatioDriveTo_p_ArServerMode, 0, 0},  {&_swigt__p_ArServerModeStop, _p_ArServerModeStopTo_p_ArServerMode, 0, 0},  {&_swigt__p_ArServerModeWander, _p_ArServerModeWanderTo_p_ArServerMode, 0, 0},  {&_swigt__p_ArServerModeDrive, _p_ArServerModeDriveTo_p_ArServerMode, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerModeDrive[] = {  {&_swigt__p_ArServerModeDrive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerModeIdle[] = {  {&_swigt__p_ArServerModeIdle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerModeRatioDrive[] = {  {&_swigt__p_ArServerModeRatioDrive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerModeStop[] = {  {&_swigt__p_ArServerModeStop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerModeWander[] = {  {&_swigt__p_ArServerModeWander, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerSimpleComGyro[] = {  {&_swigt__p_ArServerSimpleComGyro, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerSimpleComLogActions[] = {  {&_swigt__p_ArServerSimpleComLogActions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerSimpleComLogRobotConfig[] = {  {&_swigt__p_ArServerSimpleComLogRobotConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerSimpleComMovementLogging[] = {  {&_swigt__p_ArServerSimpleComMovementLogging, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerSimpleComUC[] = {  {&_swigt__p_ArServerSimpleComUC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerSimpleConnectionTester[] = {  {&_swigt__p_ArServerSimpleConnectionTester, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerSimpleLogRobotDebugPackets[] = {  {&_swigt__p_ArServerSimpleLogRobotDebugPackets, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerSimpleOpener[] = {  {&_swigt__p_ArServerSimpleOpener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerSimplePopup[] = {  {&_swigt__p_ArServerSimplePopup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerSimpleServerCommands[] = {  {&_swigt__p_ArServerSimpleServerCommands, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArServerUserInfo[] = {  {&_swigt__p_ArServerUserInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArSocket[] = {  {&_swigt__p_ArSocket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArStringInfoGroup[] = {  {&_swigt__p_ArStringInfoGroup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArStringInfoHolder[] = {  {&_swigt__p_ArStringInfoHolder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArThread[] = {  {&_swigt__p_ArThread, 0, 0, 0},  {&_swigt__p_ArRecurrentTask, _p_ArRecurrentTaskTo_p_ArThread, 0, 0},  {&_swigt__p_ArServerBase, _p_ArServerBaseTo_p_ArThread, 0, 0},  {&_swigt__p_ArASyncTask, _p_ArASyncTaskTo_p_ArThread, 0, 0},  {&_swigt__p_ArFunctorASyncTask, _p_ArFunctorASyncTaskTo_p_ArThread, 0, 0},  {&_swigt__p_ArSignalHandler, _p_ArSignalHandlerTo_p_ArThread, 0, 0},  {&_swigt__p_ArSyncLoop, _p_ArSyncLoopTo_p_ArThread, 0, 0},  {&_swigt__p_ArClientBase, _p_ArClientBaseTo_p_ArThread, 0, 0},  {&_swigt__p_ArSoundsQueue, _p_ArSoundsQueueTo_p_ArThread, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArTime[] = {  {&_swigt__p_ArTime, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArZippable[] = {  {&_swigt__p_ArZippable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Byte[] = {  {&_swigt__p_Byte, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Byte2[] = {  {&_swigt__p_Byte2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Byte4[] = {  {&_swigt__p_Byte4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Byte8[] = {  {&_swigt__p_Byte8, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CondType[] = {  {&_swigt__p_CondType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FixType[] = {  {&_swigt__p_FixType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GPSType[] = {  {&_swigt__p_GPSType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Handler[] = {  {&_swigt__p_Handler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HandlerMap[] = {  {&_swigt__p_HandlerMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_InterruptItemFunctor[] = {  {&_swigt__p_InterruptItemFunctor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LogLevel[] = {  {&_swigt__p_LogLevel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LogType[] = {  {&_swigt__p_LogType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MapType[] = {  {&_swigt__p_MapType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MessageVector[] = {  {&_swigt__p_MessageVector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MutexType[] = {  {&_swigt__p_MutexType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PacketType[] = {  {&_swigt__p_PacketType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlayItemFunctor[] = {  {&_swigt__p_PlayItemFunctor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlaybackConditionFunctor[] = {  {&_swigt__p_PlaybackConditionFunctor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Pos[] = {  {&_swigt__p_Pos, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SigHandleMethod[] = {  {&_swigt__p_SigHandleMethod, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Signal[] = {  {&_swigt__p_Signal, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_State[] = {  {&_swigt__p_State, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Status[] = {  {&_swigt__p_Status, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_StatusType[] = {  {&_swigt__p_StatusType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ThreadType[] = {  {&_swigt__p_ThreadType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Type[] = {  {&_swigt__p_Type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UByte[] = {  {&_swigt__p_UByte, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UByte2[] = {  {&_swigt__p_UByte2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UByte4[] = {  {&_swigt__p_UByte4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UByte8[] = {  {&_swigt__p_UByte8, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WaitState[] = {  {&_swigt__p_WaitState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_reference[] = {  {&_swigt__p_const_reference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_in_addr[] = {  {&_swigt__p_in_addr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_key_type[] = {  {&_swigt__p_key_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapped_type[] = {  {&_swigt__p_mapped_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_md5_state_s[] = {  {&_swigt__p_md5_state_s, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_reference[] = {  {&_swigt__p_reference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sockaddr_in[] = {  {&_swigt__p_sockaddr_in, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_ArClientFileListerItem_std__allocatorT_ArClientFileListerItem_t_t[] = {  {&_swigt__p_std__listT_ArClientFileListerItem_std__allocatorT_ArClientFileListerItem_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_ArConfigArg_p_std__allocatorT_ArConfigArg_p_t_t[] = {  {&_swigt__p_std__listT_ArConfigArg_p_std__allocatorT_ArConfigArg_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_ArLaser_p_std__allocatorT_ArLaser_p_t_t[] = {  {&_swigt__p_std__listT_ArLaser_p_std__allocatorT_ArLaser_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_int_std__string_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__string_t_t_t[] = {  {&_swigt__p_std__mapT_int_std__string_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__string_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_std__string_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_ArStrCaseCmpOp_std__allocatorT_std__pairT_std__string_const_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_t_t_t[] = {  {&_swigt__p_std__mapT_std__string_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_ArStrCaseCmpOp_std__allocatorT_std__pairT_std__string_const_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_unsigned_int_ArClientData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArClientData_p_t_t_t[] = {  {&_swigt__p_std__mapT_unsigned_int_ArClientData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArClientData_p_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t[] = {  {&_swigt__p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_std__string_ArStrCaseCmpOp_std__allocatorT_std__string_t_t[] = {  {&_swigt__p_std__setT_std__string_ArStrCaseCmpOp_std__allocatorT_std__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_time_t[] = {  {&_swigt__p_time_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_ActionMap,
  _swigc__p_ArAMPTU,
  _swigc__p_ArAMPTUPacket,
  _swigc__p_ArASyncTask,
  _swigc__p_ArAction,
  _swigc__p_ArActionAvoidFront,
  _swigc__p_ArActionAvoidSide,
  _swigc__p_ArActionBumpers,
  _swigc__p_ArActionColorFollow,
  _swigc__p_ArActionConstantVelocity,
  _swigc__p_ArActionDeceleratingLimiter,
  _swigc__p_ArActionDriveDistance,
  _swigc__p_ArActionGoto,
  _swigc__p_ArActionGotoStraight,
  _swigc__p_ArActionGroup,
  _swigc__p_ArActionGroupColorFollow,
  _swigc__p_ArActionGroupInput,
  _swigc__p_ArActionGroupRatioDrive,
  _swigc__p_ArActionGroupRatioDriveUnsafe,
  _swigc__p_ArActionGroupStop,
  _swigc__p_ArActionGroupTeleop,
  _swigc__p_ArActionGroupUnguardedTeleop,
  _swigc__p_ArActionGroupWander,
  _swigc__p_ArActionIRs,
  _swigc__p_ArActionInput,
  _swigc__p_ArActionJoydrive,
  _swigc__p_ArActionKeydrive,
  _swigc__p_ArActionLimiterBackwards,
  _swigc__p_ArActionLimiterForwards,
  _swigc__p_ArActionLimiterTableSensor,
  _swigc__p_ArActionMovementParameters,
  _swigc__p_ArActionRatioInput,
  _swigc__p_ArActionRobotJoydrive,
  _swigc__p_ArActionStallRecover,
  _swigc__p_ArActionStop,
  _swigc__p_ArActionTriangleDriveTo,
  _swigc__p_ArActionTurn,
  _swigc__p_ArAnalogGyro,
  _swigc__p_ArArgumentBuilder,
  _swigc__p_ArArgumentParser,
  _swigc__p_ArBasePacket,
  _swigc__p_ArBumpers,
  _swigc__p_ArCameraCollection,
  _swigc__p_ArCameraCollectionItem,
  _swigc__p_ArCameraParameterSource,
  _swigc__p_ArClientArg,
  _swigc__p_ArClientBase,
  _swigc__p_ArClientCommands,
  _swigc__p_ArClientDeleteFileOnServer,
  _swigc__p_ArClientFileFromClient,
  _swigc__p_ArClientFileLister,
  _swigc__p_ArClientFileListerItem,
  _swigc__p_ArClientFileToClient,
  _swigc__p_ArClientHandlerConfig,
  _swigc__p_ArClientHandlerRobotUpdate,
  _swigc__p_ArClientSimpleConnector,
  _swigc__p_ArConfig,
  _swigc__p_ArConfigArg,
  _swigc__p_ArConfigArg_Bool,
  _swigc__p_ArConfigArg_Double,
  _swigc__p_ArConfigArg_Int,
  _swigc__p_ArConfigArg_String,
  _swigc__p_ArDPPTU,
  _swigc__p_ArDPPTUPacket,
  _swigc__p_ArDrawingData,
  _swigc__p_ArForbiddenRangeDevice,
  _swigc__p_ArFunctor,
  _swigc__p_ArFunctor1T_ArArgumentBuilder_p_t,
  _swigc__p_ArFunctor1T_ArNetPacket_p_t,
  _swigc__p_ArFunctor1T_ArRobotPacket_p_t,
  _swigc__p_ArFunctor1T_ArServerClient_p_t,
  _swigc__p_ArFunctor1T_char_const_p_t,
  _swigc__p_ArFunctor1T_int_t,
  _swigc__p_ArFunctor2T_ArNetPacket_p_sockaddr_in_p_t,
  _swigc__p_ArFunctor2T_ArServerClient_p_ArNetPacket_p_t,
  _swigc__p_ArFunctor2T_char_const_p_char_const_p_t,
  _swigc__p_ArFunctor2T_char_p_unsigned_short_t,
  _swigc__p_ArFunctor2T_long_unsigned_int_t,
  _swigc__p_ArFunctor3T_char_const_p_unsigned_short_ArFunctor2T_char_p_unsigned_short_t_p_t,
  _swigc__p_ArFunctorASyncTask,
  _swigc__p_ArHybridForwarderVideo,
  _swigc__p_ArIRs,
  _swigc__p_ArIrrfDevice,
  _swigc__p_ArLaser,
  _swigc__p_ArLaserFilter,
  _swigc__p_ArLaserLogger,
  _swigc__p_ArLaserReflectorDevice,
  _swigc__p_ArMap,
  _swigc__p_ArMapInterface,
  _swigc__p_ArNetPacket,
  _swigc__p_ArNetPacketReceiverTcp,
  _swigc__p_ArNetPacketReceiverUdp,
  _swigc__p_ArNetPacketSenderTcp,
  _swigc__p_ArNetServer,
  _swigc__p_ArPTZ,
  _swigc__p_ArPos2D,
  _swigc__p_ArPose,
  _swigc__p_ArPoseWithTime,
  _swigc__p_ArPyFunctor,
  _swigc__p_ArPyFunctor1_String,
  _swigc__p_ArPyRetFunctor_Bool,
  _swigc__p_ArRVisionPTZ,
  _swigc__p_ArRVisionPacket,
  _swigc__p_ArRangeDevice,
  _swigc__p_ArRangeDeviceThreaded,
  _swigc__p_ArRecurrentTask,
  _swigc__p_ArRetFunctor1T_bool_ArArgumentBuilder_p_t,
  _swigc__p_ArRetFunctor1T_bool_ArArgumentBuilder_t,
  _swigc__p_ArRetFunctor1T_bool_ArRobotPacket_p_t,
  _swigc__p_ArRetFunctor1T_double_ArPoseWithTime_t,
  _swigc__p_ArRetFunctor1T_void_p_void_p_t,
  _swigc__p_ArRetFunctor2T_bool_ArNetPacket_p_sockaddr_in_p_t,
  _swigc__p_ArRetFunctor2T_bool_ArServerClient_p_ArNetPacket_p_t,
  _swigc__p_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t,
  _swigc__p_ArRetFunctorT_bool_t,
  _swigc__p_ArRetFunctorT_double_t,
  _swigc__p_ArRetFunctorT_int_t,
  _swigc__p_ArRetFunctorT_unsigned_int_t,
  _swigc__p_ArRetFunctorT_void_p_t,
  _swigc__p_ArRobot,
  _swigc__p_ArRobotPacket,
  _swigc__p_ArRobotParams,
  _swigc__p_ArServerBase,
  _swigc__p_ArServerClient,
  _swigc__p_ArServerClientData,
  _swigc__p_ArServerClientIdentifier,
  _swigc__p_ArServerCommands,
  _swigc__p_ArServerData,
  _swigc__p_ArServerDeleteFileOnServer,
  _swigc__p_ArServerFileFromClient,
  _swigc__p_ArServerFileLister,
  _swigc__p_ArServerFileToClient,
  _swigc__p_ArServerHandlerCamera,
  _swigc__p_ArServerHandlerCameraCollection,
  _swigc__p_ArServerHandlerCommMonitor,
  _swigc__p_ArServerHandlerCommands,
  _swigc__p_ArServerHandlerConfig,
  _swigc__p_ArServerHandlerMap,
  _swigc__p_ArServerHandlerMapping,
  _swigc__p_ArServerHandlerPopup,
  _swigc__p_ArServerInfoDrawings,
  _swigc__p_ArServerInfoRobot,
  _swigc__p_ArServerInfoSensor,
  _swigc__p_ArServerInfoStrings,
  _swigc__p_ArServerMode,
  _swigc__p_ArServerModeDrive,
  _swigc__p_ArServerModeIdle,
  _swigc__p_ArServerModeRatioDrive,
  _swigc__p_ArServerModeStop,
  _swigc__p_ArServerModeWander,
  _swigc__p_ArServerSimpleComGyro,
  _swigc__p_ArServerSimpleComLogActions,
  _swigc__p_ArServerSimpleComLogRobotConfig,
  _swigc__p_ArServerSimpleComMovementLogging,
  _swigc__p_ArServerSimpleComUC,
  _swigc__p_ArServerSimpleConnectionTester,
  _swigc__p_ArServerSimpleLogRobotDebugPackets,
  _swigc__p_ArServerSimpleOpener,
  _swigc__p_ArServerSimplePopup,
  _swigc__p_ArServerSimpleServerCommands,
  _swigc__p_ArServerUserInfo,
  _swigc__p_ArSignalHandler,
  _swigc__p_ArSimulatedLaser,
  _swigc__p_ArSocket,
  _swigc__p_ArSonarDevice,
  _swigc__p_ArSonyPTZ,
  _swigc__p_ArSonyPacket,
  _swigc__p_ArSoundsQueue,
  _swigc__p_ArStringInfoGroup,
  _swigc__p_ArStringInfoHolder,
  _swigc__p_ArSyncLoop,
  _swigc__p_ArThread,
  _swigc__p_ArTime,
  _swigc__p_ArUrg,
  _swigc__p_ArVCC4,
  _swigc__p_ArVCC4Packet,
  _swigc__p_ArZippable,
  _swigc__p_Byte,
  _swigc__p_Byte2,
  _swigc__p_Byte4,
  _swigc__p_Byte8,
  _swigc__p_CondType,
  _swigc__p_FixType,
  _swigc__p_GPSType,
  _swigc__p_Handler,
  _swigc__p_HandlerMap,
  _swigc__p_InterruptItemFunctor,
  _swigc__p_LogLevel,
  _swigc__p_LogType,
  _swigc__p_MapType,
  _swigc__p_MessageVector,
  _swigc__p_MutexType,
  _swigc__p_PacketType,
  _swigc__p_PlayItemFunctor,
  _swigc__p_PlaybackConditionFunctor,
  _swigc__p_Pos,
  _swigc__p_SigHandleMethod,
  _swigc__p_Signal,
  _swigc__p_State,
  _swigc__p_Status,
  _swigc__p_StatusType,
  _swigc__p_ThreadType,
  _swigc__p_Type,
  _swigc__p_UByte,
  _swigc__p_UByte2,
  _swigc__p_UByte4,
  _swigc__p_UByte8,
  _swigc__p_WaitState,
  _swigc__p_allocator_type,
  _swigc__p_char,
  _swigc__p_const_reference,
  _swigc__p_difference_type,
  _swigc__p_in_addr,
  _swigc__p_key_type,
  _swigc__p_mapped_type,
  _swigc__p_md5_state_s,
  _swigc__p_reference,
  _swigc__p_size_type,
  _swigc__p_sockaddr_in,
  _swigc__p_std__listT_ArClientFileListerItem_std__allocatorT_ArClientFileListerItem_t_t,
  _swigc__p_std__listT_ArConfigArg_p_std__allocatorT_ArConfigArg_p_t_t,
  _swigc__p_std__listT_ArLaser_p_std__allocatorT_ArLaser_p_t_t,
  _swigc__p_std__mapT_int_std__string_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__string_t_t_t,
  _swigc__p_std__mapT_std__string_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_ArStrCaseCmpOp_std__allocatorT_std__pairT_std__string_const_ArRetFunctor3T_int_ArTime_ArPose_p_ArPoseWithTime_p_t_p_t_t_t,
  _swigc__p_std__mapT_unsigned_int_ArClientData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArClientData_p_t_t_t,
  _swigc__p_std__mapT_unsigned_int_ArServerData_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_ArServerData_p_t_t_t,
  _swigc__p_std__setT_std__string_ArStrCaseCmpOp_std__allocatorT_std__string_t_t,
  _swigc__p_std__string,
  _swigc__p_time_t,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_value_type,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version_tag */
#endif
#if PY_VERSION_HEX >= 0x03040000
        0,                                  /* tp_finalize */
#endif
#ifdef COUNT_ALLOCS
        0,                                  /* tp_allocs */
        0,                                  /* tp_frees */
        0,                                  /* tp_maxalloc */
#if PY_VERSION_HEX >= 0x02050000
        0,                                  /* tp_prev */
#endif
        0                                   /* tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "ArNetPacket_SIZE_OF_LENGTH",SWIG_From_int(static_cast< int >(ArNetPacket::SIZE_OF_LENGTH)));
  SWIG_Python_SetConstant(d, "ArNetPacket_MAX_LENGTH",SWIG_From_int(static_cast< int >(ArNetPacket::MAX_LENGTH)));
  SWIG_Python_SetConstant(d, "ArNetPacket_HEADER_LENGTH",SWIG_From_int(static_cast< int >(ArNetPacket::HEADER_LENGTH)));
  SWIG_Python_SetConstant(d, "ArNetPacket_FOOTER_LENGTH",SWIG_From_int(static_cast< int >(ArNetPacket::FOOTER_LENGTH)));
  SWIG_Python_SetConstant(d, "ArNetPacket_MAX_DATA_LENGTH",SWIG_From_int(static_cast< int >(ArNetPacket::MAX_DATA_LENGTH)));
  SWIG_Python_SetConstant(d, "ArNetPacket_TCP",SWIG_From_int(static_cast< int >(ArNetPacket::TCP)));
  SWIG_Python_SetConstant(d, "ArNetPacket_UDP",SWIG_From_int(static_cast< int >(ArNetPacket::UDP)));
  SWIG_Python_SetConstant(d, "ArClientBase_STATE_NO_CONNECTION",SWIG_From_int(static_cast< int >(ArClientBase::STATE_NO_CONNECTION)));
  SWIG_Python_SetConstant(d, "ArClientBase_STATE_FAILED_CONNECTION",SWIG_From_int(static_cast< int >(ArClientBase::STATE_FAILED_CONNECTION)));
  SWIG_Python_SetConstant(d, "ArClientBase_STATE_OPENED_SOCKET",SWIG_From_int(static_cast< int >(ArClientBase::STATE_OPENED_SOCKET)));
  SWIG_Python_SetConstant(d, "ArClientBase_STATE_EXCHANGED_INTROS",SWIG_From_int(static_cast< int >(ArClientBase::STATE_EXCHANGED_INTROS)));
  SWIG_Python_SetConstant(d, "ArClientBase_STATE_REJECTED",SWIG_From_int(static_cast< int >(ArClientBase::STATE_REJECTED)));
  SWIG_Python_SetConstant(d, "ArClientBase_STATE_WAITING_LIST",SWIG_From_int(static_cast< int >(ArClientBase::STATE_WAITING_LIST)));
  SWIG_Python_SetConstant(d, "ArClientBase_STATE_CONNECTED",SWIG_From_int(static_cast< int >(ArClientBase::STATE_CONNECTED)));
  SWIG_Python_SetConstant(d, "ArClientBase_STATE_LOST_CONNECTION",SWIG_From_int(static_cast< int >(ArClientBase::STATE_LOST_CONNECTION)));
  SWIG_Python_SetConstant(d, "ArClientBase_CLIENT_KEY_LENGTH",SWIG_From_int(static_cast< int >(ArClientBase::CLIENT_KEY_LENGTH)));
  SWIG_Python_SetConstant(d, "ArClientBase_NON_BLOCKING_CONTINUE",SWIG_From_int(static_cast< int >(ArClientBase::NON_BLOCKING_CONTINUE)));
  SWIG_Python_SetConstant(d, "ArClientBase_NON_BLOCKING_CONNECTED",SWIG_From_int(static_cast< int >(ArClientBase::NON_BLOCKING_CONNECTED)));
  SWIG_Python_SetConstant(d, "ArClientBase_NON_BLOCKING_FAILED",SWIG_From_int(static_cast< int >(ArClientBase::NON_BLOCKING_FAILED)));
  SWIG_Python_SetConstant(d, "ArClientCommands_SHUTDOWN",SWIG_From_int(static_cast< int >(ArClientCommands::SHUTDOWN)));
  SWIG_Python_SetConstant(d, "ArClientCommands_INTRODUCTION",SWIG_From_int(static_cast< int >(ArClientCommands::INTRODUCTION)));
  SWIG_Python_SetConstant(d, "ArClientCommands_UDP_INTRODUCTION",SWIG_From_int(static_cast< int >(ArClientCommands::UDP_INTRODUCTION)));
  SWIG_Python_SetConstant(d, "ArClientCommands_UDP_CONFIRMATION",SWIG_From_int(static_cast< int >(ArClientCommands::UDP_CONFIRMATION)));
  SWIG_Python_SetConstant(d, "ArClientCommands_TCP_ONLY",SWIG_From_int(static_cast< int >(ArClientCommands::TCP_ONLY)));
  SWIG_Python_SetConstant(d, "ArClientCommands_LIST",SWIG_From_int(static_cast< int >(ArClientCommands::LIST)));
  SWIG_Python_SetConstant(d, "ArClientCommands_REQUEST",SWIG_From_int(static_cast< int >(ArClientCommands::REQUEST)));
  SWIG_Python_SetConstant(d, "ArClientCommands_REQUESTSTOP",SWIG_From_int(static_cast< int >(ArClientCommands::REQUESTSTOP)));
  SWIG_Python_SetConstant(d, "ArClientFileFromClient_SPEED_AUTO",SWIG_From_int(static_cast< int >(ArClientFileFromClient::SPEED_AUTO)));
  SWIG_Python_SetConstant(d, "ArClientFileFromClient_SPEED_FAST",SWIG_From_int(static_cast< int >(ArClientFileFromClient::SPEED_FAST)));
  SWIG_Python_SetConstant(d, "ArClientFileFromClient_SPEED_SLOW",SWIG_From_int(static_cast< int >(ArClientFileFromClient::SPEED_SLOW)));
  SWIG_Python_SetConstant(d, "ArServerClient_STATE_SENT_INTRO",SWIG_From_int(static_cast< int >(ArServerClient::STATE_SENT_INTRO)));
  SWIG_Python_SetConstant(d, "ArServerClient_STATE_REJECTED",SWIG_From_int(static_cast< int >(ArServerClient::STATE_REJECTED)));
  SWIG_Python_SetConstant(d, "ArServerClient_STATE_CONNECTED",SWIG_From_int(static_cast< int >(ArServerClient::STATE_CONNECTED)));
  SWIG_Python_SetConstant(d, "ArServerClient_STATE_DISCONNECTED",SWIG_From_int(static_cast< int >(ArServerClient::STATE_DISCONNECTED)));
  SWIG_Python_SetConstant(d, "ArServerCommands_SHUTDOWN",SWIG_From_int(static_cast< int >(ArServerCommands::SHUTDOWN)));
  SWIG_Python_SetConstant(d, "ArServerCommands_INTRODUCTION",SWIG_From_int(static_cast< int >(ArServerCommands::INTRODUCTION)));
  SWIG_Python_SetConstant(d, "ArServerCommands_UDP_INTRODUCTION",SWIG_From_int(static_cast< int >(ArServerCommands::UDP_INTRODUCTION)));
  SWIG_Python_SetConstant(d, "ArServerCommands_UDP_CONFIRMATION",SWIG_From_int(static_cast< int >(ArServerCommands::UDP_CONFIRMATION)));
  SWIG_Python_SetConstant(d, "ArServerCommands_CONNECTED",SWIG_From_int(static_cast< int >(ArServerCommands::CONNECTED)));
  SWIG_Python_SetConstant(d, "ArServerCommands_REJECTED",SWIG_From_int(static_cast< int >(ArServerCommands::REJECTED)));
  SWIG_Python_SetConstant(d, "ArServerCommands_TCP_ONLY",SWIG_From_int(static_cast< int >(ArServerCommands::TCP_ONLY)));
  SWIG_Python_SetConstant(d, "ArServerCommands_LIST",SWIG_From_int(static_cast< int >(ArServerCommands::LIST)));
  SWIG_Python_SetConstant(d, "ArServerCommands_LISTSINGLE",SWIG_From_int(static_cast< int >(ArServerCommands::LISTSINGLE)));
  SWIG_Python_SetConstant(d, "ArServerCommands_LISTARGRET",SWIG_From_int(static_cast< int >(ArServerCommands::LISTARGRET)));
  SWIG_Python_SetConstant(d, "ArServerCommands_LISTARGRETSINGLE",SWIG_From_int(static_cast< int >(ArServerCommands::LISTARGRETSINGLE)));
  SWIG_Python_SetConstant(d, "ArServerCommands_LISTGROUPANDFLAGS",SWIG_From_int(static_cast< int >(ArServerCommands::LISTGROUPANDFLAGS)));
  SWIG_Python_SetConstant(d, "ArServerCommands_LISTGROUPANDFLAGSSINGLE",SWIG_From_int(static_cast< int >(ArServerCommands::LISTGROUPANDFLAGSSINGLE)));
  SWIG_Python_SetConstant(d, "ArServerCommands_TYPE_UNSPECIFIED",SWIG_From_int(static_cast< int >(ArServerCommands::TYPE_UNSPECIFIED)));
  SWIG_Python_SetConstant(d, "ArServerCommands_TYPE_REAL",SWIG_From_int(static_cast< int >(ArServerCommands::TYPE_REAL)));
  SWIG_Python_SetConstant(d, "ArServerCommands_TYPE_SIMULATED",SWIG_From_int(static_cast< int >(ArServerCommands::TYPE_SIMULATED)));
  SWIG_Python_SetConstant(d, "ArServerCommands_TYPE_NONE",SWIG_From_int(static_cast< int >(ArServerCommands::TYPE_NONE)));
  SWIG_Python_SetConstant(d, "ArServerHandlerCommMonitor_MIN_HEARTBEAT_INTERVAL",SWIG_From_int(static_cast< int >(ArServerHandlerCommMonitor::MIN_HEARTBEAT_INTERVAL)));
  SWIG_Python_SetConstant(d, "ArServerHandlerCommMonitor_DEFAULT_HEARTBEAT_INTERVAL",SWIG_From_int(static_cast< int >(ArServerHandlerCommMonitor::DEFAULT_HEARTBEAT_INTERVAL)));
  SWIG_Python_SetConstant(d, "ArServerHandlerMap_LINES",SWIG_From_int(static_cast< int >(ArServerHandlerMap::LINES)));
  SWIG_Python_SetConstant(d, "ArServerHandlerMap_POINTS",SWIG_From_int(static_cast< int >(ArServerHandlerMap::POINTS)));
  SWIG_Python_SetConstant(d, "ArServerHandlerMap_BOTH",SWIG_From_int(static_cast< int >(ArServerHandlerMap::BOTH)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

